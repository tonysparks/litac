// generated from glfw3.h

@foreign public const GLFW_VERSION_MAJOR : i32;
@foreign public const GLFW_VERSION_MINOR : i32;
@foreign public const GLFW_VERSION_REVISION : i32;
@foreign public const GLFW_TRUE : i32;
@foreign public const GLFW_FALSE : i32;
@foreign public const GLFW_RELEASE : i32;
@foreign public const GLFW_PRESS : i32;
@foreign public const GLFW_REPEAT : i32;
@foreign public const GLFW_HAT_CENTERED : i32;
@foreign public const GLFW_HAT_UP : i32;
@foreign public const GLFW_HAT_RIGHT : i32;
@foreign public const GLFW_HAT_DOWN : i32;
@foreign public const GLFW_HAT_LEFT : i32;
@foreign public const GLFW_HAT_RIGHT_UP : i32;
@foreign public const GLFW_HAT_RIGHT_DOWN : i32;
@foreign public const GLFW_HAT_LEFT_UP : i32;
@foreign public const GLFW_HAT_LEFT_DOWN : i32;
@foreign public const GLFW_KEY_UNKNOWN : i32;
@foreign public const GLFW_KEY_SPACE : i32;
@foreign public const GLFW_KEY_APOSTROPHE : i32;
@foreign public const GLFW_KEY_COMMA : i32;
@foreign public const GLFW_KEY_MINUS : i32;
@foreign public const GLFW_KEY_PERIOD : i32;
@foreign public const GLFW_KEY_SLASH : i32;
@foreign public const GLFW_KEY_0 : i32;
@foreign public const GLFW_KEY_1 : i32;
@foreign public const GLFW_KEY_2 : i32;
@foreign public const GLFW_KEY_3 : i32;
@foreign public const GLFW_KEY_4 : i32;
@foreign public const GLFW_KEY_5 : i32;
@foreign public const GLFW_KEY_6 : i32;
@foreign public const GLFW_KEY_7 : i32;
@foreign public const GLFW_KEY_8 : i32;
@foreign public const GLFW_KEY_9 : i32;
@foreign public const GLFW_KEY_SEMICOLON : i32;
@foreign public const GLFW_KEY_EQUAL : i32;
@foreign public const GLFW_KEY_A : i32;
@foreign public const GLFW_KEY_B : i32;
@foreign public const GLFW_KEY_C : i32;
@foreign public const GLFW_KEY_D : i32;
@foreign public const GLFW_KEY_E : i32;
@foreign public const GLFW_KEY_F : i32;
@foreign public const GLFW_KEY_G : i32;
@foreign public const GLFW_KEY_H : i32;
@foreign public const GLFW_KEY_I : i32;
@foreign public const GLFW_KEY_J : i32;
@foreign public const GLFW_KEY_K : i32;
@foreign public const GLFW_KEY_L : i32;
@foreign public const GLFW_KEY_M : i32;
@foreign public const GLFW_KEY_N : i32;
@foreign public const GLFW_KEY_O : i32;
@foreign public const GLFW_KEY_P : i32;
@foreign public const GLFW_KEY_Q : i32;
@foreign public const GLFW_KEY_R : i32;
@foreign public const GLFW_KEY_S : i32;
@foreign public const GLFW_KEY_T : i32;
@foreign public const GLFW_KEY_U : i32;
@foreign public const GLFW_KEY_V : i32;
@foreign public const GLFW_KEY_W : i32;
@foreign public const GLFW_KEY_X : i32;
@foreign public const GLFW_KEY_Y : i32;
@foreign public const GLFW_KEY_Z : i32;
@foreign public const GLFW_KEY_LEFT_BRACKET : i32;
@foreign public const GLFW_KEY_BACKSLASH : i32;
@foreign public const GLFW_KEY_RIGHT_BRACKET : i32;
@foreign public const GLFW_KEY_GRAVE_ACCENT : i32;
@foreign public const GLFW_KEY_WORLD_1 : i32;
@foreign public const GLFW_KEY_WORLD_2 : i32;
@foreign public const GLFW_KEY_ESCAPE : i32;
@foreign public const GLFW_KEY_ENTER : i32;
@foreign public const GLFW_KEY_TAB : i32;
@foreign public const GLFW_KEY_BACKSPACE : i32;
@foreign public const GLFW_KEY_INSERT : i32;
@foreign public const GLFW_KEY_DELETE : i32;
@foreign public const GLFW_KEY_RIGHT : i32;
@foreign public const GLFW_KEY_LEFT : i32;
@foreign public const GLFW_KEY_DOWN : i32;
@foreign public const GLFW_KEY_UP : i32;
@foreign public const GLFW_KEY_PAGE_UP : i32;
@foreign public const GLFW_KEY_PAGE_DOWN : i32;
@foreign public const GLFW_KEY_HOME : i32;
@foreign public const GLFW_KEY_END : i32;
@foreign public const GLFW_KEY_CAPS_LOCK : i32;
@foreign public const GLFW_KEY_SCROLL_LOCK : i32;
@foreign public const GLFW_KEY_NUM_LOCK : i32;
@foreign public const GLFW_KEY_PRINT_SCREEN : i32;
@foreign public const GLFW_KEY_PAUSE : i32;
@foreign public const GLFW_KEY_F1 : i32;
@foreign public const GLFW_KEY_F2 : i32;
@foreign public const GLFW_KEY_F3 : i32;
@foreign public const GLFW_KEY_F4 : i32;
@foreign public const GLFW_KEY_F5 : i32;
@foreign public const GLFW_KEY_F6 : i32;
@foreign public const GLFW_KEY_F7 : i32;
@foreign public const GLFW_KEY_F8 : i32;
@foreign public const GLFW_KEY_F9 : i32;
@foreign public const GLFW_KEY_F10 : i32;
@foreign public const GLFW_KEY_F11 : i32;
@foreign public const GLFW_KEY_F12 : i32;
@foreign public const GLFW_KEY_F13 : i32;
@foreign public const GLFW_KEY_F14 : i32;
@foreign public const GLFW_KEY_F15 : i32;
@foreign public const GLFW_KEY_F16 : i32;
@foreign public const GLFW_KEY_F17 : i32;
@foreign public const GLFW_KEY_F18 : i32;
@foreign public const GLFW_KEY_F19 : i32;
@foreign public const GLFW_KEY_F20 : i32;
@foreign public const GLFW_KEY_F21 : i32;
@foreign public const GLFW_KEY_F22 : i32;
@foreign public const GLFW_KEY_F23 : i32;
@foreign public const GLFW_KEY_F24 : i32;
@foreign public const GLFW_KEY_F25 : i32;
@foreign public const GLFW_KEY_KP_0 : i32;
@foreign public const GLFW_KEY_KP_1 : i32;
@foreign public const GLFW_KEY_KP_2 : i32;
@foreign public const GLFW_KEY_KP_3 : i32;
@foreign public const GLFW_KEY_KP_4 : i32;
@foreign public const GLFW_KEY_KP_5 : i32;
@foreign public const GLFW_KEY_KP_6 : i32;
@foreign public const GLFW_KEY_KP_7 : i32;
@foreign public const GLFW_KEY_KP_8 : i32;
@foreign public const GLFW_KEY_KP_9 : i32;
@foreign public const GLFW_KEY_KP_DECIMAL : i32;
@foreign public const GLFW_KEY_KP_DIVIDE : i32;
@foreign public const GLFW_KEY_KP_MULTIPLY : i32;
@foreign public const GLFW_KEY_KP_SUBTRACT : i32;
@foreign public const GLFW_KEY_KP_ADD : i32;
@foreign public const GLFW_KEY_KP_ENTER : i32;
@foreign public const GLFW_KEY_KP_EQUAL : i32;
@foreign public const GLFW_KEY_LEFT_SHIFT : i32;
@foreign public const GLFW_KEY_LEFT_CONTROL : i32;
@foreign public const GLFW_KEY_LEFT_ALT : i32;
@foreign public const GLFW_KEY_LEFT_SUPER : i32;
@foreign public const GLFW_KEY_RIGHT_SHIFT : i32;
@foreign public const GLFW_KEY_RIGHT_CONTROL : i32;
@foreign public const GLFW_KEY_RIGHT_ALT : i32;
@foreign public const GLFW_KEY_RIGHT_SUPER : i32;
@foreign public const GLFW_KEY_MENU : i32;
@foreign public const GLFW_KEY_LAST : i32;
@foreign public const GLFW_MOD_SHIFT : i32;
@foreign public const GLFW_MOD_CONTROL : i32;
@foreign public const GLFW_MOD_ALT : i32;
@foreign public const GLFW_MOD_SUPER : i32;
@foreign public const GLFW_MOD_CAPS_LOCK : i32;
@foreign public const GLFW_MOD_NUM_LOCK : i32;
@foreign public const GLFW_MOUSE_BUTTON_1 : i32;
@foreign public const GLFW_MOUSE_BUTTON_2 : i32;
@foreign public const GLFW_MOUSE_BUTTON_3 : i32;
@foreign public const GLFW_MOUSE_BUTTON_4 : i32;
@foreign public const GLFW_MOUSE_BUTTON_5 : i32;
@foreign public const GLFW_MOUSE_BUTTON_6 : i32;
@foreign public const GLFW_MOUSE_BUTTON_7 : i32;
@foreign public const GLFW_MOUSE_BUTTON_8 : i32;
@foreign public const GLFW_MOUSE_BUTTON_LAST : i32;
@foreign public const GLFW_MOUSE_BUTTON_LEFT : i32;
@foreign public const GLFW_MOUSE_BUTTON_RIGHT : i32;
@foreign public const GLFW_MOUSE_BUTTON_MIDDLE : i32;
@foreign public const GLFW_JOYSTICK_1 : i32;
@foreign public const GLFW_JOYSTICK_2 : i32;
@foreign public const GLFW_JOYSTICK_3 : i32;
@foreign public const GLFW_JOYSTICK_4 : i32;
@foreign public const GLFW_JOYSTICK_5 : i32;
@foreign public const GLFW_JOYSTICK_6 : i32;
@foreign public const GLFW_JOYSTICK_7 : i32;
@foreign public const GLFW_JOYSTICK_8 : i32;
@foreign public const GLFW_JOYSTICK_9 : i32;
@foreign public const GLFW_JOYSTICK_10 : i32;
@foreign public const GLFW_JOYSTICK_11 : i32;
@foreign public const GLFW_JOYSTICK_12 : i32;
@foreign public const GLFW_JOYSTICK_13 : i32;
@foreign public const GLFW_JOYSTICK_14 : i32;
@foreign public const GLFW_JOYSTICK_15 : i32;
@foreign public const GLFW_JOYSTICK_16 : i32;
@foreign public const GLFW_JOYSTICK_LAST : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_A : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_B : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_X : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_Y : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_LEFT_BUMPER : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_BACK : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_START : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_GUIDE : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_LEFT_THUMB : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_RIGHT_THUMB : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_DPAD_UP : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_DPAD_RIGHT : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_DPAD_DOWN : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_DPAD_LEFT : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_LAST : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_CROSS : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_CIRCLE : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_SQUARE : i32;
@foreign public const GLFW_GAMEPAD_BUTTON_TRIANGLE : i32;
@foreign public const GLFW_GAMEPAD_AXIS_LEFT_X : i32;
@foreign public const GLFW_GAMEPAD_AXIS_LEFT_Y : i32;
@foreign public const GLFW_GAMEPAD_AXIS_RIGHT_X : i32;
@foreign public const GLFW_GAMEPAD_AXIS_RIGHT_Y : i32;
@foreign public const GLFW_GAMEPAD_AXIS_LEFT_TRIGGER : i32;
@foreign public const GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER : i32;
@foreign public const GLFW_GAMEPAD_AXIS_LAST : i32;
@foreign public const GLFW_NO_ERROR : i32;
@foreign public const GLFW_NOT_INITIALIZED : i32;
@foreign public const GLFW_NO_CURRENT_CONTEXT : i32;
@foreign public const GLFW_INVALID_ENUM : i32;
@foreign public const GLFW_INVALID_VALUE : i32;
@foreign public const GLFW_OUT_OF_MEMORY : i32;
@foreign public const GLFW_API_UNAVAILABLE : i32;
@foreign public const GLFW_VERSION_UNAVAILABLE : i32;
@foreign public const GLFW_PLATFORM_ERROR : i32;
@foreign public const GLFW_FORMAT_UNAVAILABLE : i32;
@foreign public const GLFW_NO_WINDOW_CONTEXT : i32;
@foreign public const GLFW_FOCUSED : i32;
@foreign public const GLFW_ICONIFIED : i32;
@foreign public const GLFW_RESIZABLE : i32;
@foreign public const GLFW_VISIBLE : i32;
@foreign public const GLFW_DECORATED : i32;
@foreign public const GLFW_AUTO_ICONIFY : i32;
@foreign public const GLFW_FLOATING : i32;
@foreign public const GLFW_MAXIMIZED : i32;
@foreign public const GLFW_CENTER_CURSOR : i32;
@foreign public const GLFW_TRANSPARENT_FRAMEBUFFER : i32;
@foreign public const GLFW_HOVERED : i32;
@foreign public const GLFW_FOCUS_ON_SHOW : i32;
@foreign public const GLFW_RED_BITS : i32;
@foreign public const GLFW_GREEN_BITS : i32;
@foreign public const GLFW_BLUE_BITS : i32;
@foreign public const GLFW_ALPHA_BITS : i32;
@foreign public const GLFW_DEPTH_BITS : i32;
@foreign public const GLFW_STENCIL_BITS : i32;
@foreign public const GLFW_ACCUM_RED_BITS : i32;
@foreign public const GLFW_ACCUM_GREEN_BITS : i32;
@foreign public const GLFW_ACCUM_BLUE_BITS : i32;
@foreign public const GLFW_ACCUM_ALPHA_BITS : i32;
@foreign public const GLFW_AUX_BUFFERS : i32;
@foreign public const GLFW_STEREO : i32;
@foreign public const GLFW_SAMPLES : i32;
@foreign public const GLFW_SRGB_CAPABLE : i32;
@foreign public const GLFW_REFRESH_RATE : i32;
@foreign public const GLFW_DOUBLEBUFFER : i32;
@foreign public const GLFW_CLIENT_API : i32;
@foreign public const GLFW_CONTEXT_VERSION_MAJOR : i32;
@foreign public const GLFW_CONTEXT_VERSION_MINOR : i32;
@foreign public const GLFW_CONTEXT_REVISION : i32;
@foreign public const GLFW_CONTEXT_ROBUSTNESS : i32;
@foreign public const GLFW_OPENGL_FORWARD_COMPAT : i32;
@foreign public const GLFW_OPENGL_DEBUG_CONTEXT : i32;
@foreign public const GLFW_OPENGL_PROFILE : i32;
@foreign public const GLFW_CONTEXT_RELEASE_BEHAVIOR : i32;
@foreign public const GLFW_CONTEXT_NO_ERROR : i32;
@foreign public const GLFW_CONTEXT_CREATION_API : i32;
@foreign public const GLFW_SCALE_TO_MONITOR : i32;
@foreign public const GLFW_COCOA_RETINA_FRAMEBUFFER : i32;
@foreign public const GLFW_COCOA_FRAME_NAME : i32;
@foreign public const GLFW_COCOA_GRAPHICS_SWITCHING : i32;
@foreign public const GLFW_X11_CLASS_NAME : i32;
@foreign public const GLFW_X11_INSTANCE_NAME : i32;
@foreign public const GLFW_NO_API : i32;
@foreign public const GLFW_OPENGL_API : i32;
@foreign public const GLFW_OPENGL_ES_API : i32;
@foreign public const GLFW_NO_ROBUSTNESS : i32;
@foreign public const GLFW_NO_RESET_NOTIFICATION : i32;
@foreign public const GLFW_LOSE_CONTEXT_ON_RESET : i32;
@foreign public const GLFW_OPENGL_ANY_PROFILE : i32;
@foreign public const GLFW_OPENGL_CORE_PROFILE : i32;
@foreign public const GLFW_OPENGL_COMPAT_PROFILE : i32;
@foreign public const GLFW_CURSOR : i32;
@foreign public const GLFW_STICKY_KEYS : i32;
@foreign public const GLFW_STICKY_MOUSE_BUTTONS : i32;
@foreign public const GLFW_LOCK_KEY_MODS : i32;
@foreign public const GLFW_RAW_MOUSE_MOTION : i32;
@foreign public const GLFW_CURSOR_NORMAL : i32;
@foreign public const GLFW_CURSOR_HIDDEN : i32;
@foreign public const GLFW_CURSOR_DISABLED : i32;
@foreign public const GLFW_ANY_RELEASE_BEHAVIOR : i32;
@foreign public const GLFW_RELEASE_BEHAVIOR_FLUSH : i32;
@foreign public const GLFW_RELEASE_BEHAVIOR_NONE : i32;
@foreign public const GLFW_NATIVE_CONTEXT_API : i32;
@foreign public const GLFW_EGL_CONTEXT_API : i32;
@foreign public const GLFW_OSMESA_CONTEXT_API : i32;
@foreign public const GLFW_ARROW_CURSOR : i32;
@foreign public const GLFW_IBEAM_CURSOR : i32;
@foreign public const GLFW_CROSSHAIR_CURSOR : i32;
@foreign public const GLFW_HAND_CURSOR : i32;
@foreign public const GLFW_HRESIZE_CURSOR : i32;
@foreign public const GLFW_VRESIZE_CURSOR : i32;
@foreign public const GLFW_CONNECTED : i32;
@foreign public const GLFW_DISCONNECTED : i32;
@foreign public const GLFW_JOYSTICK_HAT_BUTTONS : i32;
@foreign public const GLFW_COCOA_CHDIR_RESOURCES : i32;
@foreign public const GLFW_COCOA_MENUBAR : i32;
@foreign public const GLFW_DONT_CARE : i32;
@foreign public typedef func() : void as GLFWglproc;
@foreign public typedef func() : void as GLFWvkproc;

@foreign public struct GLFWmonitor;


@foreign public struct GLFWwindow;


@foreign public struct GLFWcursor;

@foreign public typedef func(i32, char const*) : void as GLFWerrorfun;
@foreign public typedef func(GLFWwindow*, i32, i32) : void as GLFWwindowposfun;
@foreign public typedef func(GLFWwindow*, i32, i32) : void as GLFWwindowsizefun;
@foreign public typedef func(GLFWwindow*) : void as GLFWwindowclosefun;
@foreign public typedef func(GLFWwindow*) : void as GLFWwindowrefreshfun;
@foreign public typedef func(GLFWwindow*, i32) : void as GLFWwindowfocusfun;
@foreign public typedef func(GLFWwindow*, i32) : void as GLFWwindowiconifyfun;
@foreign public typedef func(GLFWwindow*, i32) : void as GLFWwindowmaximizefun;
@foreign public typedef func(GLFWwindow*, i32, i32) : void as GLFWframebuffersizefun;
@foreign public typedef func(GLFWwindow*, f32, f32) : void as GLFWwindowcontentscalefun;
@foreign public typedef func(GLFWwindow*, i32, i32, i32) : void as GLFWmousebuttonfun;
@foreign public typedef func(GLFWwindow*, f64, f64) : void as GLFWcursorposfun;
@foreign public typedef func(GLFWwindow*, i32) : void as GLFWcursorenterfun;
@foreign public typedef func(GLFWwindow*, f64, f64) : void as GLFWscrollfun;
@foreign public typedef func(GLFWwindow*, i32, i32, i32, i32) : void as GLFWkeyfun;
@foreign public typedef func(GLFWwindow*, u32) : void as GLFWcharfun;
@foreign public typedef func(GLFWwindow*, u32, i32) : void as GLFWcharmodsfun;
@foreign public typedef func(GLFWwindow*, i32, []char const*) : void as GLFWdropfun;
@foreign public typedef func(GLFWmonitor*, i32) : void as GLFWmonitorfun;
@foreign public typedef func(i32, i32) : void as GLFWjoystickfun;

@foreign public struct GLFWvidmode {
    width: i32
    height: i32
    redBits: i32
    greenBits: i32
    blueBits: i32
    refreshRate: i32
}


@foreign public struct GLFWgammaramp {
    red: u16*
    green: u16*
    blue: u16*
    size: u32
}


@foreign public struct GLFWimage {
    width: i32
    height: i32
    pixels: u8*
}


@foreign public struct GLFWgamepadstate {
    buttons: [15]u8
    axes: [6]f32
}

@foreign public func glfwInit() : i32;
@foreign public func glfwTerminate() : void;
@foreign public func glfwInitHint(hint: i32, value: i32) : void;
@foreign public func glfwGetVersion(major: i32*, minor: i32*, rev: i32*) : void;
@foreign public func glfwGetVersionString() : char const*;
@foreign public func glfwGetError(description: char** const) : i32;
@foreign public func glfwSetErrorCallback(callback: GLFWerrorfun) : GLFWerrorfun;
@foreign public func glfwGetMonitors(count: i32*) : GLFWmonitor**;
@foreign public func glfwGetPrimaryMonitor() : GLFWmonitor*;
@foreign public func glfwGetMonitorPos(monitor: GLFWmonitor*, xpos: i32*, ypos: i32*) : void;
@foreign public func glfwGetMonitorWorkarea(monitor: GLFWmonitor*, xpos: i32*, ypos: i32*, width: i32*, height: i32*) : void;
@foreign public func glfwGetMonitorPhysicalSize(monitor: GLFWmonitor*, widthMM: i32*, heightMM: i32*) : void;
@foreign public func glfwGetMonitorContentScale(monitor: GLFWmonitor*, xscale: f32*, yscale: f32*) : void;
@foreign public func glfwGetMonitorName(monitor: GLFWmonitor*) : char const*;
@foreign public func glfwSetMonitorUserPointer(monitor: GLFWmonitor*, pointer: void*) : void;
@foreign public func glfwGetMonitorUserPointer(monitor: GLFWmonitor*) : void*;
@foreign public func glfwSetMonitorCallback(callback: GLFWmonitorfun) : GLFWmonitorfun;
@foreign public func glfwGetVideoModes(monitor: GLFWmonitor*, count: i32*) : GLFWvidmode* const;
@foreign public func glfwGetVideoMode(monitor: GLFWmonitor*) : GLFWvidmode* const;
@foreign public func glfwSetGamma(monitor: GLFWmonitor*, gamma: f32) : void;
@foreign public func glfwGetGammaRamp(monitor: GLFWmonitor*) : GLFWgammaramp* const;
@foreign public func glfwSetGammaRamp(monitor: GLFWmonitor*, ramp: GLFWgammaramp* const) : void;
@foreign public func glfwDefaultWindowHints() : void;
@foreign public func glfwWindowHint(hint: i32, value: i32) : void;
@foreign public func glfwWindowHintString(hint: i32, value: char const*) : void;
@foreign public func glfwCreateWindow(width: i32, height: i32, title: char const*, monitor: GLFWmonitor*, share: GLFWwindow*) : GLFWwindow*;
@foreign public func glfwDestroyWindow(window: GLFWwindow*) : void;
@foreign public func glfwWindowShouldClose(window: GLFWwindow*) : i32;
@foreign public func glfwSetWindowShouldClose(window: GLFWwindow*, value: i32) : void;
@foreign public func glfwSetWindowTitle(window: GLFWwindow*, title: char const*) : void;
@foreign public func glfwSetWindowIcon(window: GLFWwindow*, count: i32, images: GLFWimage* const) : void;
@foreign public func glfwGetWindowPos(window: GLFWwindow*, xpos: i32*, ypos: i32*) : void;
@foreign public func glfwSetWindowPos(window: GLFWwindow*, xpos: i32, ypos: i32) : void;
@foreign public func glfwGetWindowSize(window: GLFWwindow*, width: i32*, height: i32*) : void;
@foreign public func glfwSetWindowSizeLimits(window: GLFWwindow*, minwidth: i32, minheight: i32, maxwidth: i32, maxheight: i32) : void;
@foreign public func glfwSetWindowAspectRatio(window: GLFWwindow*, numer: i32, denom: i32) : void;
@foreign public func glfwSetWindowSize(window: GLFWwindow*, width: i32, height: i32) : void;
@foreign public func glfwGetFramebufferSize(window: GLFWwindow*, width: i32*, height: i32*) : void;
@foreign public func glfwGetWindowFrameSize(window: GLFWwindow*, left: i32*, top: i32*, right: i32*, bottom: i32*) : void;
@foreign public func glfwGetWindowContentScale(window: GLFWwindow*, xscale: f32*, yscale: f32*) : void;
@foreign public func glfwGetWindowOpacity(window: GLFWwindow*) : f32;
@foreign public func glfwSetWindowOpacity(window: GLFWwindow*, opacity: f32) : void;
@foreign public func glfwIconifyWindow(window: GLFWwindow*) : void;
@foreign public func glfwRestoreWindow(window: GLFWwindow*) : void;
@foreign public func glfwMaximizeWindow(window: GLFWwindow*) : void;
@foreign public func glfwShowWindow(window: GLFWwindow*) : void;
@foreign public func glfwHideWindow(window: GLFWwindow*) : void;
@foreign public func glfwFocusWindow(window: GLFWwindow*) : void;
@foreign public func glfwRequestWindowAttention(window: GLFWwindow*) : void;
@foreign public func glfwGetWindowMonitor(window: GLFWwindow*) : GLFWmonitor*;
@foreign public func glfwSetWindowMonitor(window: GLFWwindow*, monitor: GLFWmonitor*, xpos: i32, ypos: i32, width: i32, height: i32, refreshRate: i32) : void;
@foreign public func glfwGetWindowAttrib(window: GLFWwindow*, attrib: i32) : i32;
@foreign public func glfwSetWindowAttrib(window: GLFWwindow*, attrib: i32, value: i32) : void;
@foreign public func glfwSetWindowUserPointer(window: GLFWwindow*, pointer: void*) : void;
@foreign public func glfwGetWindowUserPointer(window: GLFWwindow*) : void*;
@foreign public func glfwSetWindowPosCallback(window: GLFWwindow*, callback: GLFWwindowposfun) : GLFWwindowposfun;
@foreign public func glfwSetWindowSizeCallback(window: GLFWwindow*, callback: GLFWwindowsizefun) : GLFWwindowsizefun;
@foreign public func glfwSetWindowCloseCallback(window: GLFWwindow*, callback: GLFWwindowclosefun) : GLFWwindowclosefun;
@foreign public func glfwSetWindowRefreshCallback(window: GLFWwindow*, callback: GLFWwindowrefreshfun) : GLFWwindowrefreshfun;
@foreign public func glfwSetWindowFocusCallback(window: GLFWwindow*, callback: GLFWwindowfocusfun) : GLFWwindowfocusfun;
@foreign public func glfwSetWindowIconifyCallback(window: GLFWwindow*, callback: GLFWwindowiconifyfun) : GLFWwindowiconifyfun;
@foreign public func glfwSetWindowMaximizeCallback(window: GLFWwindow*, callback: GLFWwindowmaximizefun) : GLFWwindowmaximizefun;
@foreign public func glfwSetFramebufferSizeCallback(window: GLFWwindow*, callback: GLFWframebuffersizefun) : GLFWframebuffersizefun;
@foreign public func glfwSetWindowContentScaleCallback(window: GLFWwindow*, callback: GLFWwindowcontentscalefun) : GLFWwindowcontentscalefun;
@foreign public func glfwPollEvents() : void;
@foreign public func glfwWaitEvents() : void;
@foreign public func glfwWaitEventsTimeout(timeout: f64) : void;
@foreign public func glfwPostEmptyEvent() : void;
@foreign public func glfwGetInputMode(window: GLFWwindow*, mode: i32) : i32;
@foreign public func glfwSetInputMode(window: GLFWwindow*, mode: i32, value: i32) : void;
@foreign public func glfwRawMouseMotionSupported() : i32;
@foreign public func glfwGetKeyName(key: i32, scancode: i32) : char const*;
@foreign public func glfwGetKeyScancode(key: i32) : i32;
@foreign public func glfwGetKey(window: GLFWwindow*, key: i32) : i32;
@foreign public func glfwGetMouseButton(window: GLFWwindow*, button: i32) : i32;
@foreign public func glfwGetCursorPos(window: GLFWwindow*, xpos: f64*, ypos: f64*) : void;
@foreign public func glfwSetCursorPos(window: GLFWwindow*, xpos: f64, ypos: f64) : void;
@foreign public func glfwCreateCursor(image: GLFWimage* const, xhot: i32, yhot: i32) : GLFWcursor*;
@foreign public func glfwCreateStandardCursor(shape: i32) : GLFWcursor*;
@foreign public func glfwDestroyCursor(cursor: GLFWcursor*) : void;
@foreign public func glfwSetCursor(window: GLFWwindow*, cursor: GLFWcursor*) : void;
@foreign public func glfwSetKeyCallback(window: GLFWwindow*, callback: GLFWkeyfun) : GLFWkeyfun;
@foreign public func glfwSetCharCallback(window: GLFWwindow*, callback: GLFWcharfun) : GLFWcharfun;
@foreign public func glfwSetCharModsCallback(window: GLFWwindow*, callback: GLFWcharmodsfun) : GLFWcharmodsfun;
@foreign public func glfwSetMouseButtonCallback(window: GLFWwindow*, callback: GLFWmousebuttonfun) : GLFWmousebuttonfun;
@foreign public func glfwSetCursorPosCallback(window: GLFWwindow*, callback: GLFWcursorposfun) : GLFWcursorposfun;
@foreign public func glfwSetCursorEnterCallback(window: GLFWwindow*, callback: GLFWcursorenterfun) : GLFWcursorenterfun;
@foreign public func glfwSetScrollCallback(window: GLFWwindow*, callback: GLFWscrollfun) : GLFWscrollfun;
@foreign public func glfwSetDropCallback(window: GLFWwindow*, callback: GLFWdropfun) : GLFWdropfun;
@foreign public func glfwJoystickPresent(jid: i32) : i32;
@foreign public func glfwGetJoystickAxes(jid: i32, count: i32*) : f32 const*;
@foreign public func glfwGetJoystickButtons(jid: i32, count: i32*) : u8 const*;
@foreign public func glfwGetJoystickHats(jid: i32, count: i32*) : u8 const*;
@foreign public func glfwGetJoystickName(jid: i32) : char const*;
@foreign public func glfwGetJoystickGUID(jid: i32) : char const*;
@foreign public func glfwSetJoystickUserPointer(jid: i32, pointer: void*) : void;
@foreign public func glfwGetJoystickUserPointer(jid: i32) : void*;
@foreign public func glfwJoystickIsGamepad(jid: i32) : i32;
@foreign public func glfwSetJoystickCallback(callback: GLFWjoystickfun) : GLFWjoystickfun;
@foreign public func glfwUpdateGamepadMappings(string: char const*) : i32;
@foreign public func glfwGetGamepadName(jid: i32) : char const*;
@foreign public func glfwGetGamepadState(jid: i32, state: GLFWgamepadstate*) : i32;
@foreign public func glfwSetClipboardString(window: GLFWwindow*, string: char const*) : void;
@foreign public func glfwGetClipboardString(window: GLFWwindow*) : char const*;
@foreign public func glfwGetTime() : f64;
@foreign public func glfwSetTime(time: f64) : void;
@foreign public func glfwGetTimerValue() : u64;
@foreign public func glfwGetTimerFrequency() : u64;
@foreign public func glfwMakeContextCurrent(window: GLFWwindow*) : void;
@foreign public func glfwGetCurrentContext() : GLFWwindow*;
@foreign public func glfwSwapBuffers(window: GLFWwindow*) : void;
@foreign public func glfwSwapInterval(interval: i32) : void;
@foreign public func glfwExtensionSupported(extension: char const*) : i32;
@foreign public func glfwGetProcAddress(procname: char const*) : GLFWglproc;
/*
@foreign public func glfwVulkanSupported() : i32;
@foreign public func glfwGetRequiredInstanceExtensions(count: u32*) : char** const;
@foreign public func glfwGetInstanceProcAddress(instance: VkInstance, procname: char const*) : GLFWvkproc;
@foreign public func glfwGetPhysicalDevicePresentationSupport(instance: VkInstance, device: VkPhysicalDevice, queuefamily: u32) : i32;
@foreign public func glfwCreateWindowSurface(instance: VkInstance, window: GLFWwindow*, allocator: VkAllocationCallbacks* const, surface: VkSurfaceKHR*) : VkResult;
*/
