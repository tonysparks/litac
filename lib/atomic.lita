@include("<stdatomic.h>");

@foreign
func atomic_init<T>(obj: *T, desired: T);

@foreign
func atomic_store<T>(obj: *T, desired: T);

@foreign
func atomic_load<T>(obj: *T) : T;

@foreign
func atomic_exchange<T>(obj: *T, desired: T) : T;

@foreign
func atomic_fetch_add<T>(obj: *T, amount: T) : T;

@foreign
func atomic_fetch_sub<T>(obj: *T, amount: T) : T;

public struct Atomic<T> {
    @atomic
    value: T
}


public func (this: *Atomic<T>) init<T>(value: T) {
    atomic_init<T>(&this.value, value)
}

public func (this: *Atomic<T>) set<T>(value: T) {
    atomic_store<T>(&this.value, value)
}

public func (this: *Atomic<T>) getSet<T>(value: T) : T {
    return atomic_exchange<T>(&this.value, value)
}

public func (this: *Atomic<T>) get<T>() : T {
    return atomic_load<T>(&this.value)
}

public func (this: *Atomic<T>) getAdd<T>(amount: T) : T {
    return atomic_fetch_add<T>(&this.value)
}

public func (this: *Atomic<T>) getSub<T>(amount: T) : T {
    return atomic_fetch_sub<T>(&this.value)
}