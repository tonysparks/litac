// opengl
/*
@raw("""
//#include <windows.h>
//#include <GL/gl.h>

#if defined (_WIN32)
#pragma comment(lib, "winmm.lib")
#endif

#if defined(__APPLE__)
    #include <OpenGL/gl.h>      // OpenGL 1.1 library for OSX
    #include <OpenGL/glext.h>
#else
    // APIENTRY for OpenGL function pointer declarations is required
    #ifndef APIENTRY
        #if defined(_WIN32)
            #define APIENTRY __stdcall
        #else
            #define APIENTRY
        #endif
    #endif
    // WINGDIAPI definition. Some Windows OpenGL headers need it
    #if !defined(WINGDIAPI) && defined(_WIN32)
        #define WINGDIAPI __declspec(dllimport)
    #endif

    #include <GL/gl.h>              // OpenGL 1.1 library
#endif

""");
*/

//import using "gl";
//import using "glext";

import using "glad"

import "io"
public func glCheckErrorPrint() : bool {
    var hasError = false
    var hadError = false

    do {
        var err = glGetError()
        var msg: *char = null;
        switch(err) {
            case GL_NO_ERROR:               msg=null;                   break;
            case GL_INVALID_OPERATION:      msg="INVALID_OPERATION";    break;
            case GL_INVALID_ENUM:           msg="INVALID_ENUM";         break;
            case GL_INVALID_VALUE:          msg="INVALID_VALUE";        break;
            case GL_OUT_OF_MEMORY:          msg="OUT_OF_MEMORY";        break;
            //case GL_STACK_UNDERFLOW:        msg="GL_STACK_UNDERFLOW";   break;
            //case GL_STACK_OVERFLOW:         msg="GL_STACK_OVERFLOW";    break;
            case GL_INVALID_FRAMEBUFFER_OPERATION:  msg="INVALID_FRAMEBUFFER_OPERATION";  break;
            default: {
                msg="Unknown error";
            }
        }

        if(msg) {
            printf("OpenGL error: '%s'\n", msg)
            hadError = true
            hasError = true
        }
        else {
            hasError = false
        }
    }
    while(hasError);

    return hadError;
}