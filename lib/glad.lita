@foreign
public struct gladGLversionStruct {
   major: i32
   minor: i32
}
@foreign public typedef func(char const*) : void* as GLADloadproc;
@foreign public var GLVersion: gladGLversionStruct;

@foreign
public func gladLoadGLLoader(p0: GLADloadproc) : i32;
@foreign public typedef void as GLenum;
@foreign public typedef void as GLboolean;
@foreign public typedef void as GLbitfield;
@foreign public typedef void as GLvoid;
@foreign public typedef void as GLbyte;
@foreign public typedef void as GLshort;
@foreign public typedef void as GLint;
@foreign public typedef void as GLclampx;
@foreign public typedef void as GLubyte;
@foreign public typedef void as GLushort;
@foreign public typedef void as GLuint;
@foreign public typedef void as GLsizei;
@foreign public typedef void as GLfloat;
@foreign public typedef void as GLclampf;
@foreign public typedef void as GLdouble;
@foreign public typedef void as GLclampd;
@foreign public typedef void as GLeglImageOES;
@foreign public typedef void as GLchar;
@foreign public typedef void as GLcharARB;
@foreign public typedef void as GLhandleARB;
@foreign public typedef void as GLhalfARB;
@foreign public typedef void as GLhalf;
@foreign public typedef void as GLfixed;
@foreign public typedef void as GLintptr;
@foreign public typedef void as GLsizeiptr;
@foreign public typedef void as GLint64;
@foreign public typedef void as GLuint64;
@foreign public typedef void as GLintptrARB;
@foreign public typedef void as GLsizeiptrARB;
@foreign public typedef void as GLint64EXT;
@foreign public typedef void as GLuint64EXT;

@foreign
public struct __GLsync {
}
@foreign public typedef void as GLsync;

@foreign
public struct _cl_context {
}

@foreign
public struct _cl_event {
}
@foreign public typedef func(GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar const*, void const*) : void as GLDEBUGPROC;
@foreign public typedef func(GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar const*, void const*) : void as GLDEBUGPROCARB;
@foreign public typedef func(GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar const*, void const*) : void as GLDEBUGPROCKHR;
@foreign public typedef func(GLuint, GLenum, GLenum, GLsizei, GLchar const*, void*) : void as GLDEBUGPROCAMD;
@foreign public typedef void as GLhalfNV;
@foreign public typedef void as GLvdpauSurfaceNV;
@foreign public var GLAD_GL_VERSION_1_0: i32;
@foreign public typedef func(GLenum) : void as PFNGLCULLFACEPROC;
@foreign public var glad_glCullFace: PFNGLCULLFACEPROC;
@foreign public typedef func(GLenum) : void as PFNGLFRONTFACEPROC;
@foreign public var glad_glFrontFace: PFNGLFRONTFACEPROC;
@foreign public typedef func(GLenum, GLenum) : void as PFNGLHINTPROC;
@foreign public var glad_glHint: PFNGLHINTPROC;
@foreign public typedef func(GLfloat) : void as PFNGLLINEWIDTHPROC;
@foreign public var glad_glLineWidth: PFNGLLINEWIDTHPROC;
@foreign public typedef func(GLfloat) : void as PFNGLPOINTSIZEPROC;
@foreign public var glad_glPointSize: PFNGLPOINTSIZEPROC;
@foreign public typedef func(GLenum, GLenum) : void as PFNGLPOLYGONMODEPROC;
@foreign public var glad_glPolygonMode: PFNGLPOLYGONMODEPROC;
@foreign public typedef func(GLint, GLint, GLsizei, GLsizei) : void as PFNGLSCISSORPROC;
@foreign public var glad_glScissor: PFNGLSCISSORPROC;
@foreign public typedef func(GLenum, GLenum, GLfloat) : void as PFNGLTEXPARAMETERFPROC;
@foreign public var glad_glTexParameterf: PFNGLTEXPARAMETERFPROC;
@foreign public typedef func(GLenum, GLenum, GLfloat const*) : void as PFNGLTEXPARAMETERFVPROC;
@foreign public var glad_glTexParameterfv: PFNGLTEXPARAMETERFVPROC;
@foreign public typedef func(GLenum, GLenum, GLint) : void as PFNGLTEXPARAMETERIPROC;
@foreign public var glad_glTexParameteri: PFNGLTEXPARAMETERIPROC;
@foreign public typedef func(GLenum, GLenum, GLint const*) : void as PFNGLTEXPARAMETERIVPROC;
@foreign public var glad_glTexParameteriv: PFNGLTEXPARAMETERIVPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void const*) : void as PFNGLTEXIMAGE1DPROC;
@foreign public var glad_glTexImage1D: PFNGLTEXIMAGE1DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void const*) : void as PFNGLTEXIMAGE2DPROC;
@foreign public var glad_glTexImage2D: PFNGLTEXIMAGE2DPROC;
@foreign public typedef func(GLenum) : void as PFNGLDRAWBUFFERPROC;
@foreign public var glad_glDrawBuffer: PFNGLDRAWBUFFERPROC;
@foreign public typedef func(GLbitfield) : void as PFNGLCLEARPROC;
@foreign public var glad_glClear: PFNGLCLEARPROC;
@foreign public typedef func(GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLCLEARCOLORPROC;
@foreign public var glad_glClearColor: PFNGLCLEARCOLORPROC;
@foreign public typedef func(GLint) : void as PFNGLCLEARSTENCILPROC;
@foreign public var glad_glClearStencil: PFNGLCLEARSTENCILPROC;
@foreign public typedef func(GLdouble) : void as PFNGLCLEARDEPTHPROC;
@foreign public var glad_glClearDepth: PFNGLCLEARDEPTHPROC;
@foreign public typedef func(GLuint) : void as PFNGLSTENCILMASKPROC;
@foreign public var glad_glStencilMask: PFNGLSTENCILMASKPROC;
@foreign public typedef func(GLboolean, GLboolean, GLboolean, GLboolean) : void as PFNGLCOLORMASKPROC;
@foreign public var glad_glColorMask: PFNGLCOLORMASKPROC;
@foreign public typedef func(GLboolean) : void as PFNGLDEPTHMASKPROC;
@foreign public var glad_glDepthMask: PFNGLDEPTHMASKPROC;
@foreign public typedef func(GLenum) : void as PFNGLDISABLEPROC;
@foreign public var glad_glDisable: PFNGLDISABLEPROC;
@foreign public typedef func(GLenum) : void as PFNGLENABLEPROC;
@foreign public var glad_glEnable: PFNGLENABLEPROC;
@foreign public typedef func() : void as PFNGLFINISHPROC;
@foreign public var glad_glFinish: PFNGLFINISHPROC;
@foreign public typedef func() : void as PFNGLFLUSHPROC;
@foreign public var glad_glFlush: PFNGLFLUSHPROC;
@foreign public typedef func(GLenum, GLenum) : void as PFNGLBLENDFUNCPROC;
@foreign public var glad_glBlendFunc: PFNGLBLENDFUNCPROC;
@foreign public typedef func(GLenum) : void as PFNGLLOGICOPPROC;
@foreign public var glad_glLogicOp: PFNGLLOGICOPPROC;
@foreign public typedef func(GLenum, GLint, GLuint) : void as PFNGLSTENCILFUNCPROC;
@foreign public var glad_glStencilFunc: PFNGLSTENCILFUNCPROC;
@foreign public typedef func(GLenum, GLenum, GLenum) : void as PFNGLSTENCILOPPROC;
@foreign public var glad_glStencilOp: PFNGLSTENCILOPPROC;
@foreign public typedef func(GLenum) : void as PFNGLDEPTHFUNCPROC;
@foreign public var glad_glDepthFunc: PFNGLDEPTHFUNCPROC;
@foreign public typedef func(GLenum, GLfloat) : void as PFNGLPIXELSTOREFPROC;
@foreign public var glad_glPixelStoref: PFNGLPIXELSTOREFPROC;
@foreign public typedef func(GLenum, GLint) : void as PFNGLPIXELSTOREIPROC;
@foreign public var glad_glPixelStorei: PFNGLPIXELSTOREIPROC;
@foreign public typedef func(GLenum) : void as PFNGLREADBUFFERPROC;
@foreign public var glad_glReadBuffer: PFNGLREADBUFFERPROC;
@foreign public typedef func(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*) : void as PFNGLREADPIXELSPROC;
@foreign public var glad_glReadPixels: PFNGLREADPIXELSPROC;
@foreign public typedef func(GLenum, GLboolean*) : void as PFNGLGETBOOLEANVPROC;
@foreign public var glad_glGetBooleanv: PFNGLGETBOOLEANVPROC;
@foreign public typedef func(GLenum, GLdouble*) : void as PFNGLGETDOUBLEVPROC;
@foreign public var glad_glGetDoublev: PFNGLGETDOUBLEVPROC;
@foreign public typedef func() : GLenum as PFNGLGETERRORPROC;
@foreign public var glad_glGetError: PFNGLGETERRORPROC;
@foreign public typedef func(GLenum, GLfloat*) : void as PFNGLGETFLOATVPROC;
@foreign public var glad_glGetFloatv: PFNGLGETFLOATVPROC;
@foreign public typedef func(GLenum, GLint*) : void as PFNGLGETINTEGERVPROC;
@foreign public var glad_glGetIntegerv: PFNGLGETINTEGERVPROC;
@foreign public typedef func(GLenum) : GLubyte const* as PFNGLGETSTRINGPROC;
@foreign public var glad_glGetString: PFNGLGETSTRINGPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLenum, void*) : void as PFNGLGETTEXIMAGEPROC;
@foreign public var glad_glGetTexImage: PFNGLGETTEXIMAGEPROC;
@foreign public typedef func(GLenum, GLenum, GLfloat*) : void as PFNGLGETTEXPARAMETERFVPROC;
@foreign public var glad_glGetTexParameterfv: PFNGLGETTEXPARAMETERFVPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETTEXPARAMETERIVPROC;
@foreign public var glad_glGetTexParameteriv: PFNGLGETTEXPARAMETERIVPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLfloat*) : void as PFNGLGETTEXLEVELPARAMETERFVPROC;
@foreign public var glad_glGetTexLevelParameterfv: PFNGLGETTEXLEVELPARAMETERFVPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLint*) : void as PFNGLGETTEXLEVELPARAMETERIVPROC;
@foreign public var glad_glGetTexLevelParameteriv: PFNGLGETTEXLEVELPARAMETERIVPROC;
@foreign public typedef func(GLenum) : GLboolean as PFNGLISENABLEDPROC;
@foreign public var glad_glIsEnabled: PFNGLISENABLEDPROC;
@foreign public typedef func(GLdouble, GLdouble) : void as PFNGLDEPTHRANGEPROC;
@foreign public var glad_glDepthRange: PFNGLDEPTHRANGEPROC;
@foreign public typedef func(GLint, GLint, GLsizei, GLsizei) : void as PFNGLVIEWPORTPROC;
@foreign public var glad_glViewport: PFNGLVIEWPORTPROC;
@foreign public var GLAD_GL_VERSION_1_1: i32;
@foreign public typedef func(GLenum, GLint, GLsizei) : void as PFNGLDRAWARRAYSPROC;
@foreign public var glad_glDrawArrays: PFNGLDRAWARRAYSPROC;
@foreign public typedef func(GLenum, GLsizei, GLenum, void const*) : void as PFNGLDRAWELEMENTSPROC;
@foreign public var glad_glDrawElements: PFNGLDRAWELEMENTSPROC;
@foreign public typedef func(GLfloat, GLfloat) : void as PFNGLPOLYGONOFFSETPROC;
@foreign public var glad_glPolygonOffset: PFNGLPOLYGONOFFSETPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) : void as PFNGLCOPYTEXIMAGE1DPROC;
@foreign public var glad_glCopyTexImage1D: PFNGLCOPYTEXIMAGE1DPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) : void as PFNGLCOPYTEXIMAGE2DPROC;
@foreign public var glad_glCopyTexImage2D: PFNGLCOPYTEXIMAGE2DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLint, GLsizei) : void as PFNGLCOPYTEXSUBIMAGE1DPROC;
@foreign public var glad_glCopyTexSubImage1D: PFNGLCOPYTEXSUBIMAGE1DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) : void as PFNGLCOPYTEXSUBIMAGE2DPROC;
@foreign public var glad_glCopyTexSubImage2D: PFNGLCOPYTEXSUBIMAGE2DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void const*) : void as PFNGLTEXSUBIMAGE1DPROC;
@foreign public var glad_glTexSubImage1D: PFNGLTEXSUBIMAGE1DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void const*) : void as PFNGLTEXSUBIMAGE2DPROC;
@foreign public var glad_glTexSubImage2D: PFNGLTEXSUBIMAGE2DPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDTEXTUREPROC;
@foreign public var glad_glBindTexture: PFNGLBINDTEXTUREPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETETEXTURESPROC;
@foreign public var glad_glDeleteTextures: PFNGLDELETETEXTURESPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENTEXTURESPROC;
@foreign public var glad_glGenTextures: PFNGLGENTEXTURESPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISTEXTUREPROC;
@foreign public var glad_glIsTexture: PFNGLISTEXTUREPROC;
@foreign public var GLAD_GL_VERSION_1_2: i32;
@foreign public typedef func(GLenum, GLuint, GLuint, GLsizei, GLenum, void const*) : void as PFNGLDRAWRANGEELEMENTSPROC;
@foreign public var glad_glDrawRangeElements: PFNGLDRAWRANGEELEMENTSPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void const*) : void as PFNGLTEXIMAGE3DPROC;
@foreign public var glad_glTexImage3D: PFNGLTEXIMAGE3DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void const*) : void as PFNGLTEXSUBIMAGE3DPROC;
@foreign public var glad_glTexSubImage3D: PFNGLTEXSUBIMAGE3DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) : void as PFNGLCOPYTEXSUBIMAGE3DPROC;
@foreign public var glad_glCopyTexSubImage3D: PFNGLCOPYTEXSUBIMAGE3DPROC;
@foreign public var GLAD_GL_VERSION_1_3: i32;
@foreign public typedef func(GLenum) : void as PFNGLACTIVETEXTUREPROC;
@foreign public var glad_glActiveTexture: PFNGLACTIVETEXTUREPROC;
@foreign public typedef func(GLfloat, GLboolean) : void as PFNGLSAMPLECOVERAGEPROC;
@foreign public var glad_glSampleCoverage: PFNGLSAMPLECOVERAGEPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXIMAGE3DPROC;
@foreign public var glad_glCompressedTexImage3D: PFNGLCOMPRESSEDTEXIMAGE3DPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXIMAGE2DPROC;
@foreign public var glad_glCompressedTexImage2D: PFNGLCOMPRESSEDTEXIMAGE2DPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXIMAGE1DPROC;
@foreign public var glad_glCompressedTexImage1D: PFNGLCOMPRESSEDTEXIMAGE1DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC;
@foreign public var glad_glCompressedTexSubImage3D: PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC;
@foreign public var glad_glCompressedTexSubImage2D: PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC;
@foreign public var glad_glCompressedTexSubImage1D: PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC;
@foreign public typedef func(GLenum, GLint, void*) : void as PFNGLGETCOMPRESSEDTEXIMAGEPROC;
@foreign public var glad_glGetCompressedTexImage: PFNGLGETCOMPRESSEDTEXIMAGEPROC;
@foreign public var GLAD_GL_VERSION_1_4: i32;
@foreign public typedef func(GLenum, GLenum, GLenum, GLenum) : void as PFNGLBLENDFUNCSEPARATEPROC;
@foreign public var glad_glBlendFuncSeparate: PFNGLBLENDFUNCSEPARATEPROC;
@foreign public typedef func(GLenum, GLint const*, GLsizei const*, GLsizei) : void as PFNGLMULTIDRAWARRAYSPROC;
@foreign public var glad_glMultiDrawArrays: PFNGLMULTIDRAWARRAYSPROC;
@foreign public typedef func(GLenum, GLsizei const*, GLenum, void const**, GLsizei) : void as PFNGLMULTIDRAWELEMENTSPROC;
@foreign public var glad_glMultiDrawElements: PFNGLMULTIDRAWELEMENTSPROC;
@foreign public typedef func(GLenum, GLfloat) : void as PFNGLPOINTPARAMETERFPROC;
@foreign public var glad_glPointParameterf: PFNGLPOINTPARAMETERFPROC;
@foreign public typedef func(GLenum, GLfloat const*) : void as PFNGLPOINTPARAMETERFVPROC;
@foreign public var glad_glPointParameterfv: PFNGLPOINTPARAMETERFVPROC;
@foreign public typedef func(GLenum, GLint) : void as PFNGLPOINTPARAMETERIPROC;
@foreign public var glad_glPointParameteri: PFNGLPOINTPARAMETERIPROC;
@foreign public typedef func(GLenum, GLint const*) : void as PFNGLPOINTPARAMETERIVPROC;
@foreign public var glad_glPointParameteriv: PFNGLPOINTPARAMETERIVPROC;
@foreign public typedef func(GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLBLENDCOLORPROC;
@foreign public var glad_glBlendColor: PFNGLBLENDCOLORPROC;
@foreign public typedef func(GLenum) : void as PFNGLBLENDEQUATIONPROC;
@foreign public var glad_glBlendEquation: PFNGLBLENDEQUATIONPROC;
@foreign public var GLAD_GL_VERSION_1_5: i32;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENQUERIESPROC;
@foreign public var glad_glGenQueries: PFNGLGENQUERIESPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEQUERIESPROC;
@foreign public var glad_glDeleteQueries: PFNGLDELETEQUERIESPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISQUERYPROC;
@foreign public var glad_glIsQuery: PFNGLISQUERYPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBEGINQUERYPROC;
@foreign public var glad_glBeginQuery: PFNGLBEGINQUERYPROC;
@foreign public typedef func(GLenum) : void as PFNGLENDQUERYPROC;
@foreign public var glad_glEndQuery: PFNGLENDQUERYPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETQUERYIVPROC;
@foreign public var glad_glGetQueryiv: PFNGLGETQUERYIVPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETQUERYOBJECTIVPROC;
@foreign public var glad_glGetQueryObjectiv: PFNGLGETQUERYOBJECTIVPROC;
@foreign public typedef func(GLuint, GLenum, GLuint*) : void as PFNGLGETQUERYOBJECTUIVPROC;
@foreign public var glad_glGetQueryObjectuiv: PFNGLGETQUERYOBJECTUIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDBUFFERPROC;
@foreign public var glad_glBindBuffer: PFNGLBINDBUFFERPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEBUFFERSPROC;
@foreign public var glad_glDeleteBuffers: PFNGLDELETEBUFFERSPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENBUFFERSPROC;
@foreign public var glad_glGenBuffers: PFNGLGENBUFFERSPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISBUFFERPROC;
@foreign public var glad_glIsBuffer: PFNGLISBUFFERPROC;
@foreign public typedef func(GLenum, GLsizeiptr, void const*, GLenum) : void as PFNGLBUFFERDATAPROC;
@foreign public var glad_glBufferData: PFNGLBUFFERDATAPROC;
@foreign public typedef func(GLenum, GLintptr, GLsizeiptr, void const*) : void as PFNGLBUFFERSUBDATAPROC;
@foreign public var glad_glBufferSubData: PFNGLBUFFERSUBDATAPROC;
@foreign public typedef func(GLenum, GLintptr, GLsizeiptr, void*) : void as PFNGLGETBUFFERSUBDATAPROC;
@foreign public var glad_glGetBufferSubData: PFNGLGETBUFFERSUBDATAPROC;
@foreign public typedef func(GLenum, GLenum) : void* as PFNGLMAPBUFFERPROC;
@foreign public var glad_glMapBuffer: PFNGLMAPBUFFERPROC;
@foreign public typedef func(GLenum) : GLboolean as PFNGLUNMAPBUFFERPROC;
@foreign public var glad_glUnmapBuffer: PFNGLUNMAPBUFFERPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETBUFFERPARAMETERIVPROC;
@foreign public var glad_glGetBufferParameteriv: PFNGLGETBUFFERPARAMETERIVPROC;
@foreign public typedef func(GLenum, GLenum, void**) : void as PFNGLGETBUFFERPOINTERVPROC;
@foreign public var glad_glGetBufferPointerv: PFNGLGETBUFFERPOINTERVPROC;
@foreign public var GLAD_GL_VERSION_2_0: i32;
@foreign public typedef func(GLenum, GLenum) : void as PFNGLBLENDEQUATIONSEPARATEPROC;
@foreign public var glad_glBlendEquationSeparate: PFNGLBLENDEQUATIONSEPARATEPROC;
@foreign public typedef func(GLsizei, GLenum const*) : void as PFNGLDRAWBUFFERSPROC;
@foreign public var glad_glDrawBuffers: PFNGLDRAWBUFFERSPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLenum) : void as PFNGLSTENCILOPSEPARATEPROC;
@foreign public var glad_glStencilOpSeparate: PFNGLSTENCILOPSEPARATEPROC;
@foreign public typedef func(GLenum, GLenum, GLint, GLuint) : void as PFNGLSTENCILFUNCSEPARATEPROC;
@foreign public var glad_glStencilFuncSeparate: PFNGLSTENCILFUNCSEPARATEPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLSTENCILMASKSEPARATEPROC;
@foreign public var glad_glStencilMaskSeparate: PFNGLSTENCILMASKSEPARATEPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLATTACHSHADERPROC;
@foreign public var glad_glAttachShader: PFNGLATTACHSHADERPROC;
@foreign public typedef func(GLuint, GLuint, GLchar const*) : void as PFNGLBINDATTRIBLOCATIONPROC;
@foreign public var glad_glBindAttribLocation: PFNGLBINDATTRIBLOCATIONPROC;
@foreign public typedef func(GLuint) : void as PFNGLCOMPILESHADERPROC;
@foreign public var glad_glCompileShader: PFNGLCOMPILESHADERPROC;
@foreign public typedef func() : GLuint as PFNGLCREATEPROGRAMPROC;
@foreign public var glad_glCreateProgram: PFNGLCREATEPROGRAMPROC;
@foreign public typedef func(GLenum) : GLuint as PFNGLCREATESHADERPROC;
@foreign public var glad_glCreateShader: PFNGLCREATESHADERPROC;
@foreign public typedef func(GLuint) : void as PFNGLDELETEPROGRAMPROC;
@foreign public var glad_glDeleteProgram: PFNGLDELETEPROGRAMPROC;
@foreign public typedef func(GLuint) : void as PFNGLDELETESHADERPROC;
@foreign public var glad_glDeleteShader: PFNGLDELETESHADERPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLDETACHSHADERPROC;
@foreign public var glad_glDetachShader: PFNGLDETACHSHADERPROC;
@foreign public typedef func(GLuint) : void as PFNGLDISABLEVERTEXATTRIBARRAYPROC;
@foreign public var glad_glDisableVertexAttribArray: PFNGLDISABLEVERTEXATTRIBARRAYPROC;
@foreign public typedef func(GLuint) : void as PFNGLENABLEVERTEXATTRIBARRAYPROC;
@foreign public var glad_glEnableVertexAttribArray: PFNGLENABLEVERTEXATTRIBARRAYPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*) : void as PFNGLGETACTIVEATTRIBPROC;
@foreign public var glad_glGetActiveAttrib: PFNGLGETACTIVEATTRIBPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*) : void as PFNGLGETACTIVEUNIFORMPROC;
@foreign public var glad_glGetActiveUniform: PFNGLGETACTIVEUNIFORMPROC;
@foreign public typedef func(GLuint, GLsizei, GLsizei*, GLuint*) : void as PFNGLGETATTACHEDSHADERSPROC;
@foreign public var glad_glGetAttachedShaders: PFNGLGETATTACHEDSHADERSPROC;
@foreign public typedef func(GLuint, GLchar const*) : GLint as PFNGLGETATTRIBLOCATIONPROC;
@foreign public var glad_glGetAttribLocation: PFNGLGETATTRIBLOCATIONPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETPROGRAMIVPROC;
@foreign public var glad_glGetProgramiv: PFNGLGETPROGRAMIVPROC;
@foreign public typedef func(GLuint, GLsizei, GLsizei*, GLchar*) : void as PFNGLGETPROGRAMINFOLOGPROC;
@foreign public var glad_glGetProgramInfoLog: PFNGLGETPROGRAMINFOLOGPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETSHADERIVPROC;
@foreign public var glad_glGetShaderiv: PFNGLGETSHADERIVPROC;
@foreign public typedef func(GLuint, GLsizei, GLsizei*, GLchar*) : void as PFNGLGETSHADERINFOLOGPROC;
@foreign public var glad_glGetShaderInfoLog: PFNGLGETSHADERINFOLOGPROC;
@foreign public typedef func(GLuint, GLsizei, GLsizei*, GLchar*) : void as PFNGLGETSHADERSOURCEPROC;
@foreign public var glad_glGetShaderSource: PFNGLGETSHADERSOURCEPROC;
@foreign public typedef func(GLuint, GLchar const*) : GLint as PFNGLGETUNIFORMLOCATIONPROC;
@foreign public var glad_glGetUniformLocation: PFNGLGETUNIFORMLOCATIONPROC;
@foreign public typedef func(GLuint, GLint, GLfloat*) : void as PFNGLGETUNIFORMFVPROC;
@foreign public var glad_glGetUniformfv: PFNGLGETUNIFORMFVPROC;
@foreign public typedef func(GLuint, GLint, GLint*) : void as PFNGLGETUNIFORMIVPROC;
@foreign public var glad_glGetUniformiv: PFNGLGETUNIFORMIVPROC;
@foreign public typedef func(GLuint, GLenum, GLdouble*) : void as PFNGLGETVERTEXATTRIBDVPROC;
@foreign public var glad_glGetVertexAttribdv: PFNGLGETVERTEXATTRIBDVPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETVERTEXATTRIBFVPROC;
@foreign public var glad_glGetVertexAttribfv: PFNGLGETVERTEXATTRIBFVPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETVERTEXATTRIBIVPROC;
@foreign public var glad_glGetVertexAttribiv: PFNGLGETVERTEXATTRIBIVPROC;
@foreign public typedef func(GLuint, GLenum, void**) : void as PFNGLGETVERTEXATTRIBPOINTERVPROC;
@foreign public var glad_glGetVertexAttribPointerv: PFNGLGETVERTEXATTRIBPOINTERVPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISPROGRAMPROC;
@foreign public var glad_glIsProgram: PFNGLISPROGRAMPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISSHADERPROC;
@foreign public var glad_glIsShader: PFNGLISSHADERPROC;
@foreign public typedef func(GLuint) : void as PFNGLLINKPROGRAMPROC;
@foreign public var glad_glLinkProgram: PFNGLLINKPROGRAMPROC;
@foreign public typedef func(GLuint, GLsizei, GLchar const**, GLint const*) : void as PFNGLSHADERSOURCEPROC;
@foreign public var glad_glShaderSource: PFNGLSHADERSOURCEPROC;
@foreign public typedef func(GLuint) : void as PFNGLUSEPROGRAMPROC;
@foreign public var glad_glUseProgram: PFNGLUSEPROGRAMPROC;
@foreign public typedef func(GLint, GLfloat) : void as PFNGLUNIFORM1FPROC;
@foreign public var glad_glUniform1f: PFNGLUNIFORM1FPROC;
@foreign public typedef func(GLint, GLfloat, GLfloat) : void as PFNGLUNIFORM2FPROC;
@foreign public var glad_glUniform2f: PFNGLUNIFORM2FPROC;
@foreign public typedef func(GLint, GLfloat, GLfloat, GLfloat) : void as PFNGLUNIFORM3FPROC;
@foreign public var glad_glUniform3f: PFNGLUNIFORM3FPROC;
@foreign public typedef func(GLint, GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLUNIFORM4FPROC;
@foreign public var glad_glUniform4f: PFNGLUNIFORM4FPROC;
@foreign public typedef func(GLint, GLint) : void as PFNGLUNIFORM1IPROC;
@foreign public var glad_glUniform1i: PFNGLUNIFORM1IPROC;
@foreign public typedef func(GLint, GLint, GLint) : void as PFNGLUNIFORM2IPROC;
@foreign public var glad_glUniform2i: PFNGLUNIFORM2IPROC;
@foreign public typedef func(GLint, GLint, GLint, GLint) : void as PFNGLUNIFORM3IPROC;
@foreign public var glad_glUniform3i: PFNGLUNIFORM3IPROC;
@foreign public typedef func(GLint, GLint, GLint, GLint, GLint) : void as PFNGLUNIFORM4IPROC;
@foreign public var glad_glUniform4i: PFNGLUNIFORM4IPROC;
@foreign public typedef func(GLint, GLsizei, GLfloat const*) : void as PFNGLUNIFORM1FVPROC;
@foreign public var glad_glUniform1fv: PFNGLUNIFORM1FVPROC;
@foreign public typedef func(GLint, GLsizei, GLfloat const*) : void as PFNGLUNIFORM2FVPROC;
@foreign public var glad_glUniform2fv: PFNGLUNIFORM2FVPROC;
@foreign public typedef func(GLint, GLsizei, GLfloat const*) : void as PFNGLUNIFORM3FVPROC;
@foreign public var glad_glUniform3fv: PFNGLUNIFORM3FVPROC;
@foreign public typedef func(GLint, GLsizei, GLfloat const*) : void as PFNGLUNIFORM4FVPROC;
@foreign public var glad_glUniform4fv: PFNGLUNIFORM4FVPROC;
@foreign public typedef func(GLint, GLsizei, GLint const*) : void as PFNGLUNIFORM1IVPROC;
@foreign public var glad_glUniform1iv: PFNGLUNIFORM1IVPROC;
@foreign public typedef func(GLint, GLsizei, GLint const*) : void as PFNGLUNIFORM2IVPROC;
@foreign public var glad_glUniform2iv: PFNGLUNIFORM2IVPROC;
@foreign public typedef func(GLint, GLsizei, GLint const*) : void as PFNGLUNIFORM3IVPROC;
@foreign public var glad_glUniform3iv: PFNGLUNIFORM3IVPROC;
@foreign public typedef func(GLint, GLsizei, GLint const*) : void as PFNGLUNIFORM4IVPROC;
@foreign public var glad_glUniform4iv: PFNGLUNIFORM4IVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX2FVPROC;
@foreign public var glad_glUniformMatrix2fv: PFNGLUNIFORMMATRIX2FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX3FVPROC;
@foreign public var glad_glUniformMatrix3fv: PFNGLUNIFORMMATRIX3FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX4FVPROC;
@foreign public var glad_glUniformMatrix4fv: PFNGLUNIFORMMATRIX4FVPROC;
@foreign public typedef func(GLuint) : void as PFNGLVALIDATEPROGRAMPROC;
@foreign public var glad_glValidateProgram: PFNGLVALIDATEPROGRAMPROC;
@foreign public typedef func(GLuint, GLdouble) : void as PFNGLVERTEXATTRIB1DPROC;
@foreign public var glad_glVertexAttrib1d: PFNGLVERTEXATTRIB1DPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB1DVPROC;
@foreign public var glad_glVertexAttrib1dv: PFNGLVERTEXATTRIB1DVPROC;
@foreign public typedef func(GLuint, GLfloat) : void as PFNGLVERTEXATTRIB1FPROC;
@foreign public var glad_glVertexAttrib1f: PFNGLVERTEXATTRIB1FPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB1FVPROC;
@foreign public var glad_glVertexAttrib1fv: PFNGLVERTEXATTRIB1FVPROC;
@foreign public typedef func(GLuint, GLshort) : void as PFNGLVERTEXATTRIB1SPROC;
@foreign public var glad_glVertexAttrib1s: PFNGLVERTEXATTRIB1SPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB1SVPROC;
@foreign public var glad_glVertexAttrib1sv: PFNGLVERTEXATTRIB1SVPROC;
@foreign public typedef func(GLuint, GLdouble, GLdouble) : void as PFNGLVERTEXATTRIB2DPROC;
@foreign public var glad_glVertexAttrib2d: PFNGLVERTEXATTRIB2DPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB2DVPROC;
@foreign public var glad_glVertexAttrib2dv: PFNGLVERTEXATTRIB2DVPROC;
@foreign public typedef func(GLuint, GLfloat, GLfloat) : void as PFNGLVERTEXATTRIB2FPROC;
@foreign public var glad_glVertexAttrib2f: PFNGLVERTEXATTRIB2FPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB2FVPROC;
@foreign public var glad_glVertexAttrib2fv: PFNGLVERTEXATTRIB2FVPROC;
@foreign public typedef func(GLuint, GLshort, GLshort) : void as PFNGLVERTEXATTRIB2SPROC;
@foreign public var glad_glVertexAttrib2s: PFNGLVERTEXATTRIB2SPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB2SVPROC;
@foreign public var glad_glVertexAttrib2sv: PFNGLVERTEXATTRIB2SVPROC;
@foreign public typedef func(GLuint, GLdouble, GLdouble, GLdouble) : void as PFNGLVERTEXATTRIB3DPROC;
@foreign public var glad_glVertexAttrib3d: PFNGLVERTEXATTRIB3DPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB3DVPROC;
@foreign public var glad_glVertexAttrib3dv: PFNGLVERTEXATTRIB3DVPROC;
@foreign public typedef func(GLuint, GLfloat, GLfloat, GLfloat) : void as PFNGLVERTEXATTRIB3FPROC;
@foreign public var glad_glVertexAttrib3f: PFNGLVERTEXATTRIB3FPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB3FVPROC;
@foreign public var glad_glVertexAttrib3fv: PFNGLVERTEXATTRIB3FVPROC;
@foreign public typedef func(GLuint, GLshort, GLshort, GLshort) : void as PFNGLVERTEXATTRIB3SPROC;
@foreign public var glad_glVertexAttrib3s: PFNGLVERTEXATTRIB3SPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB3SVPROC;
@foreign public var glad_glVertexAttrib3sv: PFNGLVERTEXATTRIB3SVPROC;
@foreign public typedef func(GLuint, GLbyte const*) : void as PFNGLVERTEXATTRIB4NBVPROC;
@foreign public var glad_glVertexAttrib4Nbv: PFNGLVERTEXATTRIB4NBVPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIB4NIVPROC;
@foreign public var glad_glVertexAttrib4Niv: PFNGLVERTEXATTRIB4NIVPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB4NSVPROC;
@foreign public var glad_glVertexAttrib4Nsv: PFNGLVERTEXATTRIB4NSVPROC;
@foreign public typedef func(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) : void as PFNGLVERTEXATTRIB4NUBPROC;
@foreign public var glad_glVertexAttrib4Nub: PFNGLVERTEXATTRIB4NUBPROC;
@foreign public typedef func(GLuint, GLubyte const*) : void as PFNGLVERTEXATTRIB4NUBVPROC;
@foreign public var glad_glVertexAttrib4Nubv: PFNGLVERTEXATTRIB4NUBVPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIB4NUIVPROC;
@foreign public var glad_glVertexAttrib4Nuiv: PFNGLVERTEXATTRIB4NUIVPROC;
@foreign public typedef func(GLuint, GLushort const*) : void as PFNGLVERTEXATTRIB4NUSVPROC;
@foreign public var glad_glVertexAttrib4Nusv: PFNGLVERTEXATTRIB4NUSVPROC;
@foreign public typedef func(GLuint, GLbyte const*) : void as PFNGLVERTEXATTRIB4BVPROC;
@foreign public var glad_glVertexAttrib4bv: PFNGLVERTEXATTRIB4BVPROC;
@foreign public typedef func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) : void as PFNGLVERTEXATTRIB4DPROC;
@foreign public var glad_glVertexAttrib4d: PFNGLVERTEXATTRIB4DPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB4DVPROC;
@foreign public var glad_glVertexAttrib4dv: PFNGLVERTEXATTRIB4DVPROC;
@foreign public typedef func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLVERTEXATTRIB4FPROC;
@foreign public var glad_glVertexAttrib4f: PFNGLVERTEXATTRIB4FPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB4FVPROC;
@foreign public var glad_glVertexAttrib4fv: PFNGLVERTEXATTRIB4FVPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIB4IVPROC;
@foreign public var glad_glVertexAttrib4iv: PFNGLVERTEXATTRIB4IVPROC;
@foreign public typedef func(GLuint, GLshort, GLshort, GLshort, GLshort) : void as PFNGLVERTEXATTRIB4SPROC;
@foreign public var glad_glVertexAttrib4s: PFNGLVERTEXATTRIB4SPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB4SVPROC;
@foreign public var glad_glVertexAttrib4sv: PFNGLVERTEXATTRIB4SVPROC;
@foreign public typedef func(GLuint, GLubyte const*) : void as PFNGLVERTEXATTRIB4UBVPROC;
@foreign public var glad_glVertexAttrib4ubv: PFNGLVERTEXATTRIB4UBVPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIB4UIVPROC;
@foreign public var glad_glVertexAttrib4uiv: PFNGLVERTEXATTRIB4UIVPROC;
@foreign public typedef func(GLuint, GLushort const*) : void as PFNGLVERTEXATTRIB4USVPROC;
@foreign public var glad_glVertexAttrib4usv: PFNGLVERTEXATTRIB4USVPROC;
@foreign public typedef func(GLuint, GLint, GLenum, GLboolean, GLsizei, void const*) : void as PFNGLVERTEXATTRIBPOINTERPROC;
@foreign public var glad_glVertexAttribPointer: PFNGLVERTEXATTRIBPOINTERPROC;
@foreign public var GLAD_GL_VERSION_2_1: i32;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX2X3FVPROC;
@foreign public var glad_glUniformMatrix2x3fv: PFNGLUNIFORMMATRIX2X3FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX3X2FVPROC;
@foreign public var glad_glUniformMatrix3x2fv: PFNGLUNIFORMMATRIX3X2FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX2X4FVPROC;
@foreign public var glad_glUniformMatrix2x4fv: PFNGLUNIFORMMATRIX2X4FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX4X2FVPROC;
@foreign public var glad_glUniformMatrix4x2fv: PFNGLUNIFORMMATRIX4X2FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX3X4FVPROC;
@foreign public var glad_glUniformMatrix3x4fv: PFNGLUNIFORMMATRIX3X4FVPROC;
@foreign public typedef func(GLint, GLsizei, GLboolean, GLfloat const*) : void as PFNGLUNIFORMMATRIX4X3FVPROC;
@foreign public var glad_glUniformMatrix4x3fv: PFNGLUNIFORMMATRIX4X3FVPROC;
@foreign public var GLAD_GL_VERSION_3_0: i32;
@foreign public typedef func(GLuint, GLboolean, GLboolean, GLboolean, GLboolean) : void as PFNGLCOLORMASKIPROC;
@foreign public var glad_glColorMaski: PFNGLCOLORMASKIPROC;
@foreign public typedef func(GLenum, GLuint, GLboolean*) : void as PFNGLGETBOOLEANI_VPROC;
@foreign public var glad_glGetBooleani_v: PFNGLGETBOOLEANI_VPROC;
@foreign public typedef func(GLenum, GLuint, GLint*) : void as PFNGLGETINTEGERI_VPROC;
@foreign public var glad_glGetIntegeri_v: PFNGLGETINTEGERI_VPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLENABLEIPROC;
@foreign public var glad_glEnablei: PFNGLENABLEIPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLDISABLEIPROC;
@foreign public var glad_glDisablei: PFNGLDISABLEIPROC;
@foreign public typedef func(GLenum, GLuint) : GLboolean as PFNGLISENABLEDIPROC;
@foreign public var glad_glIsEnabledi: PFNGLISENABLEDIPROC;
@foreign public typedef func(GLenum) : void as PFNGLBEGINTRANSFORMFEEDBACKPROC;
@foreign public var glad_glBeginTransformFeedback: PFNGLBEGINTRANSFORMFEEDBACKPROC;
@foreign public typedef func() : void as PFNGLENDTRANSFORMFEEDBACKPROC;
@foreign public var glad_glEndTransformFeedback: PFNGLENDTRANSFORMFEEDBACKPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) : void as PFNGLBINDBUFFERRANGEPROC;
@foreign public var glad_glBindBufferRange: PFNGLBINDBUFFERRANGEPROC;
@foreign public typedef func(GLenum, GLuint, GLuint) : void as PFNGLBINDBUFFERBASEPROC;
@foreign public var glad_glBindBufferBase: PFNGLBINDBUFFERBASEPROC;
@foreign public typedef func(GLuint, GLsizei, GLchar const**, GLenum) : void as PFNGLTRANSFORMFEEDBACKVARYINGSPROC;
@foreign public var glad_glTransformFeedbackVaryings: PFNGLTRANSFORMFEEDBACKVARYINGSPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*) : void as PFNGLGETTRANSFORMFEEDBACKVARYINGPROC;
@foreign public var glad_glGetTransformFeedbackVarying: PFNGLGETTRANSFORMFEEDBACKVARYINGPROC;
@foreign public typedef func(GLenum, GLenum) : void as PFNGLCLAMPCOLORPROC;
@foreign public var glad_glClampColor: PFNGLCLAMPCOLORPROC;
@foreign public typedef func(GLuint, GLenum) : void as PFNGLBEGINCONDITIONALRENDERPROC;
@foreign public var glad_glBeginConditionalRender: PFNGLBEGINCONDITIONALRENDERPROC;
@foreign public typedef func() : void as PFNGLENDCONDITIONALRENDERPROC;
@foreign public var glad_glEndConditionalRender: PFNGLENDCONDITIONALRENDERPROC;
@foreign public typedef func(GLuint, GLint, GLenum, GLsizei, void const*) : void as PFNGLVERTEXATTRIBIPOINTERPROC;
@foreign public var glad_glVertexAttribIPointer: PFNGLVERTEXATTRIBIPOINTERPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETVERTEXATTRIBIIVPROC;
@foreign public var glad_glGetVertexAttribIiv: PFNGLGETVERTEXATTRIBIIVPROC;
@foreign public typedef func(GLuint, GLenum, GLuint*) : void as PFNGLGETVERTEXATTRIBIUIVPROC;
@foreign public var glad_glGetVertexAttribIuiv: PFNGLGETVERTEXATTRIBIUIVPROC;
@foreign public typedef func(GLuint, GLint) : void as PFNGLVERTEXATTRIBI1IPROC;
@foreign public var glad_glVertexAttribI1i: PFNGLVERTEXATTRIBI1IPROC;
@foreign public typedef func(GLuint, GLint, GLint) : void as PFNGLVERTEXATTRIBI2IPROC;
@foreign public var glad_glVertexAttribI2i: PFNGLVERTEXATTRIBI2IPROC;
@foreign public typedef func(GLuint, GLint, GLint, GLint) : void as PFNGLVERTEXATTRIBI3IPROC;
@foreign public var glad_glVertexAttribI3i: PFNGLVERTEXATTRIBI3IPROC;
@foreign public typedef func(GLuint, GLint, GLint, GLint, GLint) : void as PFNGLVERTEXATTRIBI4IPROC;
@foreign public var glad_glVertexAttribI4i: PFNGLVERTEXATTRIBI4IPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLVERTEXATTRIBI1UIPROC;
@foreign public var glad_glVertexAttribI1ui: PFNGLVERTEXATTRIBI1UIPROC;
@foreign public typedef func(GLuint, GLuint, GLuint) : void as PFNGLVERTEXATTRIBI2UIPROC;
@foreign public var glad_glVertexAttribI2ui: PFNGLVERTEXATTRIBI2UIPROC;
@foreign public typedef func(GLuint, GLuint, GLuint, GLuint) : void as PFNGLVERTEXATTRIBI3UIPROC;
@foreign public var glad_glVertexAttribI3ui: PFNGLVERTEXATTRIBI3UIPROC;
@foreign public typedef func(GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLVERTEXATTRIBI4UIPROC;
@foreign public var glad_glVertexAttribI4ui: PFNGLVERTEXATTRIBI4UIPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIBI1IVPROC;
@foreign public var glad_glVertexAttribI1iv: PFNGLVERTEXATTRIBI1IVPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIBI2IVPROC;
@foreign public var glad_glVertexAttribI2iv: PFNGLVERTEXATTRIBI2IVPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIBI3IVPROC;
@foreign public var glad_glVertexAttribI3iv: PFNGLVERTEXATTRIBI3IVPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIBI4IVPROC;
@foreign public var glad_glVertexAttribI4iv: PFNGLVERTEXATTRIBI4IVPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIBI1UIVPROC;
@foreign public var glad_glVertexAttribI1uiv: PFNGLVERTEXATTRIBI1UIVPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIBI2UIVPROC;
@foreign public var glad_glVertexAttribI2uiv: PFNGLVERTEXATTRIBI2UIVPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIBI3UIVPROC;
@foreign public var glad_glVertexAttribI3uiv: PFNGLVERTEXATTRIBI3UIVPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIBI4UIVPROC;
@foreign public var glad_glVertexAttribI4uiv: PFNGLVERTEXATTRIBI4UIVPROC;
@foreign public typedef func(GLuint, GLbyte const*) : void as PFNGLVERTEXATTRIBI4BVPROC;
@foreign public var glad_glVertexAttribI4bv: PFNGLVERTEXATTRIBI4BVPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIBI4SVPROC;
@foreign public var glad_glVertexAttribI4sv: PFNGLVERTEXATTRIBI4SVPROC;
@foreign public typedef func(GLuint, GLubyte const*) : void as PFNGLVERTEXATTRIBI4UBVPROC;
@foreign public var glad_glVertexAttribI4ubv: PFNGLVERTEXATTRIBI4UBVPROC;
@foreign public typedef func(GLuint, GLushort const*) : void as PFNGLVERTEXATTRIBI4USVPROC;
@foreign public var glad_glVertexAttribI4usv: PFNGLVERTEXATTRIBI4USVPROC;
@foreign public typedef func(GLuint, GLint, GLuint*) : void as PFNGLGETUNIFORMUIVPROC;
@foreign public var glad_glGetUniformuiv: PFNGLGETUNIFORMUIVPROC;
@foreign public typedef func(GLuint, GLuint, GLchar const*) : void as PFNGLBINDFRAGDATALOCATIONPROC;
@foreign public var glad_glBindFragDataLocation: PFNGLBINDFRAGDATALOCATIONPROC;
@foreign public typedef func(GLuint, GLchar const*) : GLint as PFNGLGETFRAGDATALOCATIONPROC;
@foreign public var glad_glGetFragDataLocation: PFNGLGETFRAGDATALOCATIONPROC;
@foreign public typedef func(GLint, GLuint) : void as PFNGLUNIFORM1UIPROC;
@foreign public var glad_glUniform1ui: PFNGLUNIFORM1UIPROC;
@foreign public typedef func(GLint, GLuint, GLuint) : void as PFNGLUNIFORM2UIPROC;
@foreign public var glad_glUniform2ui: PFNGLUNIFORM2UIPROC;
@foreign public typedef func(GLint, GLuint, GLuint, GLuint) : void as PFNGLUNIFORM3UIPROC;
@foreign public var glad_glUniform3ui: PFNGLUNIFORM3UIPROC;
@foreign public typedef func(GLint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLUNIFORM4UIPROC;
@foreign public var glad_glUniform4ui: PFNGLUNIFORM4UIPROC;
@foreign public typedef func(GLint, GLsizei, GLuint const*) : void as PFNGLUNIFORM1UIVPROC;
@foreign public var glad_glUniform1uiv: PFNGLUNIFORM1UIVPROC;
@foreign public typedef func(GLint, GLsizei, GLuint const*) : void as PFNGLUNIFORM2UIVPROC;
@foreign public var glad_glUniform2uiv: PFNGLUNIFORM2UIVPROC;
@foreign public typedef func(GLint, GLsizei, GLuint const*) : void as PFNGLUNIFORM3UIVPROC;
@foreign public var glad_glUniform3uiv: PFNGLUNIFORM3UIVPROC;
@foreign public typedef func(GLint, GLsizei, GLuint const*) : void as PFNGLUNIFORM4UIVPROC;
@foreign public var glad_glUniform4uiv: PFNGLUNIFORM4UIVPROC;
@foreign public typedef func(GLenum, GLenum, GLint const*) : void as PFNGLTEXPARAMETERIIVPROC;
@foreign public var glad_glTexParameterIiv: PFNGLTEXPARAMETERIIVPROC;
@foreign public typedef func(GLenum, GLenum, GLuint const*) : void as PFNGLTEXPARAMETERIUIVPROC;
@foreign public var glad_glTexParameterIuiv: PFNGLTEXPARAMETERIUIVPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETTEXPARAMETERIIVPROC;
@foreign public var glad_glGetTexParameterIiv: PFNGLGETTEXPARAMETERIIVPROC;
@foreign public typedef func(GLenum, GLenum, GLuint*) : void as PFNGLGETTEXPARAMETERIUIVPROC;
@foreign public var glad_glGetTexParameterIuiv: PFNGLGETTEXPARAMETERIUIVPROC;
@foreign public typedef func(GLenum, GLint, GLint const*) : void as PFNGLCLEARBUFFERIVPROC;
@foreign public var glad_glClearBufferiv: PFNGLCLEARBUFFERIVPROC;
@foreign public typedef func(GLenum, GLint, GLuint const*) : void as PFNGLCLEARBUFFERUIVPROC;
@foreign public var glad_glClearBufferuiv: PFNGLCLEARBUFFERUIVPROC;
@foreign public typedef func(GLenum, GLint, GLfloat const*) : void as PFNGLCLEARBUFFERFVPROC;
@foreign public var glad_glClearBufferfv: PFNGLCLEARBUFFERFVPROC;
@foreign public typedef func(GLenum, GLint, GLfloat, GLint) : void as PFNGLCLEARBUFFERFIPROC;
@foreign public var glad_glClearBufferfi: PFNGLCLEARBUFFERFIPROC;
@foreign public typedef func(GLenum, GLuint) : GLubyte const* as PFNGLGETSTRINGIPROC;
@foreign public var glad_glGetStringi: PFNGLGETSTRINGIPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISRENDERBUFFERPROC;
@foreign public var glad_glIsRenderbuffer: PFNGLISRENDERBUFFERPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDRENDERBUFFERPROC;
@foreign public var glad_glBindRenderbuffer: PFNGLBINDRENDERBUFFERPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETERENDERBUFFERSPROC;
@foreign public var glad_glDeleteRenderbuffers: PFNGLDELETERENDERBUFFERSPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENRENDERBUFFERSPROC;
@foreign public var glad_glGenRenderbuffers: PFNGLGENRENDERBUFFERSPROC;
@foreign public typedef func(GLenum, GLenum, GLsizei, GLsizei) : void as PFNGLRENDERBUFFERSTORAGEPROC;
@foreign public var glad_glRenderbufferStorage: PFNGLRENDERBUFFERSTORAGEPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETRENDERBUFFERPARAMETERIVPROC;
@foreign public var glad_glGetRenderbufferParameteriv: PFNGLGETRENDERBUFFERPARAMETERIVPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISFRAMEBUFFERPROC;
@foreign public var glad_glIsFramebuffer: PFNGLISFRAMEBUFFERPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDFRAMEBUFFERPROC;
@foreign public var glad_glBindFramebuffer: PFNGLBINDFRAMEBUFFERPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEFRAMEBUFFERSPROC;
@foreign public var glad_glDeleteFramebuffers: PFNGLDELETEFRAMEBUFFERSPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENFRAMEBUFFERSPROC;
@foreign public var glad_glGenFramebuffers: PFNGLGENFRAMEBUFFERSPROC;
@foreign public typedef func(GLenum) : GLenum as PFNGLCHECKFRAMEBUFFERSTATUSPROC;
@foreign public var glad_glCheckFramebufferStatus: PFNGLCHECKFRAMEBUFFERSTATUSPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint, GLint) : void as PFNGLFRAMEBUFFERTEXTURE1DPROC;
@foreign public var glad_glFramebufferTexture1D: PFNGLFRAMEBUFFERTEXTURE1DPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint, GLint) : void as PFNGLFRAMEBUFFERTEXTURE2DPROC;
@foreign public var glad_glFramebufferTexture2D: PFNGLFRAMEBUFFERTEXTURE2DPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint, GLint, GLint) : void as PFNGLFRAMEBUFFERTEXTURE3DPROC;
@foreign public var glad_glFramebufferTexture3D: PFNGLFRAMEBUFFERTEXTURE3DPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint) : void as PFNGLFRAMEBUFFERRENDERBUFFERPROC;
@foreign public var glad_glFramebufferRenderbuffer: PFNGLFRAMEBUFFERRENDERBUFFERPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLint*) : void as PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC;
@foreign public var glad_glGetFramebufferAttachmentParameteriv: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC;
@foreign public typedef func(GLenum) : void as PFNGLGENERATEMIPMAPPROC;
@foreign public var glad_glGenerateMipmap: PFNGLGENERATEMIPMAPPROC;
@foreign public typedef func(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) : void as PFNGLBLITFRAMEBUFFERPROC;
@foreign public var glad_glBlitFramebuffer: PFNGLBLITFRAMEBUFFERPROC;
@foreign public typedef func(GLenum, GLsizei, GLenum, GLsizei, GLsizei) : void as PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC;
@foreign public var glad_glRenderbufferStorageMultisample: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC;
@foreign public typedef func(GLenum, GLenum, GLuint, GLint, GLint) : void as PFNGLFRAMEBUFFERTEXTURELAYERPROC;
@foreign public var glad_glFramebufferTextureLayer: PFNGLFRAMEBUFFERTEXTURELAYERPROC;
@foreign public typedef func(GLenum, GLintptr, GLsizeiptr, GLbitfield) : void* as PFNGLMAPBUFFERRANGEPROC;
@foreign public var glad_glMapBufferRange: PFNGLMAPBUFFERRANGEPROC;
@foreign public typedef func(GLenum, GLintptr, GLsizeiptr) : void as PFNGLFLUSHMAPPEDBUFFERRANGEPROC;
@foreign public var glad_glFlushMappedBufferRange: PFNGLFLUSHMAPPEDBUFFERRANGEPROC;
@foreign public typedef func(GLuint) : void as PFNGLBINDVERTEXARRAYPROC;
@foreign public var glad_glBindVertexArray: PFNGLBINDVERTEXARRAYPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEVERTEXARRAYSPROC;
@foreign public var glad_glDeleteVertexArrays: PFNGLDELETEVERTEXARRAYSPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENVERTEXARRAYSPROC;
@foreign public var glad_glGenVertexArrays: PFNGLGENVERTEXARRAYSPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISVERTEXARRAYPROC;
@foreign public var glad_glIsVertexArray: PFNGLISVERTEXARRAYPROC;
@foreign public var GLAD_GL_VERSION_3_1: i32;
@foreign public typedef func(GLenum, GLint, GLsizei, GLsizei) : void as PFNGLDRAWARRAYSINSTANCEDPROC;
@foreign public var glad_glDrawArraysInstanced: PFNGLDRAWARRAYSINSTANCEDPROC;
@foreign public typedef func(GLenum, GLsizei, GLenum, void const*, GLsizei) : void as PFNGLDRAWELEMENTSINSTANCEDPROC;
@foreign public var glad_glDrawElementsInstanced: PFNGLDRAWELEMENTSINSTANCEDPROC;
@foreign public typedef func(GLenum, GLenum, GLuint) : void as PFNGLTEXBUFFERPROC;
@foreign public var glad_glTexBuffer: PFNGLTEXBUFFERPROC;
@foreign public typedef func(GLuint) : void as PFNGLPRIMITIVERESTARTINDEXPROC;
@foreign public var glad_glPrimitiveRestartIndex: PFNGLPRIMITIVERESTARTINDEXPROC;
@foreign public typedef func(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) : void as PFNGLCOPYBUFFERSUBDATAPROC;
@foreign public var glad_glCopyBufferSubData: PFNGLCOPYBUFFERSUBDATAPROC;
@foreign public typedef func(GLuint, GLsizei, GLchar const**, GLuint*) : void as PFNGLGETUNIFORMINDICESPROC;
@foreign public var glad_glGetUniformIndices: PFNGLGETUNIFORMINDICESPROC;
@foreign public typedef func(GLuint, GLsizei, GLuint const*, GLenum, GLint*) : void as PFNGLGETACTIVEUNIFORMSIVPROC;
@foreign public var glad_glGetActiveUniformsiv: PFNGLGETACTIVEUNIFORMSIVPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, GLsizei*, GLchar*) : void as PFNGLGETACTIVEUNIFORMNAMEPROC;
@foreign public var glad_glGetActiveUniformName: PFNGLGETACTIVEUNIFORMNAMEPROC;
@foreign public typedef func(GLuint, GLchar const*) : GLuint as PFNGLGETUNIFORMBLOCKINDEXPROC;
@foreign public var glad_glGetUniformBlockIndex: PFNGLGETUNIFORMBLOCKINDEXPROC;
@foreign public typedef func(GLuint, GLuint, GLenum, GLint*) : void as PFNGLGETACTIVEUNIFORMBLOCKIVPROC;
@foreign public var glad_glGetActiveUniformBlockiv: PFNGLGETACTIVEUNIFORMBLOCKIVPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, GLsizei*, GLchar*) : void as PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC;
@foreign public var glad_glGetActiveUniformBlockName: PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC;
@foreign public typedef func(GLuint, GLuint, GLuint) : void as PFNGLUNIFORMBLOCKBINDINGPROC;
@foreign public var glad_glUniformBlockBinding: PFNGLUNIFORMBLOCKBINDINGPROC;
@foreign public var GLAD_GL_VERSION_3_2: i32;
@foreign public typedef func(GLenum, GLsizei, GLenum, void const*, GLint) : void as PFNGLDRAWELEMENTSBASEVERTEXPROC;
@foreign public var glad_glDrawElementsBaseVertex: PFNGLDRAWELEMENTSBASEVERTEXPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLsizei, GLenum, void const*, GLint) : void as PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC;
@foreign public var glad_glDrawRangeElementsBaseVertex: PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC;
@foreign public typedef func(GLenum, GLsizei, GLenum, void const*, GLsizei, GLint) : void as PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC;
@foreign public var glad_glDrawElementsInstancedBaseVertex: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC;
@foreign public typedef func(GLenum, GLsizei const*, GLenum, void const**, GLsizei, GLint const*) : void as PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC;
@foreign public var glad_glMultiDrawElementsBaseVertex: PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC;
@foreign public typedef func(GLenum) : void as PFNGLPROVOKINGVERTEXPROC;
@foreign public var glad_glProvokingVertex: PFNGLPROVOKINGVERTEXPROC;
@foreign public typedef func(GLenum, GLbitfield) : GLsync as PFNGLFENCESYNCPROC;
@foreign public var glad_glFenceSync: PFNGLFENCESYNCPROC;
@foreign public typedef func(GLsync) : GLboolean as PFNGLISSYNCPROC;
@foreign public var glad_glIsSync: PFNGLISSYNCPROC;
@foreign public typedef func(GLsync) : void as PFNGLDELETESYNCPROC;
@foreign public var glad_glDeleteSync: PFNGLDELETESYNCPROC;
@foreign public typedef func(GLsync, GLbitfield, GLuint64) : GLenum as PFNGLCLIENTWAITSYNCPROC;
@foreign public var glad_glClientWaitSync: PFNGLCLIENTWAITSYNCPROC;
@foreign public typedef func(GLsync, GLbitfield, GLuint64) : void as PFNGLWAITSYNCPROC;
@foreign public var glad_glWaitSync: PFNGLWAITSYNCPROC;
@foreign public typedef func(GLenum, GLint64*) : void as PFNGLGETINTEGER64VPROC;
@foreign public var glad_glGetInteger64v: PFNGLGETINTEGER64VPROC;
@foreign public typedef func(GLsync, GLenum, GLsizei, GLsizei*, GLint*) : void as PFNGLGETSYNCIVPROC;
@foreign public var glad_glGetSynciv: PFNGLGETSYNCIVPROC;
@foreign public typedef func(GLenum, GLuint, GLint64*) : void as PFNGLGETINTEGER64I_VPROC;
@foreign public var glad_glGetInteger64i_v: PFNGLGETINTEGER64I_VPROC;
@foreign public typedef func(GLenum, GLenum, GLint64*) : void as PFNGLGETBUFFERPARAMETERI64VPROC;
@foreign public var glad_glGetBufferParameteri64v: PFNGLGETBUFFERPARAMETERI64VPROC;
@foreign public typedef func(GLenum, GLenum, GLuint, GLint) : void as PFNGLFRAMEBUFFERTEXTUREPROC;
@foreign public var glad_glFramebufferTexture: PFNGLFRAMEBUFFERTEXTUREPROC;
@foreign public typedef func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) : void as PFNGLTEXIMAGE2DMULTISAMPLEPROC;
@foreign public var glad_glTexImage2DMultisample: PFNGLTEXIMAGE2DMULTISAMPLEPROC;
@foreign public typedef func(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) : void as PFNGLTEXIMAGE3DMULTISAMPLEPROC;
@foreign public var glad_glTexImage3DMultisample: PFNGLTEXIMAGE3DMULTISAMPLEPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat*) : void as PFNGLGETMULTISAMPLEFVPROC;
@foreign public var glad_glGetMultisamplefv: PFNGLGETMULTISAMPLEFVPROC;
@foreign public typedef func(GLuint, GLbitfield) : void as PFNGLSAMPLEMASKIPROC;
@foreign public var glad_glSampleMaski: PFNGLSAMPLEMASKIPROC;
@foreign public var GLAD_GL_VERSION_3_3: i32;
@foreign public typedef func(GLuint, GLuint, GLuint, GLchar const*) : void as PFNGLBINDFRAGDATALOCATIONINDEXEDPROC;
@foreign public var glad_glBindFragDataLocationIndexed: PFNGLBINDFRAGDATALOCATIONINDEXEDPROC;
@foreign public typedef func(GLuint, GLchar const*) : GLint as PFNGLGETFRAGDATAINDEXPROC;
@foreign public var glad_glGetFragDataIndex: PFNGLGETFRAGDATAINDEXPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENSAMPLERSPROC;
@foreign public var glad_glGenSamplers: PFNGLGENSAMPLERSPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETESAMPLERSPROC;
@foreign public var glad_glDeleteSamplers: PFNGLDELETESAMPLERSPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISSAMPLERPROC;
@foreign public var glad_glIsSampler: PFNGLISSAMPLERPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLBINDSAMPLERPROC;
@foreign public var glad_glBindSampler: PFNGLBINDSAMPLERPROC;
@foreign public typedef func(GLuint, GLenum, GLint) : void as PFNGLSAMPLERPARAMETERIPROC;
@foreign public var glad_glSamplerParameteri: PFNGLSAMPLERPARAMETERIPROC;
@foreign public typedef func(GLuint, GLenum, GLint const*) : void as PFNGLSAMPLERPARAMETERIVPROC;
@foreign public var glad_glSamplerParameteriv: PFNGLSAMPLERPARAMETERIVPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat) : void as PFNGLSAMPLERPARAMETERFPROC;
@foreign public var glad_glSamplerParameterf: PFNGLSAMPLERPARAMETERFPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat const*) : void as PFNGLSAMPLERPARAMETERFVPROC;
@foreign public var glad_glSamplerParameterfv: PFNGLSAMPLERPARAMETERFVPROC;
@foreign public typedef func(GLuint, GLenum, GLint const*) : void as PFNGLSAMPLERPARAMETERIIVPROC;
@foreign public var glad_glSamplerParameterIiv: PFNGLSAMPLERPARAMETERIIVPROC;
@foreign public typedef func(GLuint, GLenum, GLuint const*) : void as PFNGLSAMPLERPARAMETERIUIVPROC;
@foreign public var glad_glSamplerParameterIuiv: PFNGLSAMPLERPARAMETERIUIVPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETSAMPLERPARAMETERIVPROC;
@foreign public var glad_glGetSamplerParameteriv: PFNGLGETSAMPLERPARAMETERIVPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETSAMPLERPARAMETERIIVPROC;
@foreign public var glad_glGetSamplerParameterIiv: PFNGLGETSAMPLERPARAMETERIIVPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETSAMPLERPARAMETERFVPROC;
@foreign public var glad_glGetSamplerParameterfv: PFNGLGETSAMPLERPARAMETERFVPROC;
@foreign public typedef func(GLuint, GLenum, GLuint*) : void as PFNGLGETSAMPLERPARAMETERIUIVPROC;
@foreign public var glad_glGetSamplerParameterIuiv: PFNGLGETSAMPLERPARAMETERIUIVPROC;
@foreign public typedef func(GLuint, GLenum) : void as PFNGLQUERYCOUNTERPROC;
@foreign public var glad_glQueryCounter: PFNGLQUERYCOUNTERPROC;
@foreign public typedef func(GLuint, GLenum, GLint64*) : void as PFNGLGETQUERYOBJECTI64VPROC;
@foreign public var glad_glGetQueryObjecti64v: PFNGLGETQUERYOBJECTI64VPROC;
@foreign public typedef func(GLuint, GLenum, GLuint64*) : void as PFNGLGETQUERYOBJECTUI64VPROC;
@foreign public var glad_glGetQueryObjectui64v: PFNGLGETQUERYOBJECTUI64VPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLVERTEXATTRIBDIVISORPROC;
@foreign public var glad_glVertexAttribDivisor: PFNGLVERTEXATTRIBDIVISORPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint) : void as PFNGLVERTEXATTRIBP1UIPROC;
@foreign public var glad_glVertexAttribP1ui: PFNGLVERTEXATTRIBP1UIPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint const*) : void as PFNGLVERTEXATTRIBP1UIVPROC;
@foreign public var glad_glVertexAttribP1uiv: PFNGLVERTEXATTRIBP1UIVPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint) : void as PFNGLVERTEXATTRIBP2UIPROC;
@foreign public var glad_glVertexAttribP2ui: PFNGLVERTEXATTRIBP2UIPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint const*) : void as PFNGLVERTEXATTRIBP2UIVPROC;
@foreign public var glad_glVertexAttribP2uiv: PFNGLVERTEXATTRIBP2UIVPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint) : void as PFNGLVERTEXATTRIBP3UIPROC;
@foreign public var glad_glVertexAttribP3ui: PFNGLVERTEXATTRIBP3UIPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint const*) : void as PFNGLVERTEXATTRIBP3UIVPROC;
@foreign public var glad_glVertexAttribP3uiv: PFNGLVERTEXATTRIBP3UIVPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint) : void as PFNGLVERTEXATTRIBP4UIPROC;
@foreign public var glad_glVertexAttribP4ui: PFNGLVERTEXATTRIBP4UIPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean, GLuint const*) : void as PFNGLVERTEXATTRIBP4UIVPROC;
@foreign public var glad_glVertexAttribP4uiv: PFNGLVERTEXATTRIBP4UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLVERTEXP2UIPROC;
@foreign public var glad_glVertexP2ui: PFNGLVERTEXP2UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLVERTEXP2UIVPROC;
@foreign public var glad_glVertexP2uiv: PFNGLVERTEXP2UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLVERTEXP3UIPROC;
@foreign public var glad_glVertexP3ui: PFNGLVERTEXP3UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLVERTEXP3UIVPROC;
@foreign public var glad_glVertexP3uiv: PFNGLVERTEXP3UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLVERTEXP4UIPROC;
@foreign public var glad_glVertexP4ui: PFNGLVERTEXP4UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLVERTEXP4UIVPROC;
@foreign public var glad_glVertexP4uiv: PFNGLVERTEXP4UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLTEXCOORDP1UIPROC;
@foreign public var glad_glTexCoordP1ui: PFNGLTEXCOORDP1UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLTEXCOORDP1UIVPROC;
@foreign public var glad_glTexCoordP1uiv: PFNGLTEXCOORDP1UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLTEXCOORDP2UIPROC;
@foreign public var glad_glTexCoordP2ui: PFNGLTEXCOORDP2UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLTEXCOORDP2UIVPROC;
@foreign public var glad_glTexCoordP2uiv: PFNGLTEXCOORDP2UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLTEXCOORDP3UIPROC;
@foreign public var glad_glTexCoordP3ui: PFNGLTEXCOORDP3UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLTEXCOORDP3UIVPROC;
@foreign public var glad_glTexCoordP3uiv: PFNGLTEXCOORDP3UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLTEXCOORDP4UIPROC;
@foreign public var glad_glTexCoordP4ui: PFNGLTEXCOORDP4UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLTEXCOORDP4UIVPROC;
@foreign public var glad_glTexCoordP4uiv: PFNGLTEXCOORDP4UIVPROC;
@foreign public typedef func(GLenum, GLenum, GLuint) : void as PFNGLMULTITEXCOORDP1UIPROC;
@foreign public var glad_glMultiTexCoordP1ui: PFNGLMULTITEXCOORDP1UIPROC;
@foreign public typedef func(GLenum, GLenum, GLuint const*) : void as PFNGLMULTITEXCOORDP1UIVPROC;
@foreign public var glad_glMultiTexCoordP1uiv: PFNGLMULTITEXCOORDP1UIVPROC;
@foreign public typedef func(GLenum, GLenum, GLuint) : void as PFNGLMULTITEXCOORDP2UIPROC;
@foreign public var glad_glMultiTexCoordP2ui: PFNGLMULTITEXCOORDP2UIPROC;
@foreign public typedef func(GLenum, GLenum, GLuint const*) : void as PFNGLMULTITEXCOORDP2UIVPROC;
@foreign public var glad_glMultiTexCoordP2uiv: PFNGLMULTITEXCOORDP2UIVPROC;
@foreign public typedef func(GLenum, GLenum, GLuint) : void as PFNGLMULTITEXCOORDP3UIPROC;
@foreign public var glad_glMultiTexCoordP3ui: PFNGLMULTITEXCOORDP3UIPROC;
@foreign public typedef func(GLenum, GLenum, GLuint const*) : void as PFNGLMULTITEXCOORDP3UIVPROC;
@foreign public var glad_glMultiTexCoordP3uiv: PFNGLMULTITEXCOORDP3UIVPROC;
@foreign public typedef func(GLenum, GLenum, GLuint) : void as PFNGLMULTITEXCOORDP4UIPROC;
@foreign public var glad_glMultiTexCoordP4ui: PFNGLMULTITEXCOORDP4UIPROC;
@foreign public typedef func(GLenum, GLenum, GLuint const*) : void as PFNGLMULTITEXCOORDP4UIVPROC;
@foreign public var glad_glMultiTexCoordP4uiv: PFNGLMULTITEXCOORDP4UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLNORMALP3UIPROC;
@foreign public var glad_glNormalP3ui: PFNGLNORMALP3UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLNORMALP3UIVPROC;
@foreign public var glad_glNormalP3uiv: PFNGLNORMALP3UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLCOLORP3UIPROC;
@foreign public var glad_glColorP3ui: PFNGLCOLORP3UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLCOLORP3UIVPROC;
@foreign public var glad_glColorP3uiv: PFNGLCOLORP3UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLCOLORP4UIPROC;
@foreign public var glad_glColorP4ui: PFNGLCOLORP4UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLCOLORP4UIVPROC;
@foreign public var glad_glColorP4uiv: PFNGLCOLORP4UIVPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLSECONDARYCOLORP3UIPROC;
@foreign public var glad_glSecondaryColorP3ui: PFNGLSECONDARYCOLORP3UIPROC;
@foreign public typedef func(GLenum, GLuint const*) : void as PFNGLSECONDARYCOLORP3UIVPROC;
@foreign public var glad_glSecondaryColorP3uiv: PFNGLSECONDARYCOLORP3UIVPROC;
@foreign public var GLAD_GL_AMD_debug_output: i32;
@foreign public typedef func(GLenum, GLenum, GLsizei, GLuint const*, GLboolean) : void as PFNGLDEBUGMESSAGEENABLEAMDPROC;
@foreign public var glad_glDebugMessageEnableAMD: PFNGLDEBUGMESSAGEENABLEAMDPROC;
@foreign public typedef func(GLenum, GLenum, GLuint, GLsizei, GLchar const*) : void as PFNGLDEBUGMESSAGEINSERTAMDPROC;
@foreign public var glad_glDebugMessageInsertAMD: PFNGLDEBUGMESSAGEINSERTAMDPROC;
@foreign public typedef func(GLDEBUGPROCAMD, void*) : void as PFNGLDEBUGMESSAGECALLBACKAMDPROC;
@foreign public var glad_glDebugMessageCallbackAMD: PFNGLDEBUGMESSAGECALLBACKAMDPROC;
@foreign public typedef func(GLuint, GLsizei, GLenum*, GLuint*, GLuint*, GLsizei*, GLchar*) : GLuint as PFNGLGETDEBUGMESSAGELOGAMDPROC;
@foreign public var glad_glGetDebugMessageLogAMD: PFNGLGETDEBUGMESSAGELOGAMDPROC;
@foreign public var GLAD_GL_AMD_query_buffer_object: i32;
@foreign public var GLAD_GL_ARB_ES2_compatibility: i32;
@foreign public typedef func() : void as PFNGLRELEASESHADERCOMPILERPROC;
@foreign public var glad_glReleaseShaderCompiler: PFNGLRELEASESHADERCOMPILERPROC;
@foreign public typedef func(GLsizei, GLuint const*, GLenum, void const*, GLsizei) : void as PFNGLSHADERBINARYPROC;
@foreign public var glad_glShaderBinary: PFNGLSHADERBINARYPROC;
@foreign public typedef func(GLenum, GLenum, GLint*, GLint*) : void as PFNGLGETSHADERPRECISIONFORMATPROC;
@foreign public var glad_glGetShaderPrecisionFormat: PFNGLGETSHADERPRECISIONFORMATPROC;
@foreign public typedef func(GLfloat, GLfloat) : void as PFNGLDEPTHRANGEFPROC;
@foreign public var glad_glDepthRangef: PFNGLDEPTHRANGEFPROC;
@foreign public typedef func(GLfloat) : void as PFNGLCLEARDEPTHFPROC;
@foreign public var glad_glClearDepthf: PFNGLCLEARDEPTHFPROC;
@foreign public var GLAD_GL_ARB_ES3_compatibility: i32;
@foreign public var GLAD_GL_ARB_buffer_storage: i32;
@foreign public typedef func(GLenum, GLsizeiptr, void const*, GLbitfield) : void as PFNGLBUFFERSTORAGEPROC;
@foreign public var glad_glBufferStorage: PFNGLBUFFERSTORAGEPROC;
@foreign public var GLAD_GL_ARB_compatibility: i32;
@foreign public var GLAD_GL_ARB_compressed_texture_pixel_storage: i32;
@foreign public var GLAD_GL_ARB_debug_output: i32;
@foreign public typedef func(GLenum, GLenum, GLenum, GLsizei, GLuint const*, GLboolean) : void as PFNGLDEBUGMESSAGECONTROLARBPROC;
@foreign public var glad_glDebugMessageControlARB: PFNGLDEBUGMESSAGECONTROLARBPROC;
@foreign public typedef func(GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar const*) : void as PFNGLDEBUGMESSAGEINSERTARBPROC;
@foreign public var glad_glDebugMessageInsertARB: PFNGLDEBUGMESSAGEINSERTARBPROC;
@foreign public typedef func(GLDEBUGPROCARB, void const*) : void as PFNGLDEBUGMESSAGECALLBACKARBPROC;
@foreign public var glad_glDebugMessageCallbackARB: PFNGLDEBUGMESSAGECALLBACKARBPROC;
@foreign public typedef func(GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*) : GLuint as PFNGLGETDEBUGMESSAGELOGARBPROC;
@foreign public var glad_glGetDebugMessageLogARB: PFNGLGETDEBUGMESSAGELOGARBPROC;
@foreign public var GLAD_GL_ARB_depth_buffer_float: i32;
@foreign public var GLAD_GL_ARB_depth_clamp: i32;
@foreign public var GLAD_GL_ARB_depth_texture: i32;
@foreign public var GLAD_GL_ARB_draw_buffers: i32;
@foreign public typedef func(GLsizei, GLenum const*) : void as PFNGLDRAWBUFFERSARBPROC;
@foreign public var glad_glDrawBuffersARB: PFNGLDRAWBUFFERSARBPROC;
@foreign public var GLAD_GL_ARB_draw_buffers_blend: i32;
@foreign public typedef func(GLuint, GLenum) : void as PFNGLBLENDEQUATIONIARBPROC;
@foreign public var glad_glBlendEquationiARB: PFNGLBLENDEQUATIONIARBPROC;
@foreign public typedef func(GLuint, GLenum, GLenum) : void as PFNGLBLENDEQUATIONSEPARATEIARBPROC;
@foreign public var glad_glBlendEquationSeparateiARB: PFNGLBLENDEQUATIONSEPARATEIARBPROC;
@foreign public typedef func(GLuint, GLenum, GLenum) : void as PFNGLBLENDFUNCIARBPROC;
@foreign public var glad_glBlendFunciARB: PFNGLBLENDFUNCIARBPROC;
@foreign public typedef func(GLuint, GLenum, GLenum, GLenum, GLenum) : void as PFNGLBLENDFUNCSEPARATEIARBPROC;
@foreign public var glad_glBlendFuncSeparateiARB: PFNGLBLENDFUNCSEPARATEIARBPROC;
@foreign public var GLAD_GL_ARB_explicit_attrib_location: i32;
@foreign public var GLAD_GL_ARB_explicit_uniform_location: i32;
@foreign public var GLAD_GL_ARB_fragment_program: i32;
@foreign public typedef func(GLenum, GLenum, GLsizei, void const*) : void as PFNGLPROGRAMSTRINGARBPROC;
@foreign public var glad_glProgramStringARB: PFNGLPROGRAMSTRINGARBPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDPROGRAMARBPROC;
@foreign public var glad_glBindProgramARB: PFNGLBINDPROGRAMARBPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEPROGRAMSARBPROC;
@foreign public var glad_glDeleteProgramsARB: PFNGLDELETEPROGRAMSARBPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENPROGRAMSARBPROC;
@foreign public var glad_glGenProgramsARB: PFNGLGENPROGRAMSARBPROC;
@foreign public typedef func(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) : void as PFNGLPROGRAMENVPARAMETER4DARBPROC;
@foreign public var glad_glProgramEnvParameter4dARB: PFNGLPROGRAMENVPARAMETER4DARBPROC;
@foreign public typedef func(GLenum, GLuint, GLdouble const*) : void as PFNGLPROGRAMENVPARAMETER4DVARBPROC;
@foreign public var glad_glProgramEnvParameter4dvARB: PFNGLPROGRAMENVPARAMETER4DVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLPROGRAMENVPARAMETER4FARBPROC;
@foreign public var glad_glProgramEnvParameter4fARB: PFNGLPROGRAMENVPARAMETER4FARBPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat const*) : void as PFNGLPROGRAMENVPARAMETER4FVARBPROC;
@foreign public var glad_glProgramEnvParameter4fvARB: PFNGLPROGRAMENVPARAMETER4FVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) : void as PFNGLPROGRAMLOCALPARAMETER4DARBPROC;
@foreign public var glad_glProgramLocalParameter4dARB: PFNGLPROGRAMLOCALPARAMETER4DARBPROC;
@foreign public typedef func(GLenum, GLuint, GLdouble const*) : void as PFNGLPROGRAMLOCALPARAMETER4DVARBPROC;
@foreign public var glad_glProgramLocalParameter4dvARB: PFNGLPROGRAMLOCALPARAMETER4DVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLPROGRAMLOCALPARAMETER4FARBPROC;
@foreign public var glad_glProgramLocalParameter4fARB: PFNGLPROGRAMLOCALPARAMETER4FARBPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat const*) : void as PFNGLPROGRAMLOCALPARAMETER4FVARBPROC;
@foreign public var glad_glProgramLocalParameter4fvARB: PFNGLPROGRAMLOCALPARAMETER4FVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLdouble*) : void as PFNGLGETPROGRAMENVPARAMETERDVARBPROC;
@foreign public var glad_glGetProgramEnvParameterdvARB: PFNGLGETPROGRAMENVPARAMETERDVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat*) : void as PFNGLGETPROGRAMENVPARAMETERFVARBPROC;
@foreign public var glad_glGetProgramEnvParameterfvARB: PFNGLGETPROGRAMENVPARAMETERFVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLdouble*) : void as PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC;
@foreign public var glad_glGetProgramLocalParameterdvARB: PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC;
@foreign public typedef func(GLenum, GLuint, GLfloat*) : void as PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC;
@foreign public var glad_glGetProgramLocalParameterfvARB: PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETPROGRAMIVARBPROC;
@foreign public var glad_glGetProgramivARB: PFNGLGETPROGRAMIVARBPROC;
@foreign public typedef func(GLenum, GLenum, void*) : void as PFNGLGETPROGRAMSTRINGARBPROC;
@foreign public var glad_glGetProgramStringARB: PFNGLGETPROGRAMSTRINGARBPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISPROGRAMARBPROC;
@foreign public var glad_glIsProgramARB: PFNGLISPROGRAMARBPROC;
@foreign public var GLAD_GL_ARB_fragment_shader: i32;
@foreign public var GLAD_GL_ARB_framebuffer_object: i32;
@foreign public var GLAD_GL_ARB_framebuffer_sRGB: i32;
@foreign public var GLAD_GL_ARB_multisample: i32;
@foreign public typedef func(GLfloat, GLboolean) : void as PFNGLSAMPLECOVERAGEARBPROC;
@foreign public var glad_glSampleCoverageARB: PFNGLSAMPLECOVERAGEARBPROC;
@foreign public var GLAD_GL_ARB_sample_locations: i32;
@foreign public typedef func(GLenum, GLuint, GLsizei, GLfloat const*) : void as PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
@foreign public var glad_glFramebufferSampleLocationsfvARB: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, GLfloat const*) : void as PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
@foreign public var glad_glNamedFramebufferSampleLocationsfvARB: PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
@foreign public typedef func() : void as PFNGLEVALUATEDEPTHVALUESARBPROC;
@foreign public var glad_glEvaluateDepthValuesARB: PFNGLEVALUATEDEPTHVALUESARBPROC;
@foreign public var GLAD_GL_ARB_texture_compression: i32;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXIMAGE3DARBPROC;
@foreign public var glad_glCompressedTexImage3DARB: PFNGLCOMPRESSEDTEXIMAGE3DARBPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXIMAGE2DARBPROC;
@foreign public var glad_glCompressedTexImage2DARB: PFNGLCOMPRESSEDTEXIMAGE2DARBPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXIMAGE1DARBPROC;
@foreign public var glad_glCompressedTexImage1DARB: PFNGLCOMPRESSEDTEXIMAGE1DARBPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC;
@foreign public var glad_glCompressedTexSubImage3DARB: PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC;
@foreign public var glad_glCompressedTexSubImage2DARB: PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC;
@foreign public typedef func(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void const*) : void as PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC;
@foreign public var glad_glCompressedTexSubImage1DARB: PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC;
@foreign public typedef func(GLenum, GLint, void*) : void as PFNGLGETCOMPRESSEDTEXIMAGEARBPROC;
@foreign public var glad_glGetCompressedTexImageARB: PFNGLGETCOMPRESSEDTEXIMAGEARBPROC;
@foreign public var GLAD_GL_ARB_texture_float: i32;
@foreign public var GLAD_GL_ARB_texture_multisample: i32;
@foreign public var GLAD_GL_ARB_texture_non_power_of_two: i32;
@foreign public var GLAD_GL_ARB_texture_rg: i32;
@foreign public var GLAD_GL_ARB_texture_swizzle: i32;
@foreign public var GLAD_GL_ARB_uniform_buffer_object: i32;
@foreign public var GLAD_GL_ARB_vertex_array_object: i32;
@foreign public var GLAD_GL_ARB_vertex_attrib_binding: i32;
@foreign public typedef func(GLuint, GLuint, GLintptr, GLsizei) : void as PFNGLBINDVERTEXBUFFERPROC;
@foreign public var glad_glBindVertexBuffer: PFNGLBINDVERTEXBUFFERPROC;
@foreign public typedef func(GLuint, GLint, GLenum, GLboolean, GLuint) : void as PFNGLVERTEXATTRIBFORMATPROC;
@foreign public var glad_glVertexAttribFormat: PFNGLVERTEXATTRIBFORMATPROC;
@foreign public typedef func(GLuint, GLint, GLenum, GLuint) : void as PFNGLVERTEXATTRIBIFORMATPROC;
@foreign public var glad_glVertexAttribIFormat: PFNGLVERTEXATTRIBIFORMATPROC;
@foreign public typedef func(GLuint, GLint, GLenum, GLuint) : void as PFNGLVERTEXATTRIBLFORMATPROC;
@foreign public var glad_glVertexAttribLFormat: PFNGLVERTEXATTRIBLFORMATPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLVERTEXATTRIBBINDINGPROC;
@foreign public var glad_glVertexAttribBinding: PFNGLVERTEXATTRIBBINDINGPROC;
@foreign public typedef func(GLuint, GLuint) : void as PFNGLVERTEXBINDINGDIVISORPROC;
@foreign public var glad_glVertexBindingDivisor: PFNGLVERTEXBINDINGDIVISORPROC;
@foreign public var GLAD_GL_ARB_vertex_buffer_object: i32;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDBUFFERARBPROC;
@foreign public var glad_glBindBufferARB: PFNGLBINDBUFFERARBPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEBUFFERSARBPROC;
@foreign public var glad_glDeleteBuffersARB: PFNGLDELETEBUFFERSARBPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENBUFFERSARBPROC;
@foreign public var glad_glGenBuffersARB: PFNGLGENBUFFERSARBPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISBUFFERARBPROC;
@foreign public var glad_glIsBufferARB: PFNGLISBUFFERARBPROC;
@foreign public typedef func(GLenum, GLsizeiptrARB, void const*, GLenum) : void as PFNGLBUFFERDATAARBPROC;
@foreign public var glad_glBufferDataARB: PFNGLBUFFERDATAARBPROC;
@foreign public typedef func(GLenum, GLintptrARB, GLsizeiptrARB, void const*) : void as PFNGLBUFFERSUBDATAARBPROC;
@foreign public var glad_glBufferSubDataARB: PFNGLBUFFERSUBDATAARBPROC;
@foreign public typedef func(GLenum, GLintptrARB, GLsizeiptrARB, void*) : void as PFNGLGETBUFFERSUBDATAARBPROC;
@foreign public var glad_glGetBufferSubDataARB: PFNGLGETBUFFERSUBDATAARBPROC;
@foreign public typedef func(GLenum, GLenum) : void* as PFNGLMAPBUFFERARBPROC;
@foreign public var glad_glMapBufferARB: PFNGLMAPBUFFERARBPROC;
@foreign public typedef func(GLenum) : GLboolean as PFNGLUNMAPBUFFERARBPROC;
@foreign public var glad_glUnmapBufferARB: PFNGLUNMAPBUFFERARBPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETBUFFERPARAMETERIVARBPROC;
@foreign public var glad_glGetBufferParameterivARB: PFNGLGETBUFFERPARAMETERIVARBPROC;
@foreign public typedef func(GLenum, GLenum, void**) : void as PFNGLGETBUFFERPOINTERVARBPROC;
@foreign public var glad_glGetBufferPointervARB: PFNGLGETBUFFERPOINTERVARBPROC;
@foreign public var GLAD_GL_ARB_vertex_program: i32;
@foreign public typedef func(GLuint, GLdouble) : void as PFNGLVERTEXATTRIB1DARBPROC;
@foreign public var glad_glVertexAttrib1dARB: PFNGLVERTEXATTRIB1DARBPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB1DVARBPROC;
@foreign public var glad_glVertexAttrib1dvARB: PFNGLVERTEXATTRIB1DVARBPROC;
@foreign public typedef func(GLuint, GLfloat) : void as PFNGLVERTEXATTRIB1FARBPROC;
@foreign public var glad_glVertexAttrib1fARB: PFNGLVERTEXATTRIB1FARBPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB1FVARBPROC;
@foreign public var glad_glVertexAttrib1fvARB: PFNGLVERTEXATTRIB1FVARBPROC;
@foreign public typedef func(GLuint, GLshort) : void as PFNGLVERTEXATTRIB1SARBPROC;
@foreign public var glad_glVertexAttrib1sARB: PFNGLVERTEXATTRIB1SARBPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB1SVARBPROC;
@foreign public var glad_glVertexAttrib1svARB: PFNGLVERTEXATTRIB1SVARBPROC;
@foreign public typedef func(GLuint, GLdouble, GLdouble) : void as PFNGLVERTEXATTRIB2DARBPROC;
@foreign public var glad_glVertexAttrib2dARB: PFNGLVERTEXATTRIB2DARBPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB2DVARBPROC;
@foreign public var glad_glVertexAttrib2dvARB: PFNGLVERTEXATTRIB2DVARBPROC;
@foreign public typedef func(GLuint, GLfloat, GLfloat) : void as PFNGLVERTEXATTRIB2FARBPROC;
@foreign public var glad_glVertexAttrib2fARB: PFNGLVERTEXATTRIB2FARBPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB2FVARBPROC;
@foreign public var glad_glVertexAttrib2fvARB: PFNGLVERTEXATTRIB2FVARBPROC;
@foreign public typedef func(GLuint, GLshort, GLshort) : void as PFNGLVERTEXATTRIB2SARBPROC;
@foreign public var glad_glVertexAttrib2sARB: PFNGLVERTEXATTRIB2SARBPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB2SVARBPROC;
@foreign public var glad_glVertexAttrib2svARB: PFNGLVERTEXATTRIB2SVARBPROC;
@foreign public typedef func(GLuint, GLdouble, GLdouble, GLdouble) : void as PFNGLVERTEXATTRIB3DARBPROC;
@foreign public var glad_glVertexAttrib3dARB: PFNGLVERTEXATTRIB3DARBPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB3DVARBPROC;
@foreign public var glad_glVertexAttrib3dvARB: PFNGLVERTEXATTRIB3DVARBPROC;
@foreign public typedef func(GLuint, GLfloat, GLfloat, GLfloat) : void as PFNGLVERTEXATTRIB3FARBPROC;
@foreign public var glad_glVertexAttrib3fARB: PFNGLVERTEXATTRIB3FARBPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB3FVARBPROC;
@foreign public var glad_glVertexAttrib3fvARB: PFNGLVERTEXATTRIB3FVARBPROC;
@foreign public typedef func(GLuint, GLshort, GLshort, GLshort) : void as PFNGLVERTEXATTRIB3SARBPROC;
@foreign public var glad_glVertexAttrib3sARB: PFNGLVERTEXATTRIB3SARBPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB3SVARBPROC;
@foreign public var glad_glVertexAttrib3svARB: PFNGLVERTEXATTRIB3SVARBPROC;
@foreign public typedef func(GLuint, GLbyte const*) : void as PFNGLVERTEXATTRIB4NBVARBPROC;
@foreign public var glad_glVertexAttrib4NbvARB: PFNGLVERTEXATTRIB4NBVARBPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIB4NIVARBPROC;
@foreign public var glad_glVertexAttrib4NivARB: PFNGLVERTEXATTRIB4NIVARBPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB4NSVARBPROC;
@foreign public var glad_glVertexAttrib4NsvARB: PFNGLVERTEXATTRIB4NSVARBPROC;
@foreign public typedef func(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) : void as PFNGLVERTEXATTRIB4NUBARBPROC;
@foreign public var glad_glVertexAttrib4NubARB: PFNGLVERTEXATTRIB4NUBARBPROC;
@foreign public typedef func(GLuint, GLubyte const*) : void as PFNGLVERTEXATTRIB4NUBVARBPROC;
@foreign public var glad_glVertexAttrib4NubvARB: PFNGLVERTEXATTRIB4NUBVARBPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIB4NUIVARBPROC;
@foreign public var glad_glVertexAttrib4NuivARB: PFNGLVERTEXATTRIB4NUIVARBPROC;
@foreign public typedef func(GLuint, GLushort const*) : void as PFNGLVERTEXATTRIB4NUSVARBPROC;
@foreign public var glad_glVertexAttrib4NusvARB: PFNGLVERTEXATTRIB4NUSVARBPROC;
@foreign public typedef func(GLuint, GLbyte const*) : void as PFNGLVERTEXATTRIB4BVARBPROC;
@foreign public var glad_glVertexAttrib4bvARB: PFNGLVERTEXATTRIB4BVARBPROC;
@foreign public typedef func(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) : void as PFNGLVERTEXATTRIB4DARBPROC;
@foreign public var glad_glVertexAttrib4dARB: PFNGLVERTEXATTRIB4DARBPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVERTEXATTRIB4DVARBPROC;
@foreign public var glad_glVertexAttrib4dvARB: PFNGLVERTEXATTRIB4DVARBPROC;
@foreign public typedef func(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLVERTEXATTRIB4FARBPROC;
@foreign public var glad_glVertexAttrib4fARB: PFNGLVERTEXATTRIB4FARBPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVERTEXATTRIB4FVARBPROC;
@foreign public var glad_glVertexAttrib4fvARB: PFNGLVERTEXATTRIB4FVARBPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVERTEXATTRIB4IVARBPROC;
@foreign public var glad_glVertexAttrib4ivARB: PFNGLVERTEXATTRIB4IVARBPROC;
@foreign public typedef func(GLuint, GLshort, GLshort, GLshort, GLshort) : void as PFNGLVERTEXATTRIB4SARBPROC;
@foreign public var glad_glVertexAttrib4sARB: PFNGLVERTEXATTRIB4SARBPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVERTEXATTRIB4SVARBPROC;
@foreign public var glad_glVertexAttrib4svARB: PFNGLVERTEXATTRIB4SVARBPROC;
@foreign public typedef func(GLuint, GLubyte const*) : void as PFNGLVERTEXATTRIB4UBVARBPROC;
@foreign public var glad_glVertexAttrib4ubvARB: PFNGLVERTEXATTRIB4UBVARBPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVERTEXATTRIB4UIVARBPROC;
@foreign public var glad_glVertexAttrib4uivARB: PFNGLVERTEXATTRIB4UIVARBPROC;
@foreign public typedef func(GLuint, GLushort const*) : void as PFNGLVERTEXATTRIB4USVARBPROC;
@foreign public var glad_glVertexAttrib4usvARB: PFNGLVERTEXATTRIB4USVARBPROC;
@foreign public typedef func(GLuint, GLint, GLenum, GLboolean, GLsizei, void const*) : void as PFNGLVERTEXATTRIBPOINTERARBPROC;
@foreign public var glad_glVertexAttribPointerARB: PFNGLVERTEXATTRIBPOINTERARBPROC;
@foreign public typedef func(GLuint) : void as PFNGLENABLEVERTEXATTRIBARRAYARBPROC;
@foreign public var glad_glEnableVertexAttribArrayARB: PFNGLENABLEVERTEXATTRIBARRAYARBPROC;
@foreign public typedef func(GLuint) : void as PFNGLDISABLEVERTEXATTRIBARRAYARBPROC;
@foreign public var glad_glDisableVertexAttribArrayARB: PFNGLDISABLEVERTEXATTRIBARRAYARBPROC;
@foreign public typedef func(GLuint, GLenum, GLdouble*) : void as PFNGLGETVERTEXATTRIBDVARBPROC;
@foreign public var glad_glGetVertexAttribdvARB: PFNGLGETVERTEXATTRIBDVARBPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETVERTEXATTRIBFVARBPROC;
@foreign public var glad_glGetVertexAttribfvARB: PFNGLGETVERTEXATTRIBFVARBPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETVERTEXATTRIBIVARBPROC;
@foreign public var glad_glGetVertexAttribivARB: PFNGLGETVERTEXATTRIBIVARBPROC;
@foreign public typedef func(GLuint, GLenum, void**) : void as PFNGLGETVERTEXATTRIBPOINTERVARBPROC;
@foreign public var glad_glGetVertexAttribPointervARB: PFNGLGETVERTEXATTRIBPOINTERVARBPROC;
@foreign public var GLAD_GL_ARB_vertex_shader: i32;
@foreign public typedef func(GLhandleARB, GLuint, GLcharARB const*) : void as PFNGLBINDATTRIBLOCATIONARBPROC;
@foreign public var glad_glBindAttribLocationARB: PFNGLBINDATTRIBLOCATIONARBPROC;
@foreign public typedef func(GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*) : void as PFNGLGETACTIVEATTRIBARBPROC;
@foreign public var glad_glGetActiveAttribARB: PFNGLGETACTIVEATTRIBARBPROC;
@foreign public typedef func(GLhandleARB, GLcharARB const*) : GLint as PFNGLGETATTRIBLOCATIONARBPROC;
@foreign public var glad_glGetAttribLocationARB: PFNGLGETATTRIBLOCATIONARBPROC;
@foreign public var GLAD_GL_ATI_element_array: i32;
@foreign public typedef func(GLenum, void const*) : void as PFNGLELEMENTPOINTERATIPROC;
@foreign public var glad_glElementPointerATI: PFNGLELEMENTPOINTERATIPROC;
@foreign public typedef func(GLenum, GLsizei) : void as PFNGLDRAWELEMENTARRAYATIPROC;
@foreign public var glad_glDrawElementArrayATI: PFNGLDRAWELEMENTARRAYATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLsizei) : void as PFNGLDRAWRANGEELEMENTARRAYATIPROC;
@foreign public var glad_glDrawRangeElementArrayATI: PFNGLDRAWRANGEELEMENTARRAYATIPROC;
@foreign public var GLAD_GL_ATI_fragment_shader: i32;
@foreign public typedef func(GLuint) : GLuint as PFNGLGENFRAGMENTSHADERSATIPROC;
@foreign public var glad_glGenFragmentShadersATI: PFNGLGENFRAGMENTSHADERSATIPROC;
@foreign public typedef func(GLuint) : void as PFNGLBINDFRAGMENTSHADERATIPROC;
@foreign public var glad_glBindFragmentShaderATI: PFNGLBINDFRAGMENTSHADERATIPROC;
@foreign public typedef func(GLuint) : void as PFNGLDELETEFRAGMENTSHADERATIPROC;
@foreign public var glad_glDeleteFragmentShaderATI: PFNGLDELETEFRAGMENTSHADERATIPROC;
@foreign public typedef func() : void as PFNGLBEGINFRAGMENTSHADERATIPROC;
@foreign public var glad_glBeginFragmentShaderATI: PFNGLBEGINFRAGMENTSHADERATIPROC;
@foreign public typedef func() : void as PFNGLENDFRAGMENTSHADERATIPROC;
@foreign public var glad_glEndFragmentShaderATI: PFNGLENDFRAGMENTSHADERATIPROC;
@foreign public typedef func(GLuint, GLuint, GLenum) : void as PFNGLPASSTEXCOORDATIPROC;
@foreign public var glad_glPassTexCoordATI: PFNGLPASSTEXCOORDATIPROC;
@foreign public typedef func(GLuint, GLuint, GLenum) : void as PFNGLSAMPLEMAPATIPROC;
@foreign public var glad_glSampleMapATI: PFNGLSAMPLEMAPATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLCOLORFRAGMENTOP1ATIPROC;
@foreign public var glad_glColorFragmentOp1ATI: PFNGLCOLORFRAGMENTOP1ATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLCOLORFRAGMENTOP2ATIPROC;
@foreign public var glad_glColorFragmentOp2ATI: PFNGLCOLORFRAGMENTOP2ATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLCOLORFRAGMENTOP3ATIPROC;
@foreign public var glad_glColorFragmentOp3ATI: PFNGLCOLORFRAGMENTOP3ATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLALPHAFRAGMENTOP1ATIPROC;
@foreign public var glad_glAlphaFragmentOp1ATI: PFNGLALPHAFRAGMENTOP1ATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLALPHAFRAGMENTOP2ATIPROC;
@foreign public var glad_glAlphaFragmentOp2ATI: PFNGLALPHAFRAGMENTOP2ATIPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) : void as PFNGLALPHAFRAGMENTOP3ATIPROC;
@foreign public var glad_glAlphaFragmentOp3ATI: PFNGLALPHAFRAGMENTOP3ATIPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLSETFRAGMENTSHADERCONSTANTATIPROC;
@foreign public var glad_glSetFragmentShaderConstantATI: PFNGLSETFRAGMENTSHADERCONSTANTATIPROC;
@foreign public var GLAD_GL_ATI_vertex_array_object: i32;
@foreign public typedef func(GLsizei, void const*, GLenum) : GLuint as PFNGLNEWOBJECTBUFFERATIPROC;
@foreign public var glad_glNewObjectBufferATI: PFNGLNEWOBJECTBUFFERATIPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISOBJECTBUFFERATIPROC;
@foreign public var glad_glIsObjectBufferATI: PFNGLISOBJECTBUFFERATIPROC;
@foreign public typedef func(GLuint, GLuint, GLsizei, void const*, GLenum) : void as PFNGLUPDATEOBJECTBUFFERATIPROC;
@foreign public var glad_glUpdateObjectBufferATI: PFNGLUPDATEOBJECTBUFFERATIPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETOBJECTBUFFERFVATIPROC;
@foreign public var glad_glGetObjectBufferfvATI: PFNGLGETOBJECTBUFFERFVATIPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETOBJECTBUFFERIVATIPROC;
@foreign public var glad_glGetObjectBufferivATI: PFNGLGETOBJECTBUFFERIVATIPROC;
@foreign public typedef func(GLuint) : void as PFNGLFREEOBJECTBUFFERATIPROC;
@foreign public var glad_glFreeObjectBufferATI: PFNGLFREEOBJECTBUFFERATIPROC;
@foreign public typedef func(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) : void as PFNGLARRAYOBJECTATIPROC;
@foreign public var glad_glArrayObjectATI: PFNGLARRAYOBJECTATIPROC;
@foreign public typedef func(GLenum, GLenum, GLfloat*) : void as PFNGLGETARRAYOBJECTFVATIPROC;
@foreign public var glad_glGetArrayObjectfvATI: PFNGLGETARRAYOBJECTFVATIPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETARRAYOBJECTIVATIPROC;
@foreign public var glad_glGetArrayObjectivATI: PFNGLGETARRAYOBJECTIVATIPROC;
@foreign public typedef func(GLuint, GLenum, GLsizei, GLuint, GLuint) : void as PFNGLVARIANTARRAYOBJECTATIPROC;
@foreign public var glad_glVariantArrayObjectATI: PFNGLVARIANTARRAYOBJECTATIPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETVARIANTARRAYOBJECTFVATIPROC;
@foreign public var glad_glGetVariantArrayObjectfvATI: PFNGLGETVARIANTARRAYOBJECTFVATIPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETVARIANTARRAYOBJECTIVATIPROC;
@foreign public var glad_glGetVariantArrayObjectivATI: PFNGLGETVARIANTARRAYOBJECTIVATIPROC;
@foreign public var GLAD_GL_EXT_blend_color: i32;
@foreign public typedef func(GLfloat, GLfloat, GLfloat, GLfloat) : void as PFNGLBLENDCOLOREXTPROC;
@foreign public var glad_glBlendColorEXT: PFNGLBLENDCOLOREXTPROC;
@foreign public var GLAD_GL_EXT_blend_equation_separate: i32;
@foreign public typedef func(GLenum, GLenum) : void as PFNGLBLENDEQUATIONSEPARATEEXTPROC;
@foreign public var glad_glBlendEquationSeparateEXT: PFNGLBLENDEQUATIONSEPARATEEXTPROC;
@foreign public var GLAD_GL_EXT_blend_func_separate: i32;
@foreign public typedef func(GLenum, GLenum, GLenum, GLenum) : void as PFNGLBLENDFUNCSEPARATEEXTPROC;
@foreign public var glad_glBlendFuncSeparateEXT: PFNGLBLENDFUNCSEPARATEEXTPROC;
@foreign public var GLAD_GL_EXT_debug_marker: i32;
@foreign public typedef func(GLsizei, GLchar const*) : void as PFNGLINSERTEVENTMARKEREXTPROC;
@foreign public var glad_glInsertEventMarkerEXT: PFNGLINSERTEVENTMARKEREXTPROC;
@foreign public typedef func(GLsizei, GLchar const*) : void as PFNGLPUSHGROUPMARKEREXTPROC;
@foreign public var glad_glPushGroupMarkerEXT: PFNGLPUSHGROUPMARKEREXTPROC;
@foreign public typedef func() : void as PFNGLPOPGROUPMARKEREXTPROC;
@foreign public var glad_glPopGroupMarkerEXT: PFNGLPOPGROUPMARKEREXTPROC;
@foreign public var GLAD_GL_EXT_framebuffer_blit: i32;
@foreign public typedef func(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) : void as PFNGLBLITFRAMEBUFFEREXTPROC;
@foreign public var glad_glBlitFramebufferEXT: PFNGLBLITFRAMEBUFFEREXTPROC;
@foreign public var GLAD_GL_EXT_framebuffer_multisample: i32;
@foreign public typedef func(GLenum, GLsizei, GLenum, GLsizei, GLsizei) : void as PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC;
@foreign public var glad_glRenderbufferStorageMultisampleEXT: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC;
@foreign public var GLAD_GL_EXT_framebuffer_multisample_blit_scaled: i32;
@foreign public var GLAD_GL_EXT_framebuffer_object: i32;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISRENDERBUFFEREXTPROC;
@foreign public var glad_glIsRenderbufferEXT: PFNGLISRENDERBUFFEREXTPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDRENDERBUFFEREXTPROC;
@foreign public var glad_glBindRenderbufferEXT: PFNGLBINDRENDERBUFFEREXTPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETERENDERBUFFERSEXTPROC;
@foreign public var glad_glDeleteRenderbuffersEXT: PFNGLDELETERENDERBUFFERSEXTPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENRENDERBUFFERSEXTPROC;
@foreign public var glad_glGenRenderbuffersEXT: PFNGLGENRENDERBUFFERSEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLsizei, GLsizei) : void as PFNGLRENDERBUFFERSTORAGEEXTPROC;
@foreign public var glad_glRenderbufferStorageEXT: PFNGLRENDERBUFFERSTORAGEEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLint*) : void as PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC;
@foreign public var glad_glGetRenderbufferParameterivEXT: PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC;
@foreign public typedef func(GLuint) : GLboolean as PFNGLISFRAMEBUFFEREXTPROC;
@foreign public var glad_glIsFramebufferEXT: PFNGLISFRAMEBUFFEREXTPROC;
@foreign public typedef func(GLenum, GLuint) : void as PFNGLBINDFRAMEBUFFEREXTPROC;
@foreign public var glad_glBindFramebufferEXT: PFNGLBINDFRAMEBUFFEREXTPROC;
@foreign public typedef func(GLsizei, GLuint const*) : void as PFNGLDELETEFRAMEBUFFERSEXTPROC;
@foreign public var glad_glDeleteFramebuffersEXT: PFNGLDELETEFRAMEBUFFERSEXTPROC;
@foreign public typedef func(GLsizei, GLuint*) : void as PFNGLGENFRAMEBUFFERSEXTPROC;
@foreign public var glad_glGenFramebuffersEXT: PFNGLGENFRAMEBUFFERSEXTPROC;
@foreign public typedef func(GLenum) : GLenum as PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC;
@foreign public var glad_glCheckFramebufferStatusEXT: PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint, GLint) : void as PFNGLFRAMEBUFFERTEXTURE1DEXTPROC;
@foreign public var glad_glFramebufferTexture1DEXT: PFNGLFRAMEBUFFERTEXTURE1DEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint, GLint) : void as PFNGLFRAMEBUFFERTEXTURE2DEXTPROC;
@foreign public var glad_glFramebufferTexture2DEXT: PFNGLFRAMEBUFFERTEXTURE2DEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint, GLint, GLint) : void as PFNGLFRAMEBUFFERTEXTURE3DEXTPROC;
@foreign public var glad_glFramebufferTexture3DEXT: PFNGLFRAMEBUFFERTEXTURE3DEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint) : void as PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC;
@foreign public var glad_glFramebufferRenderbufferEXT: PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLint*) : void as PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC;
@foreign public var glad_glGetFramebufferAttachmentParameterivEXT: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC;
@foreign public typedef func(GLenum) : void as PFNGLGENERATEMIPMAPEXTPROC;
@foreign public var glad_glGenerateMipmapEXT: PFNGLGENERATEMIPMAPEXTPROC;
@foreign public var GLAD_GL_EXT_framebuffer_sRGB: i32;
@foreign public var GLAD_GL_EXT_index_array_formats: i32;
@foreign public var GLAD_GL_EXT_texture: i32;
@foreign public var GLAD_GL_EXT_texture_compression_s3tc: i32;
@foreign public var GLAD_GL_EXT_texture_sRGB: i32;
@foreign public var GLAD_GL_EXT_texture_swizzle: i32;
@foreign public var GLAD_GL_EXT_vertex_array: i32;
@foreign public typedef func(GLint) : void as PFNGLARRAYELEMENTEXTPROC;
@foreign public var glad_glArrayElementEXT: PFNGLARRAYELEMENTEXTPROC;
@foreign public typedef func(GLint, GLenum, GLsizei, GLsizei, void const*) : void as PFNGLCOLORPOINTEREXTPROC;
@foreign public var glad_glColorPointerEXT: PFNGLCOLORPOINTEREXTPROC;
@foreign public typedef func(GLenum, GLint, GLsizei) : void as PFNGLDRAWARRAYSEXTPROC;
@foreign public var glad_glDrawArraysEXT: PFNGLDRAWARRAYSEXTPROC;
@foreign public typedef func(GLsizei, GLsizei, GLboolean const*) : void as PFNGLEDGEFLAGPOINTEREXTPROC;
@foreign public var glad_glEdgeFlagPointerEXT: PFNGLEDGEFLAGPOINTEREXTPROC;
@foreign public typedef func(GLenum, void**) : void as PFNGLGETPOINTERVEXTPROC;
@foreign public var glad_glGetPointervEXT: PFNGLGETPOINTERVEXTPROC;
@foreign public typedef func(GLenum, GLsizei, GLsizei, void const*) : void as PFNGLINDEXPOINTEREXTPROC;
@foreign public var glad_glIndexPointerEXT: PFNGLINDEXPOINTEREXTPROC;
@foreign public typedef func(GLenum, GLsizei, GLsizei, void const*) : void as PFNGLNORMALPOINTEREXTPROC;
@foreign public var glad_glNormalPointerEXT: PFNGLNORMALPOINTEREXTPROC;
@foreign public typedef func(GLint, GLenum, GLsizei, GLsizei, void const*) : void as PFNGLTEXCOORDPOINTEREXTPROC;
@foreign public var glad_glTexCoordPointerEXT: PFNGLTEXCOORDPOINTEREXTPROC;
@foreign public typedef func(GLint, GLenum, GLsizei, GLsizei, void const*) : void as PFNGLVERTEXPOINTEREXTPROC;
@foreign public var glad_glVertexPointerEXT: PFNGLVERTEXPOINTEREXTPROC;
@foreign public var GLAD_GL_EXT_vertex_shader: i32;
@foreign public typedef func() : void as PFNGLBEGINVERTEXSHADEREXTPROC;
@foreign public var glad_glBeginVertexShaderEXT: PFNGLBEGINVERTEXSHADEREXTPROC;
@foreign public typedef func() : void as PFNGLENDVERTEXSHADEREXTPROC;
@foreign public var glad_glEndVertexShaderEXT: PFNGLENDVERTEXSHADEREXTPROC;
@foreign public typedef func(GLuint) : void as PFNGLBINDVERTEXSHADEREXTPROC;
@foreign public var glad_glBindVertexShaderEXT: PFNGLBINDVERTEXSHADEREXTPROC;
@foreign public typedef func(GLuint) : GLuint as PFNGLGENVERTEXSHADERSEXTPROC;
@foreign public var glad_glGenVertexShadersEXT: PFNGLGENVERTEXSHADERSEXTPROC;
@foreign public typedef func(GLuint) : void as PFNGLDELETEVERTEXSHADEREXTPROC;
@foreign public var glad_glDeleteVertexShaderEXT: PFNGLDELETEVERTEXSHADEREXTPROC;
@foreign public typedef func(GLenum, GLuint, GLuint) : void as PFNGLSHADEROP1EXTPROC;
@foreign public var glad_glShaderOp1EXT: PFNGLSHADEROP1EXTPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint) : void as PFNGLSHADEROP2EXTPROC;
@foreign public var glad_glShaderOp2EXT: PFNGLSHADEROP2EXTPROC;
@foreign public typedef func(GLenum, GLuint, GLuint, GLuint, GLuint) : void as PFNGLSHADEROP3EXTPROC;
@foreign public var glad_glShaderOp3EXT: PFNGLSHADEROP3EXTPROC;
@foreign public typedef func(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) : void as PFNGLSWIZZLEEXTPROC;
@foreign public var glad_glSwizzleEXT: PFNGLSWIZZLEEXTPROC;
@foreign public typedef func(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum) : void as PFNGLWRITEMASKEXTPROC;
@foreign public var glad_glWriteMaskEXT: PFNGLWRITEMASKEXTPROC;
@foreign public typedef func(GLuint, GLuint, GLuint) : void as PFNGLINSERTCOMPONENTEXTPROC;
@foreign public var glad_glInsertComponentEXT: PFNGLINSERTCOMPONENTEXTPROC;
@foreign public typedef func(GLuint, GLuint, GLuint) : void as PFNGLEXTRACTCOMPONENTEXTPROC;
@foreign public var glad_glExtractComponentEXT: PFNGLEXTRACTCOMPONENTEXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum, GLuint) : GLuint as PFNGLGENSYMBOLSEXTPROC;
@foreign public var glad_glGenSymbolsEXT: PFNGLGENSYMBOLSEXTPROC;
@foreign public typedef func(GLuint, GLenum, void const*) : void as PFNGLSETINVARIANTEXTPROC;
@foreign public var glad_glSetInvariantEXT: PFNGLSETINVARIANTEXTPROC;
@foreign public typedef func(GLuint, GLenum, void const*) : void as PFNGLSETLOCALCONSTANTEXTPROC;
@foreign public var glad_glSetLocalConstantEXT: PFNGLSETLOCALCONSTANTEXTPROC;
@foreign public typedef func(GLuint, GLbyte const*) : void as PFNGLVARIANTBVEXTPROC;
@foreign public var glad_glVariantbvEXT: PFNGLVARIANTBVEXTPROC;
@foreign public typedef func(GLuint, GLshort const*) : void as PFNGLVARIANTSVEXTPROC;
@foreign public var glad_glVariantsvEXT: PFNGLVARIANTSVEXTPROC;
@foreign public typedef func(GLuint, GLint const*) : void as PFNGLVARIANTIVEXTPROC;
@foreign public var glad_glVariantivEXT: PFNGLVARIANTIVEXTPROC;
@foreign public typedef func(GLuint, GLfloat const*) : void as PFNGLVARIANTFVEXTPROC;
@foreign public var glad_glVariantfvEXT: PFNGLVARIANTFVEXTPROC;
@foreign public typedef func(GLuint, GLdouble const*) : void as PFNGLVARIANTDVEXTPROC;
@foreign public var glad_glVariantdvEXT: PFNGLVARIANTDVEXTPROC;
@foreign public typedef func(GLuint, GLubyte const*) : void as PFNGLVARIANTUBVEXTPROC;
@foreign public var glad_glVariantubvEXT: PFNGLVARIANTUBVEXTPROC;
@foreign public typedef func(GLuint, GLushort const*) : void as PFNGLVARIANTUSVEXTPROC;
@foreign public var glad_glVariantusvEXT: PFNGLVARIANTUSVEXTPROC;
@foreign public typedef func(GLuint, GLuint const*) : void as PFNGLVARIANTUIVEXTPROC;
@foreign public var glad_glVariantuivEXT: PFNGLVARIANTUIVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLuint, void const*) : void as PFNGLVARIANTPOINTEREXTPROC;
@foreign public var glad_glVariantPointerEXT: PFNGLVARIANTPOINTEREXTPROC;
@foreign public typedef func(GLuint) : void as PFNGLENABLEVARIANTCLIENTSTATEEXTPROC;
@foreign public var glad_glEnableVariantClientStateEXT: PFNGLENABLEVARIANTCLIENTSTATEEXTPROC;
@foreign public typedef func(GLuint) : void as PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC;
@foreign public var glad_glDisableVariantClientStateEXT: PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC;
@foreign public typedef func(GLenum, GLenum) : GLuint as PFNGLBINDLIGHTPARAMETEREXTPROC;
@foreign public var glad_glBindLightParameterEXT: PFNGLBINDLIGHTPARAMETEREXTPROC;
@foreign public typedef func(GLenum, GLenum) : GLuint as PFNGLBINDMATERIALPARAMETEREXTPROC;
@foreign public var glad_glBindMaterialParameterEXT: PFNGLBINDMATERIALPARAMETEREXTPROC;
@foreign public typedef func(GLenum, GLenum, GLenum) : GLuint as PFNGLBINDTEXGENPARAMETEREXTPROC;
@foreign public var glad_glBindTexGenParameterEXT: PFNGLBINDTEXGENPARAMETEREXTPROC;
@foreign public typedef func(GLenum, GLenum) : GLuint as PFNGLBINDTEXTUREUNITPARAMETEREXTPROC;
@foreign public var glad_glBindTextureUnitParameterEXT: PFNGLBINDTEXTUREUNITPARAMETEREXTPROC;
@foreign public typedef func(GLenum) : GLuint as PFNGLBINDPARAMETEREXTPROC;
@foreign public var glad_glBindParameterEXT: PFNGLBINDPARAMETEREXTPROC;
@foreign public typedef func(GLuint, GLenum) : GLboolean as PFNGLISVARIANTENABLEDEXTPROC;
@foreign public var glad_glIsVariantEnabledEXT: PFNGLISVARIANTENABLEDEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean*) : void as PFNGLGETVARIANTBOOLEANVEXTPROC;
@foreign public var glad_glGetVariantBooleanvEXT: PFNGLGETVARIANTBOOLEANVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETVARIANTINTEGERVEXTPROC;
@foreign public var glad_glGetVariantIntegervEXT: PFNGLGETVARIANTINTEGERVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETVARIANTFLOATVEXTPROC;
@foreign public var glad_glGetVariantFloatvEXT: PFNGLGETVARIANTFLOATVEXTPROC;
@foreign public typedef func(GLuint, GLenum, void**) : void as PFNGLGETVARIANTPOINTERVEXTPROC;
@foreign public var glad_glGetVariantPointervEXT: PFNGLGETVARIANTPOINTERVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean*) : void as PFNGLGETINVARIANTBOOLEANVEXTPROC;
@foreign public var glad_glGetInvariantBooleanvEXT: PFNGLGETINVARIANTBOOLEANVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETINVARIANTINTEGERVEXTPROC;
@foreign public var glad_glGetInvariantIntegervEXT: PFNGLGETINVARIANTINTEGERVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETINVARIANTFLOATVEXTPROC;
@foreign public var glad_glGetInvariantFloatvEXT: PFNGLGETINVARIANTFLOATVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLboolean*) : void as PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC;
@foreign public var glad_glGetLocalConstantBooleanvEXT: PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLint*) : void as PFNGLGETLOCALCONSTANTINTEGERVEXTPROC;
@foreign public var glad_glGetLocalConstantIntegervEXT: PFNGLGETLOCALCONSTANTINTEGERVEXTPROC;
@foreign public typedef func(GLuint, GLenum, GLfloat*) : void as PFNGLGETLOCALCONSTANTFLOATVEXTPROC;
@foreign public var glad_glGetLocalConstantFloatvEXT: PFNGLGETLOCALCONSTANTFLOATVEXTPROC;
// empty macro!!
// empty macro!!
@foreign public const WIN32_LEAN_AND_MEAN: i32;
@foreign public const APIENTRY: i32;
@foreign public const APIENTRYP: i32;
@foreign public const GLAPI: i32;
// empty macro!!
@foreign public const GL_DEPTH_BUFFER_BIT: i32;
@foreign public const GL_STENCIL_BUFFER_BIT: i32;
@foreign public const GL_COLOR_BUFFER_BIT: i32;
@foreign public const GL_FALSE: i32;
@foreign public const GL_TRUE: i32;
@foreign public const GL_POINTS: i32;
@foreign public const GL_LINES: i32;
@foreign public const GL_LINE_LOOP: i32;
@foreign public const GL_LINE_STRIP: i32;
@foreign public const GL_TRIANGLES: i32;
@foreign public const GL_TRIANGLE_STRIP: i32;
@foreign public const GL_TRIANGLE_FAN: i32;
@foreign public const GL_NEVER: i32;
@foreign public const GL_LESS: i32;
@foreign public const GL_EQUAL: i32;
@foreign public const GL_LEQUAL: i32;
@foreign public const GL_GREATER: i32;
@foreign public const GL_NOTEQUAL: i32;
@foreign public const GL_GEQUAL: i32;
@foreign public const GL_ALWAYS: i32;
@foreign public const GL_ZERO: i32;
@foreign public const GL_ONE: i32;
@foreign public const GL_SRC_COLOR: i32;
@foreign public const GL_ONE_MINUS_SRC_COLOR: i32;
@foreign public const GL_SRC_ALPHA: i32;
@foreign public const GL_ONE_MINUS_SRC_ALPHA: i32;
@foreign public const GL_DST_ALPHA: i32;
@foreign public const GL_ONE_MINUS_DST_ALPHA: i32;
@foreign public const GL_DST_COLOR: i32;
@foreign public const GL_ONE_MINUS_DST_COLOR: i32;
@foreign public const GL_SRC_ALPHA_SATURATE: i32;
@foreign public const GL_NONE: i32;
@foreign public const GL_FRONT_LEFT: i32;
@foreign public const GL_FRONT_RIGHT: i32;
@foreign public const GL_BACK_LEFT: i32;
@foreign public const GL_BACK_RIGHT: i32;
@foreign public const GL_FRONT: i32;
@foreign public const GL_BACK: i32;
@foreign public const GL_LEFT: i32;
@foreign public const GL_RIGHT: i32;
@foreign public const GL_FRONT_AND_BACK: i32;
@foreign public const GL_NO_ERROR: i32;
@foreign public const GL_INVALID_ENUM: i32;
@foreign public const GL_INVALID_VALUE: i32;
@foreign public const GL_INVALID_OPERATION: i32;
@foreign public const GL_OUT_OF_MEMORY: i32;
@foreign public const GL_CW: i32;
@foreign public const GL_CCW: i32;
@foreign public const GL_POINT_SIZE: i32;
@foreign public const GL_POINT_SIZE_RANGE: i32;
@foreign public const GL_POINT_SIZE_GRANULARITY: i32;
@foreign public const GL_LINE_SMOOTH: i32;
@foreign public const GL_LINE_WIDTH: i32;
@foreign public const GL_LINE_WIDTH_RANGE: i32;
@foreign public const GL_LINE_WIDTH_GRANULARITY: i32;
@foreign public const GL_POLYGON_MODE: i32;
@foreign public const GL_POLYGON_SMOOTH: i32;
@foreign public const GL_CULL_FACE: i32;
@foreign public const GL_CULL_FACE_MODE: i32;
@foreign public const GL_FRONT_FACE: i32;
@foreign public const GL_DEPTH_RANGE: i32;
@foreign public const GL_DEPTH_TEST: i32;
@foreign public const GL_DEPTH_WRITEMASK: i32;
@foreign public const GL_DEPTH_CLEAR_VALUE: i32;
@foreign public const GL_DEPTH_FUNC: i32;
@foreign public const GL_STENCIL_TEST: i32;
@foreign public const GL_STENCIL_CLEAR_VALUE: i32;
@foreign public const GL_STENCIL_FUNC: i32;
@foreign public const GL_STENCIL_VALUE_MASK: i32;
@foreign public const GL_STENCIL_FAIL: i32;
@foreign public const GL_STENCIL_PASS_DEPTH_FAIL: i32;
@foreign public const GL_STENCIL_PASS_DEPTH_PASS: i32;
@foreign public const GL_STENCIL_REF: i32;
@foreign public const GL_STENCIL_WRITEMASK: i32;
@foreign public const GL_VIEWPORT: i32;
@foreign public const GL_DITHER: i32;
@foreign public const GL_BLEND_DST: i32;
@foreign public const GL_BLEND_SRC: i32;
@foreign public const GL_BLEND: i32;
@foreign public const GL_LOGIC_OP_MODE: i32;
@foreign public const GL_COLOR_LOGIC_OP: i32;
@foreign public const GL_DRAW_BUFFER: i32;
@foreign public const GL_READ_BUFFER: i32;
@foreign public const GL_SCISSOR_BOX: i32;
@foreign public const GL_SCISSOR_TEST: i32;
@foreign public const GL_COLOR_CLEAR_VALUE: i32;
@foreign public const GL_COLOR_WRITEMASK: i32;
@foreign public const GL_DOUBLEBUFFER: i32;
@foreign public const GL_STEREO: i32;
@foreign public const GL_LINE_SMOOTH_HINT: i32;
@foreign public const GL_POLYGON_SMOOTH_HINT: i32;
@foreign public const GL_UNPACK_SWAP_BYTES: i32;
@foreign public const GL_UNPACK_LSB_FIRST: i32;
@foreign public const GL_UNPACK_ROW_LENGTH: i32;
@foreign public const GL_UNPACK_SKIP_ROWS: i32;
@foreign public const GL_UNPACK_SKIP_PIXELS: i32;
@foreign public const GL_UNPACK_ALIGNMENT: i32;
@foreign public const GL_PACK_SWAP_BYTES: i32;
@foreign public const GL_PACK_LSB_FIRST: i32;
@foreign public const GL_PACK_ROW_LENGTH: i32;
@foreign public const GL_PACK_SKIP_ROWS: i32;
@foreign public const GL_PACK_SKIP_PIXELS: i32;
@foreign public const GL_PACK_ALIGNMENT: i32;
@foreign public const GL_MAX_TEXTURE_SIZE: i32;
@foreign public const GL_MAX_VIEWPORT_DIMS: i32;
@foreign public const GL_SUBPIXEL_BITS: i32;
@foreign public const GL_TEXTURE_1D: i32;
@foreign public const GL_TEXTURE_2D: i32;
@foreign public const GL_POLYGON_OFFSET_UNITS: i32;
@foreign public const GL_POLYGON_OFFSET_POINT: i32;
@foreign public const GL_POLYGON_OFFSET_LINE: i32;
@foreign public const GL_POLYGON_OFFSET_FILL: i32;
@foreign public const GL_POLYGON_OFFSET_FACTOR: i32;
@foreign public const GL_TEXTURE_BINDING_1D: i32;
@foreign public const GL_TEXTURE_BINDING_2D: i32;
@foreign public const GL_TEXTURE_WIDTH: i32;
@foreign public const GL_TEXTURE_HEIGHT: i32;
@foreign public const GL_TEXTURE_INTERNAL_FORMAT: i32;
@foreign public const GL_TEXTURE_BORDER_COLOR: i32;
@foreign public const GL_TEXTURE_RED_SIZE: i32;
@foreign public const GL_TEXTURE_GREEN_SIZE: i32;
@foreign public const GL_TEXTURE_BLUE_SIZE: i32;
@foreign public const GL_TEXTURE_ALPHA_SIZE: i32;
@foreign public const GL_DONT_CARE: i32;
@foreign public const GL_FASTEST: i32;
@foreign public const GL_NICEST: i32;
@foreign public const GL_BYTE: i32;
@foreign public const GL_UNSIGNED_BYTE: i32;
@foreign public const GL_SHORT: i32;
@foreign public const GL_UNSIGNED_SHORT: i32;
@foreign public const GL_INT: i32;
@foreign public const GL_UNSIGNED_INT: i32;
@foreign public const GL_FLOAT: i32;
@foreign public const GL_DOUBLE: i32;
@foreign public const GL_CLEAR: i32;
@foreign public const GL_AND: i32;
@foreign public const GL_AND_REVERSE: i32;
@foreign public const GL_COPY: i32;
@foreign public const GL_AND_INVERTED: i32;
@foreign public const GL_NOOP: i32;
@foreign public const GL_XOR: i32;
@foreign public const GL_OR: i32;
@foreign public const GL_NOR: i32;
@foreign public const GL_EQUIV: i32;
@foreign public const GL_INVERT: i32;
@foreign public const GL_OR_REVERSE: i32;
@foreign public const GL_COPY_INVERTED: i32;
@foreign public const GL_OR_INVERTED: i32;
@foreign public const GL_NAND: i32;
@foreign public const GL_SET: i32;
@foreign public const GL_TEXTURE: i32;
@foreign public const GL_COLOR: i32;
@foreign public const GL_DEPTH: i32;
@foreign public const GL_STENCIL: i32;
@foreign public const GL_STENCIL_INDEX: i32;
@foreign public const GL_DEPTH_COMPONENT: i32;
@foreign public const GL_RED: i32;
@foreign public const GL_GREEN: i32;
@foreign public const GL_BLUE: i32;
@foreign public const GL_ALPHA: i32;
@foreign public const GL_RGB: i32;
@foreign public const GL_RGBA: i32;
@foreign public const GL_POINT: i32;
@foreign public const GL_LINE: i32;
@foreign public const GL_FILL: i32;
@foreign public const GL_KEEP: i32;
@foreign public const GL_REPLACE: i32;
@foreign public const GL_INCR: i32;
@foreign public const GL_DECR: i32;
@foreign public const GL_VENDOR: i32;
@foreign public const GL_RENDERER: i32;
@foreign public const GL_VERSION: i32;
@foreign public const GL_EXTENSIONS: i32;
@foreign public const GL_NEAREST: i32;
@foreign public const GL_LINEAR: i32;
@foreign public const GL_NEAREST_MIPMAP_NEAREST: i32;
@foreign public const GL_LINEAR_MIPMAP_NEAREST: i32;
@foreign public const GL_NEAREST_MIPMAP_LINEAR: i32;
@foreign public const GL_LINEAR_MIPMAP_LINEAR: i32;
@foreign public const GL_TEXTURE_MAG_FILTER: i32;
@foreign public const GL_TEXTURE_MIN_FILTER: i32;
@foreign public const GL_TEXTURE_WRAP_S: i32;
@foreign public const GL_TEXTURE_WRAP_T: i32;
@foreign public const GL_PROXY_TEXTURE_1D: i32;
@foreign public const GL_PROXY_TEXTURE_2D: i32;
@foreign public const GL_REPEAT: i32;
@foreign public const GL_R3_G3_B2: i32;
@foreign public const GL_RGB4: i32;
@foreign public const GL_RGB5: i32;
@foreign public const GL_RGB8: i32;
@foreign public const GL_RGB10: i32;
@foreign public const GL_RGB12: i32;
@foreign public const GL_RGB16: i32;
@foreign public const GL_RGBA2: i32;
@foreign public const GL_RGBA4: i32;
@foreign public const GL_RGB5_A1: i32;
@foreign public const GL_RGBA8: i32;
@foreign public const GL_RGB10_A2: i32;
@foreign public const GL_RGBA12: i32;
@foreign public const GL_RGBA16: i32;
@foreign public const GL_UNSIGNED_BYTE_3_3_2: i32;
@foreign public const GL_UNSIGNED_SHORT_4_4_4_4: i32;
@foreign public const GL_UNSIGNED_SHORT_5_5_5_1: i32;
@foreign public const GL_UNSIGNED_INT_8_8_8_8: i32;
@foreign public const GL_UNSIGNED_INT_10_10_10_2: i32;
@foreign public const GL_TEXTURE_BINDING_3D: i32;
@foreign public const GL_PACK_SKIP_IMAGES: i32;
@foreign public const GL_PACK_IMAGE_HEIGHT: i32;
@foreign public const GL_UNPACK_SKIP_IMAGES: i32;
@foreign public const GL_UNPACK_IMAGE_HEIGHT: i32;
@foreign public const GL_TEXTURE_3D: i32;
@foreign public const GL_PROXY_TEXTURE_3D: i32;
@foreign public const GL_TEXTURE_DEPTH: i32;
@foreign public const GL_TEXTURE_WRAP_R: i32;
@foreign public const GL_MAX_3D_TEXTURE_SIZE: i32;
@foreign public const GL_UNSIGNED_BYTE_2_3_3_REV: i32;
@foreign public const GL_UNSIGNED_SHORT_5_6_5: i32;
@foreign public const GL_UNSIGNED_SHORT_5_6_5_REV: i32;
@foreign public const GL_UNSIGNED_SHORT_4_4_4_4_REV: i32;
@foreign public const GL_UNSIGNED_SHORT_1_5_5_5_REV: i32;
@foreign public const GL_UNSIGNED_INT_8_8_8_8_REV: i32;
@foreign public const GL_UNSIGNED_INT_2_10_10_10_REV: i32;
@foreign public const GL_BGR: i32;
@foreign public const GL_BGRA: i32;
@foreign public const GL_MAX_ELEMENTS_VERTICES: i32;
@foreign public const GL_MAX_ELEMENTS_INDICES: i32;
@foreign public const GL_CLAMP_TO_EDGE: i32;
@foreign public const GL_TEXTURE_MIN_LOD: i32;
@foreign public const GL_TEXTURE_MAX_LOD: i32;
@foreign public const GL_TEXTURE_BASE_LEVEL: i32;
@foreign public const GL_TEXTURE_MAX_LEVEL: i32;
@foreign public const GL_SMOOTH_POINT_SIZE_RANGE: i32;
@foreign public const GL_SMOOTH_POINT_SIZE_GRANULARITY: i32;
@foreign public const GL_SMOOTH_LINE_WIDTH_RANGE: i32;
@foreign public const GL_SMOOTH_LINE_WIDTH_GRANULARITY: i32;
@foreign public const GL_ALIASED_LINE_WIDTH_RANGE: i32;
@foreign public const GL_TEXTURE0: i32;
@foreign public const GL_TEXTURE1: i32;
@foreign public const GL_TEXTURE2: i32;
@foreign public const GL_TEXTURE3: i32;
@foreign public const GL_TEXTURE4: i32;
@foreign public const GL_TEXTURE5: i32;
@foreign public const GL_TEXTURE6: i32;
@foreign public const GL_TEXTURE7: i32;
@foreign public const GL_TEXTURE8: i32;
@foreign public const GL_TEXTURE9: i32;
@foreign public const GL_TEXTURE10: i32;
@foreign public const GL_TEXTURE11: i32;
@foreign public const GL_TEXTURE12: i32;
@foreign public const GL_TEXTURE13: i32;
@foreign public const GL_TEXTURE14: i32;
@foreign public const GL_TEXTURE15: i32;
@foreign public const GL_TEXTURE16: i32;
@foreign public const GL_TEXTURE17: i32;
@foreign public const GL_TEXTURE18: i32;
@foreign public const GL_TEXTURE19: i32;
@foreign public const GL_TEXTURE20: i32;
@foreign public const GL_TEXTURE21: i32;
@foreign public const GL_TEXTURE22: i32;
@foreign public const GL_TEXTURE23: i32;
@foreign public const GL_TEXTURE24: i32;
@foreign public const GL_TEXTURE25: i32;
@foreign public const GL_TEXTURE26: i32;
@foreign public const GL_TEXTURE27: i32;
@foreign public const GL_TEXTURE28: i32;
@foreign public const GL_TEXTURE29: i32;
@foreign public const GL_TEXTURE30: i32;
@foreign public const GL_TEXTURE31: i32;
@foreign public const GL_ACTIVE_TEXTURE: i32;
@foreign public const GL_MULTISAMPLE: i32;
@foreign public const GL_SAMPLE_ALPHA_TO_COVERAGE: i32;
@foreign public const GL_SAMPLE_ALPHA_TO_ONE: i32;
@foreign public const GL_SAMPLE_COVERAGE: i32;
@foreign public const GL_SAMPLE_BUFFERS: i32;
@foreign public const GL_SAMPLES: i32;
@foreign public const GL_SAMPLE_COVERAGE_VALUE: i32;
@foreign public const GL_SAMPLE_COVERAGE_INVERT: i32;
@foreign public const GL_TEXTURE_CUBE_MAP: i32;
@foreign public const GL_TEXTURE_BINDING_CUBE_MAP: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_POSITIVE_X: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_NEGATIVE_X: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_POSITIVE_Y: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_POSITIVE_Z: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: i32;
@foreign public const GL_PROXY_TEXTURE_CUBE_MAP: i32;
@foreign public const GL_MAX_CUBE_MAP_TEXTURE_SIZE: i32;
@foreign public const GL_COMPRESSED_RGB: i32;
@foreign public const GL_COMPRESSED_RGBA: i32;
@foreign public const GL_TEXTURE_COMPRESSION_HINT: i32;
@foreign public const GL_TEXTURE_COMPRESSED_IMAGE_SIZE: i32;
@foreign public const GL_TEXTURE_COMPRESSED: i32;
@foreign public const GL_NUM_COMPRESSED_TEXTURE_FORMATS: i32;
@foreign public const GL_COMPRESSED_TEXTURE_FORMATS: i32;
@foreign public const GL_CLAMP_TO_BORDER: i32;
@foreign public const GL_BLEND_DST_RGB: i32;
@foreign public const GL_BLEND_SRC_RGB: i32;
@foreign public const GL_BLEND_DST_ALPHA: i32;
@foreign public const GL_BLEND_SRC_ALPHA: i32;
@foreign public const GL_POINT_FADE_THRESHOLD_SIZE: i32;
@foreign public const GL_DEPTH_COMPONENT16: i32;
@foreign public const GL_DEPTH_COMPONENT24: i32;
@foreign public const GL_DEPTH_COMPONENT32: i32;
@foreign public const GL_MIRRORED_REPEAT: i32;
@foreign public const GL_MAX_TEXTURE_LOD_BIAS: i32;
@foreign public const GL_TEXTURE_LOD_BIAS: i32;
@foreign public const GL_INCR_WRAP: i32;
@foreign public const GL_DECR_WRAP: i32;
@foreign public const GL_TEXTURE_DEPTH_SIZE: i32;
@foreign public const GL_TEXTURE_COMPARE_MODE: i32;
@foreign public const GL_TEXTURE_COMPARE_FUNC: i32;
@foreign public const GL_FUNC_ADD: i32;
@foreign public const GL_FUNC_SUBTRACT: i32;
@foreign public const GL_FUNC_REVERSE_SUBTRACT: i32;
@foreign public const GL_MIN: i32;
@foreign public const GL_MAX: i32;
@foreign public const GL_CONSTANT_COLOR: i32;
@foreign public const GL_ONE_MINUS_CONSTANT_COLOR: i32;
@foreign public const GL_CONSTANT_ALPHA: i32;
@foreign public const GL_ONE_MINUS_CONSTANT_ALPHA: i32;
@foreign public const GL_BUFFER_SIZE: i32;
@foreign public const GL_BUFFER_USAGE: i32;
@foreign public const GL_QUERY_COUNTER_BITS: i32;
@foreign public const GL_CURRENT_QUERY: i32;
@foreign public const GL_QUERY_RESULT: i32;
@foreign public const GL_QUERY_RESULT_AVAILABLE: i32;
@foreign public const GL_ARRAY_BUFFER: i32;
@foreign public const GL_ELEMENT_ARRAY_BUFFER: i32;
@foreign public const GL_ARRAY_BUFFER_BINDING: i32;
@foreign public const GL_ELEMENT_ARRAY_BUFFER_BINDING: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: i32;
@foreign public const GL_READ_ONLY: i32;
@foreign public const GL_WRITE_ONLY: i32;
@foreign public const GL_READ_WRITE: i32;
@foreign public const GL_BUFFER_ACCESS: i32;
@foreign public const GL_BUFFER_MAPPED: i32;
@foreign public const GL_BUFFER_MAP_POINTER: i32;
@foreign public const GL_STREAM_DRAW: i32;
@foreign public const GL_STREAM_READ: i32;
@foreign public const GL_STREAM_COPY: i32;
@foreign public const GL_STATIC_DRAW: i32;
@foreign public const GL_STATIC_READ: i32;
@foreign public const GL_STATIC_COPY: i32;
@foreign public const GL_DYNAMIC_DRAW: i32;
@foreign public const GL_DYNAMIC_READ: i32;
@foreign public const GL_DYNAMIC_COPY: i32;
@foreign public const GL_SAMPLES_PASSED: i32;
@foreign public const GL_SRC1_ALPHA: i32;
@foreign public const GL_BLEND_EQUATION_RGB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_ENABLED: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_SIZE: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_STRIDE: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_TYPE: i32;
@foreign public const GL_CURRENT_VERTEX_ATTRIB: i32;
@foreign public const GL_VERTEX_PROGRAM_POINT_SIZE: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_POINTER: i32;
@foreign public const GL_STENCIL_BACK_FUNC: i32;
@foreign public const GL_STENCIL_BACK_FAIL: i32;
@foreign public const GL_STENCIL_BACK_PASS_DEPTH_FAIL: i32;
@foreign public const GL_STENCIL_BACK_PASS_DEPTH_PASS: i32;
@foreign public const GL_MAX_DRAW_BUFFERS: i32;
@foreign public const GL_DRAW_BUFFER0: i32;
@foreign public const GL_DRAW_BUFFER1: i32;
@foreign public const GL_DRAW_BUFFER2: i32;
@foreign public const GL_DRAW_BUFFER3: i32;
@foreign public const GL_DRAW_BUFFER4: i32;
@foreign public const GL_DRAW_BUFFER5: i32;
@foreign public const GL_DRAW_BUFFER6: i32;
@foreign public const GL_DRAW_BUFFER7: i32;
@foreign public const GL_DRAW_BUFFER8: i32;
@foreign public const GL_DRAW_BUFFER9: i32;
@foreign public const GL_DRAW_BUFFER10: i32;
@foreign public const GL_DRAW_BUFFER11: i32;
@foreign public const GL_DRAW_BUFFER12: i32;
@foreign public const GL_DRAW_BUFFER13: i32;
@foreign public const GL_DRAW_BUFFER14: i32;
@foreign public const GL_DRAW_BUFFER15: i32;
@foreign public const GL_BLEND_EQUATION_ALPHA: i32;
@foreign public const GL_MAX_VERTEX_ATTRIBS: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: i32;
@foreign public const GL_MAX_TEXTURE_IMAGE_UNITS: i32;
@foreign public const GL_FRAGMENT_SHADER: i32;
@foreign public const GL_VERTEX_SHADER: i32;
@foreign public const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS: i32;
@foreign public const GL_MAX_VERTEX_UNIFORM_COMPONENTS: i32;
@foreign public const GL_MAX_VARYING_FLOATS: i32;
@foreign public const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: i32;
@foreign public const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: i32;
@foreign public const GL_SHADER_TYPE: i32;
@foreign public const GL_FLOAT_VEC2: i32;
@foreign public const GL_FLOAT_VEC3: i32;
@foreign public const GL_FLOAT_VEC4: i32;
@foreign public const GL_INT_VEC2: i32;
@foreign public const GL_INT_VEC3: i32;
@foreign public const GL_INT_VEC4: i32;
@foreign public const GL_BOOL: i32;
@foreign public const GL_BOOL_VEC2: i32;
@foreign public const GL_BOOL_VEC3: i32;
@foreign public const GL_BOOL_VEC4: i32;
@foreign public const GL_FLOAT_MAT2: i32;
@foreign public const GL_FLOAT_MAT3: i32;
@foreign public const GL_FLOAT_MAT4: i32;
@foreign public const GL_SAMPLER_1D: i32;
@foreign public const GL_SAMPLER_2D: i32;
@foreign public const GL_SAMPLER_3D: i32;
@foreign public const GL_SAMPLER_CUBE: i32;
@foreign public const GL_SAMPLER_1D_SHADOW: i32;
@foreign public const GL_SAMPLER_2D_SHADOW: i32;
@foreign public const GL_DELETE_STATUS: i32;
@foreign public const GL_COMPILE_STATUS: i32;
@foreign public const GL_LINK_STATUS: i32;
@foreign public const GL_VALIDATE_STATUS: i32;
@foreign public const GL_INFO_LOG_LENGTH: i32;
@foreign public const GL_ATTACHED_SHADERS: i32;
@foreign public const GL_ACTIVE_UNIFORMS: i32;
@foreign public const GL_ACTIVE_UNIFORM_MAX_LENGTH: i32;
@foreign public const GL_SHADER_SOURCE_LENGTH: i32;
@foreign public const GL_ACTIVE_ATTRIBUTES: i32;
@foreign public const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH: i32;
@foreign public const GL_FRAGMENT_SHADER_DERIVATIVE_HINT: i32;
@foreign public const GL_SHADING_LANGUAGE_VERSION: i32;
@foreign public const GL_CURRENT_PROGRAM: i32;
@foreign public const GL_POINT_SPRITE_COORD_ORIGIN: i32;
@foreign public const GL_LOWER_LEFT: i32;
@foreign public const GL_UPPER_LEFT: i32;
@foreign public const GL_STENCIL_BACK_REF: i32;
@foreign public const GL_STENCIL_BACK_VALUE_MASK: i32;
@foreign public const GL_STENCIL_BACK_WRITEMASK: i32;
@foreign public const GL_PIXEL_PACK_BUFFER: i32;
@foreign public const GL_PIXEL_UNPACK_BUFFER: i32;
@foreign public const GL_PIXEL_PACK_BUFFER_BINDING: i32;
@foreign public const GL_PIXEL_UNPACK_BUFFER_BINDING: i32;
@foreign public const GL_FLOAT_MAT2x3: i32;
@foreign public const GL_FLOAT_MAT2x4: i32;
@foreign public const GL_FLOAT_MAT3x2: i32;
@foreign public const GL_FLOAT_MAT3x4: i32;
@foreign public const GL_FLOAT_MAT4x2: i32;
@foreign public const GL_FLOAT_MAT4x3: i32;
@foreign public const GL_SRGB: i32;
@foreign public const GL_SRGB8: i32;
@foreign public const GL_SRGB_ALPHA: i32;
@foreign public const GL_SRGB8_ALPHA8: i32;
@foreign public const GL_COMPRESSED_SRGB: i32;
@foreign public const GL_COMPRESSED_SRGB_ALPHA: i32;
@foreign public const GL_COMPARE_REF_TO_TEXTURE: i32;
@foreign public const GL_CLIP_DISTANCE0: i32;
@foreign public const GL_CLIP_DISTANCE1: i32;
@foreign public const GL_CLIP_DISTANCE2: i32;
@foreign public const GL_CLIP_DISTANCE3: i32;
@foreign public const GL_CLIP_DISTANCE4: i32;
@foreign public const GL_CLIP_DISTANCE5: i32;
@foreign public const GL_CLIP_DISTANCE6: i32;
@foreign public const GL_CLIP_DISTANCE7: i32;
@foreign public const GL_MAX_CLIP_DISTANCES: i32;
@foreign public const GL_MAJOR_VERSION: i32;
@foreign public const GL_MINOR_VERSION: i32;
@foreign public const GL_NUM_EXTENSIONS: i32;
@foreign public const GL_CONTEXT_FLAGS: i32;
@foreign public const GL_COMPRESSED_RED: i32;
@foreign public const GL_COMPRESSED_RG: i32;
@foreign public const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: i32;
@foreign public const GL_RGBA32F: i32;
@foreign public const GL_RGB32F: i32;
@foreign public const GL_RGBA16F: i32;
@foreign public const GL_RGB16F: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_INTEGER: i32;
@foreign public const GL_MAX_ARRAY_TEXTURE_LAYERS: i32;
@foreign public const GL_MIN_PROGRAM_TEXEL_OFFSET: i32;
@foreign public const GL_MAX_PROGRAM_TEXEL_OFFSET: i32;
@foreign public const GL_CLAMP_READ_COLOR: i32;
@foreign public const GL_FIXED_ONLY: i32;
@foreign public const GL_MAX_VARYING_COMPONENTS: i32;
@foreign public const GL_TEXTURE_1D_ARRAY: i32;
@foreign public const GL_PROXY_TEXTURE_1D_ARRAY: i32;
@foreign public const GL_TEXTURE_2D_ARRAY: i32;
@foreign public const GL_PROXY_TEXTURE_2D_ARRAY: i32;
@foreign public const GL_TEXTURE_BINDING_1D_ARRAY: i32;
@foreign public const GL_TEXTURE_BINDING_2D_ARRAY: i32;
@foreign public const GL_R11F_G11F_B10F: i32;
@foreign public const GL_UNSIGNED_INT_10F_11F_11F_REV: i32;
@foreign public const GL_RGB9_E5: i32;
@foreign public const GL_UNSIGNED_INT_5_9_9_9_REV: i32;
@foreign public const GL_TEXTURE_SHARED_SIZE: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_BUFFER_MODE: i32;
@foreign public const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_VARYINGS: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_BUFFER_START: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE: i32;
@foreign public const GL_PRIMITIVES_GENERATED: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: i32;
@foreign public const GL_RASTERIZER_DISCARD: i32;
@foreign public const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: i32;
@foreign public const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: i32;
@foreign public const GL_INTERLEAVED_ATTRIBS: i32;
@foreign public const GL_SEPARATE_ATTRIBS: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_BUFFER: i32;
@foreign public const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING: i32;
@foreign public const GL_RGBA32UI: i32;
@foreign public const GL_RGB32UI: i32;
@foreign public const GL_RGBA16UI: i32;
@foreign public const GL_RGB16UI: i32;
@foreign public const GL_RGBA8UI: i32;
@foreign public const GL_RGB8UI: i32;
@foreign public const GL_RGBA32I: i32;
@foreign public const GL_RGB32I: i32;
@foreign public const GL_RGBA16I: i32;
@foreign public const GL_RGB16I: i32;
@foreign public const GL_RGBA8I: i32;
@foreign public const GL_RGB8I: i32;
@foreign public const GL_RED_INTEGER: i32;
@foreign public const GL_GREEN_INTEGER: i32;
@foreign public const GL_BLUE_INTEGER: i32;
@foreign public const GL_RGB_INTEGER: i32;
@foreign public const GL_RGBA_INTEGER: i32;
@foreign public const GL_BGR_INTEGER: i32;
@foreign public const GL_BGRA_INTEGER: i32;
@foreign public const GL_SAMPLER_1D_ARRAY: i32;
@foreign public const GL_SAMPLER_2D_ARRAY: i32;
@foreign public const GL_SAMPLER_1D_ARRAY_SHADOW: i32;
@foreign public const GL_SAMPLER_2D_ARRAY_SHADOW: i32;
@foreign public const GL_SAMPLER_CUBE_SHADOW: i32;
@foreign public const GL_UNSIGNED_INT_VEC2: i32;
@foreign public const GL_UNSIGNED_INT_VEC3: i32;
@foreign public const GL_UNSIGNED_INT_VEC4: i32;
@foreign public const GL_INT_SAMPLER_1D: i32;
@foreign public const GL_INT_SAMPLER_2D: i32;
@foreign public const GL_INT_SAMPLER_3D: i32;
@foreign public const GL_INT_SAMPLER_CUBE: i32;
@foreign public const GL_INT_SAMPLER_1D_ARRAY: i32;
@foreign public const GL_INT_SAMPLER_2D_ARRAY: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_1D: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_2D: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_3D: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_CUBE: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY: i32;
@foreign public const GL_QUERY_WAIT: i32;
@foreign public const GL_QUERY_NO_WAIT: i32;
@foreign public const GL_QUERY_BY_REGION_WAIT: i32;
@foreign public const GL_QUERY_BY_REGION_NO_WAIT: i32;
@foreign public const GL_BUFFER_ACCESS_FLAGS: i32;
@foreign public const GL_BUFFER_MAP_LENGTH: i32;
@foreign public const GL_BUFFER_MAP_OFFSET: i32;
@foreign public const GL_DEPTH_COMPONENT32F: i32;
@foreign public const GL_DEPTH32F_STENCIL8: i32;
@foreign public const GL_FLOAT_32_UNSIGNED_INT_24_8_REV: i32;
@foreign public const GL_INVALID_FRAMEBUFFER_OPERATION: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_DEFAULT: i32;
@foreign public const GL_FRAMEBUFFER_UNDEFINED: i32;
@foreign public const GL_DEPTH_STENCIL_ATTACHMENT: i32;
@foreign public const GL_MAX_RENDERBUFFER_SIZE: i32;
@foreign public const GL_DEPTH_STENCIL: i32;
@foreign public const GL_UNSIGNED_INT_24_8: i32;
@foreign public const GL_DEPTH24_STENCIL8: i32;
@foreign public const GL_TEXTURE_STENCIL_SIZE: i32;
@foreign public const GL_TEXTURE_RED_TYPE: i32;
@foreign public const GL_TEXTURE_GREEN_TYPE: i32;
@foreign public const GL_TEXTURE_BLUE_TYPE: i32;
@foreign public const GL_TEXTURE_ALPHA_TYPE: i32;
@foreign public const GL_TEXTURE_DEPTH_TYPE: i32;
@foreign public const GL_UNSIGNED_NORMALIZED: i32;
@foreign public const GL_FRAMEBUFFER_BINDING: i32;
@foreign public const GL_DRAW_FRAMEBUFFER_BINDING: i32;
@foreign public const GL_RENDERBUFFER_BINDING: i32;
@foreign public const GL_READ_FRAMEBUFFER: i32;
@foreign public const GL_DRAW_FRAMEBUFFER: i32;
@foreign public const GL_READ_FRAMEBUFFER_BINDING: i32;
@foreign public const GL_RENDERBUFFER_SAMPLES: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: i32;
@foreign public const GL_FRAMEBUFFER_COMPLETE: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: i32;
@foreign public const GL_FRAMEBUFFER_UNSUPPORTED: i32;
@foreign public const GL_MAX_COLOR_ATTACHMENTS: i32;
@foreign public const GL_COLOR_ATTACHMENT0: i32;
@foreign public const GL_COLOR_ATTACHMENT1: i32;
@foreign public const GL_COLOR_ATTACHMENT2: i32;
@foreign public const GL_COLOR_ATTACHMENT3: i32;
@foreign public const GL_COLOR_ATTACHMENT4: i32;
@foreign public const GL_COLOR_ATTACHMENT5: i32;
@foreign public const GL_COLOR_ATTACHMENT6: i32;
@foreign public const GL_COLOR_ATTACHMENT7: i32;
@foreign public const GL_COLOR_ATTACHMENT8: i32;
@foreign public const GL_COLOR_ATTACHMENT9: i32;
@foreign public const GL_COLOR_ATTACHMENT10: i32;
@foreign public const GL_COLOR_ATTACHMENT11: i32;
@foreign public const GL_COLOR_ATTACHMENT12: i32;
@foreign public const GL_COLOR_ATTACHMENT13: i32;
@foreign public const GL_COLOR_ATTACHMENT14: i32;
@foreign public const GL_COLOR_ATTACHMENT15: i32;
@foreign public const GL_COLOR_ATTACHMENT16: i32;
@foreign public const GL_COLOR_ATTACHMENT17: i32;
@foreign public const GL_COLOR_ATTACHMENT18: i32;
@foreign public const GL_COLOR_ATTACHMENT19: i32;
@foreign public const GL_COLOR_ATTACHMENT20: i32;
@foreign public const GL_COLOR_ATTACHMENT21: i32;
@foreign public const GL_COLOR_ATTACHMENT22: i32;
@foreign public const GL_COLOR_ATTACHMENT23: i32;
@foreign public const GL_COLOR_ATTACHMENT24: i32;
@foreign public const GL_COLOR_ATTACHMENT25: i32;
@foreign public const GL_COLOR_ATTACHMENT26: i32;
@foreign public const GL_COLOR_ATTACHMENT27: i32;
@foreign public const GL_COLOR_ATTACHMENT28: i32;
@foreign public const GL_COLOR_ATTACHMENT29: i32;
@foreign public const GL_COLOR_ATTACHMENT30: i32;
@foreign public const GL_COLOR_ATTACHMENT31: i32;
@foreign public const GL_DEPTH_ATTACHMENT: i32;
@foreign public const GL_STENCIL_ATTACHMENT: i32;
@foreign public const GL_FRAMEBUFFER: i32;
@foreign public const GL_RENDERBUFFER: i32;
@foreign public const GL_RENDERBUFFER_WIDTH: i32;
@foreign public const GL_RENDERBUFFER_HEIGHT: i32;
@foreign public const GL_RENDERBUFFER_INTERNAL_FORMAT: i32;
@foreign public const GL_STENCIL_INDEX1: i32;
@foreign public const GL_STENCIL_INDEX4: i32;
@foreign public const GL_STENCIL_INDEX8: i32;
@foreign public const GL_STENCIL_INDEX16: i32;
@foreign public const GL_RENDERBUFFER_RED_SIZE: i32;
@foreign public const GL_RENDERBUFFER_GREEN_SIZE: i32;
@foreign public const GL_RENDERBUFFER_BLUE_SIZE: i32;
@foreign public const GL_RENDERBUFFER_ALPHA_SIZE: i32;
@foreign public const GL_RENDERBUFFER_DEPTH_SIZE: i32;
@foreign public const GL_RENDERBUFFER_STENCIL_SIZE: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: i32;
@foreign public const GL_MAX_SAMPLES: i32;
@foreign public const GL_INDEX: i32;
@foreign public const GL_FRAMEBUFFER_SRGB: i32;
@foreign public const GL_HALF_FLOAT: i32;
@foreign public const GL_MAP_READ_BIT: i32;
@foreign public const GL_MAP_WRITE_BIT: i32;
@foreign public const GL_MAP_INVALIDATE_RANGE_BIT: i32;
@foreign public const GL_MAP_INVALIDATE_BUFFER_BIT: i32;
@foreign public const GL_MAP_FLUSH_EXPLICIT_BIT: i32;
@foreign public const GL_MAP_UNSYNCHRONIZED_BIT: i32;
@foreign public const GL_COMPRESSED_RED_RGTC1: i32;
@foreign public const GL_COMPRESSED_SIGNED_RED_RGTC1: i32;
@foreign public const GL_COMPRESSED_RG_RGTC2: i32;
@foreign public const GL_COMPRESSED_SIGNED_RG_RGTC2: i32;
@foreign public const GL_RG: i32;
@foreign public const GL_RG_INTEGER: i32;
@foreign public const GL_R8: i32;
@foreign public const GL_R16: i32;
@foreign public const GL_RG8: i32;
@foreign public const GL_RG16: i32;
@foreign public const GL_R16F: i32;
@foreign public const GL_R32F: i32;
@foreign public const GL_RG16F: i32;
@foreign public const GL_RG32F: i32;
@foreign public const GL_R8I: i32;
@foreign public const GL_R8UI: i32;
@foreign public const GL_R16I: i32;
@foreign public const GL_R16UI: i32;
@foreign public const GL_R32I: i32;
@foreign public const GL_R32UI: i32;
@foreign public const GL_RG8I: i32;
@foreign public const GL_RG8UI: i32;
@foreign public const GL_RG16I: i32;
@foreign public const GL_RG16UI: i32;
@foreign public const GL_RG32I: i32;
@foreign public const GL_RG32UI: i32;
@foreign public const GL_VERTEX_ARRAY_BINDING: i32;
@foreign public const GL_SAMPLER_2D_RECT: i32;
@foreign public const GL_SAMPLER_2D_RECT_SHADOW: i32;
@foreign public const GL_SAMPLER_BUFFER: i32;
@foreign public const GL_INT_SAMPLER_2D_RECT: i32;
@foreign public const GL_INT_SAMPLER_BUFFER: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_2D_RECT: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_BUFFER: i32;
@foreign public const GL_TEXTURE_BUFFER: i32;
@foreign public const GL_MAX_TEXTURE_BUFFER_SIZE: i32;
@foreign public const GL_TEXTURE_BINDING_BUFFER: i32;
@foreign public const GL_TEXTURE_BUFFER_DATA_STORE_BINDING: i32;
@foreign public const GL_TEXTURE_RECTANGLE: i32;
@foreign public const GL_TEXTURE_BINDING_RECTANGLE: i32;
@foreign public const GL_PROXY_TEXTURE_RECTANGLE: i32;
@foreign public const GL_MAX_RECTANGLE_TEXTURE_SIZE: i32;
@foreign public const GL_R8_SNORM: i32;
@foreign public const GL_RG8_SNORM: i32;
@foreign public const GL_RGB8_SNORM: i32;
@foreign public const GL_RGBA8_SNORM: i32;
@foreign public const GL_R16_SNORM: i32;
@foreign public const GL_RG16_SNORM: i32;
@foreign public const GL_RGB16_SNORM: i32;
@foreign public const GL_RGBA16_SNORM: i32;
@foreign public const GL_SIGNED_NORMALIZED: i32;
@foreign public const GL_PRIMITIVE_RESTART: i32;
@foreign public const GL_PRIMITIVE_RESTART_INDEX: i32;
@foreign public const GL_COPY_READ_BUFFER: i32;
@foreign public const GL_COPY_WRITE_BUFFER: i32;
@foreign public const GL_UNIFORM_BUFFER: i32;
@foreign public const GL_UNIFORM_BUFFER_BINDING: i32;
@foreign public const GL_UNIFORM_BUFFER_START: i32;
@foreign public const GL_UNIFORM_BUFFER_SIZE: i32;
@foreign public const GL_MAX_VERTEX_UNIFORM_BLOCKS: i32;
@foreign public const GL_MAX_GEOMETRY_UNIFORM_BLOCKS: i32;
@foreign public const GL_MAX_FRAGMENT_UNIFORM_BLOCKS: i32;
@foreign public const GL_MAX_COMBINED_UNIFORM_BLOCKS: i32;
@foreign public const GL_MAX_UNIFORM_BUFFER_BINDINGS: i32;
@foreign public const GL_MAX_UNIFORM_BLOCK_SIZE: i32;
@foreign public const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: i32;
@foreign public const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: i32;
@foreign public const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: i32;
@foreign public const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: i32;
@foreign public const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: i32;
@foreign public const GL_ACTIVE_UNIFORM_BLOCKS: i32;
@foreign public const GL_UNIFORM_TYPE: i32;
@foreign public const GL_UNIFORM_SIZE: i32;
@foreign public const GL_UNIFORM_NAME_LENGTH: i32;
@foreign public const GL_UNIFORM_BLOCK_INDEX: i32;
@foreign public const GL_UNIFORM_OFFSET: i32;
@foreign public const GL_UNIFORM_ARRAY_STRIDE: i32;
@foreign public const GL_UNIFORM_MATRIX_STRIDE: i32;
@foreign public const GL_UNIFORM_IS_ROW_MAJOR: i32;
@foreign public const GL_UNIFORM_BLOCK_BINDING: i32;
@foreign public const GL_UNIFORM_BLOCK_DATA_SIZE: i32;
@foreign public const GL_UNIFORM_BLOCK_NAME_LENGTH: i32;
@foreign public const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: i32;
@foreign public const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: i32;
@foreign public const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: i32;
@foreign public const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: i32;
@foreign public const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: i32;
@foreign public const GL_INVALID_INDEX: i32;
@foreign public const GL_CONTEXT_CORE_PROFILE_BIT: i32;
@foreign public const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT: i32;
@foreign public const GL_LINES_ADJACENCY: i32;
@foreign public const GL_LINE_STRIP_ADJACENCY: i32;
@foreign public const GL_TRIANGLES_ADJACENCY: i32;
@foreign public const GL_TRIANGLE_STRIP_ADJACENCY: i32;
@foreign public const GL_PROGRAM_POINT_SIZE: i32;
@foreign public const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_LAYERED: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: i32;
@foreign public const GL_GEOMETRY_SHADER: i32;
@foreign public const GL_GEOMETRY_VERTICES_OUT: i32;
@foreign public const GL_GEOMETRY_INPUT_TYPE: i32;
@foreign public const GL_GEOMETRY_OUTPUT_TYPE: i32;
@foreign public const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS: i32;
@foreign public const GL_MAX_GEOMETRY_OUTPUT_VERTICES: i32;
@foreign public const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: i32;
@foreign public const GL_MAX_VERTEX_OUTPUT_COMPONENTS: i32;
@foreign public const GL_MAX_GEOMETRY_INPUT_COMPONENTS: i32;
@foreign public const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS: i32;
@foreign public const GL_MAX_FRAGMENT_INPUT_COMPONENTS: i32;
@foreign public const GL_CONTEXT_PROFILE_MASK: i32;
@foreign public const GL_DEPTH_CLAMP: i32;
@foreign public const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: i32;
@foreign public const GL_FIRST_VERTEX_CONVENTION: i32;
@foreign public const GL_LAST_VERTEX_CONVENTION: i32;
@foreign public const GL_PROVOKING_VERTEX: i32;
@foreign public const GL_TEXTURE_CUBE_MAP_SEAMLESS: i32;
@foreign public const GL_MAX_SERVER_WAIT_TIMEOUT: i32;
@foreign public const GL_OBJECT_TYPE: i32;
@foreign public const GL_SYNC_CONDITION: i32;
@foreign public const GL_SYNC_STATUS: i32;
@foreign public const GL_SYNC_FLAGS: i32;
@foreign public const GL_SYNC_FENCE: i32;
@foreign public const GL_SYNC_GPU_COMMANDS_COMPLETE: i32;
@foreign public const GL_UNSIGNALED: i32;
@foreign public const GL_SIGNALED: i32;
@foreign public const GL_ALREADY_SIGNALED: i32;
@foreign public const GL_TIMEOUT_EXPIRED: i32;
@foreign public const GL_CONDITION_SATISFIED: i32;
@foreign public const GL_WAIT_FAILED: i32;
@foreign public const GL_TIMEOUT_IGNORED: i32;
@foreign public const GL_SYNC_FLUSH_COMMANDS_BIT: i32;
@foreign public const GL_SAMPLE_POSITION: i32;
@foreign public const GL_SAMPLE_MASK: i32;
@foreign public const GL_SAMPLE_MASK_VALUE: i32;
@foreign public const GL_MAX_SAMPLE_MASK_WORDS: i32;
@foreign public const GL_TEXTURE_2D_MULTISAMPLE: i32;
@foreign public const GL_PROXY_TEXTURE_2D_MULTISAMPLE: i32;
@foreign public const GL_TEXTURE_2D_MULTISAMPLE_ARRAY: i32;
@foreign public const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: i32;
@foreign public const GL_TEXTURE_BINDING_2D_MULTISAMPLE: i32;
@foreign public const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: i32;
@foreign public const GL_TEXTURE_SAMPLES: i32;
@foreign public const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: i32;
@foreign public const GL_SAMPLER_2D_MULTISAMPLE: i32;
@foreign public const GL_INT_SAMPLER_2D_MULTISAMPLE: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: i32;
@foreign public const GL_SAMPLER_2D_MULTISAMPLE_ARRAY: i32;
@foreign public const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: i32;
@foreign public const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: i32;
@foreign public const GL_MAX_COLOR_TEXTURE_SAMPLES: i32;
@foreign public const GL_MAX_DEPTH_TEXTURE_SAMPLES: i32;
@foreign public const GL_MAX_INTEGER_SAMPLES: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_DIVISOR: i32;
@foreign public const GL_SRC1_COLOR: i32;
@foreign public const GL_ONE_MINUS_SRC1_COLOR: i32;
@foreign public const GL_ONE_MINUS_SRC1_ALPHA: i32;
@foreign public const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS: i32;
@foreign public const GL_ANY_SAMPLES_PASSED: i32;
@foreign public const GL_SAMPLER_BINDING: i32;
@foreign public const GL_RGB10_A2UI: i32;
@foreign public const GL_TEXTURE_SWIZZLE_R: i32;
@foreign public const GL_TEXTURE_SWIZZLE_G: i32;
@foreign public const GL_TEXTURE_SWIZZLE_B: i32;
@foreign public const GL_TEXTURE_SWIZZLE_A: i32;
@foreign public const GL_TEXTURE_SWIZZLE_RGBA: i32;
@foreign public const GL_TIME_ELAPSED: i32;
@foreign public const GL_TIMESTAMP: i32;
@foreign public const GL_INT_2_10_10_10_REV: i32;
@foreign public const GL_VERSION_1_0: i32;
@foreign public const glCullFace: PFNGLCULLFACEPROC;
@foreign public const glFrontFace: PFNGLFRONTFACEPROC;
@foreign public const glHint: PFNGLHINTPROC;
@foreign public const glLineWidth: PFNGLLINEWIDTHPROC;
@foreign public const glPointSize: PFNGLPOINTSIZEPROC;
@foreign public const glPolygonMode: PFNGLPOLYGONMODEPROC;
@foreign public const glScissor: PFNGLSCISSORPROC;
@foreign public const glTexParameterf: PFNGLTEXPARAMETERFPROC;
@foreign public const glTexParameterfv: PFNGLTEXPARAMETERFVPROC;
@foreign public const glTexParameteri: PFNGLTEXPARAMETERIPROC;
@foreign public const glTexParameteriv: PFNGLTEXPARAMETERIVPROC;
@foreign public const glTexImage1D: PFNGLTEXIMAGE1DPROC;
@foreign public const glTexImage2D: PFNGLTEXIMAGE2DPROC;
@foreign public const glDrawBuffer: PFNGLDRAWBUFFERPROC;
@foreign public const glClear: PFNGLCLEARPROC;
@foreign public const glClearColor: PFNGLCLEARCOLORPROC;
@foreign public const glClearStencil: PFNGLCLEARSTENCILPROC;
@foreign public const glClearDepth: PFNGLCLEARDEPTHPROC;
@foreign public const glStencilMask: PFNGLSTENCILMASKPROC;
@foreign public const glColorMask: PFNGLCOLORMASKPROC;
@foreign public const glDepthMask: PFNGLDEPTHMASKPROC;
@foreign public const glDisable: PFNGLDISABLEPROC;
@foreign public const glEnable: PFNGLENABLEPROC;
@foreign public const glFinish: PFNGLFINISHPROC;
@foreign public const glFlush: PFNGLFLUSHPROC;
@foreign public const glBlendFunc: PFNGLBLENDFUNCPROC;
@foreign public const glLogicOp: PFNGLLOGICOPPROC;
@foreign public const glStencilFunc: PFNGLSTENCILFUNCPROC;
@foreign public const glStencilOp: PFNGLSTENCILOPPROC;
@foreign public const glDepthFunc: PFNGLDEPTHFUNCPROC;
@foreign public const glPixelStoref: PFNGLPIXELSTOREFPROC;
@foreign public const glPixelStorei: PFNGLPIXELSTOREIPROC;
@foreign public const glReadBuffer: PFNGLREADBUFFERPROC;
@foreign public const glReadPixels: PFNGLREADPIXELSPROC;
@foreign public const glGetBooleanv: PFNGLGETBOOLEANVPROC;
@foreign public const glGetDoublev: PFNGLGETDOUBLEVPROC;
@foreign public const glGetError: PFNGLGETERRORPROC;
@foreign public const glGetFloatv: PFNGLGETFLOATVPROC;
@foreign public const glGetIntegerv: PFNGLGETINTEGERVPROC;
@foreign public const glGetString: PFNGLGETSTRINGPROC;
@foreign public const glGetTexImage: PFNGLGETTEXIMAGEPROC;
@foreign public const glGetTexParameterfv: PFNGLGETTEXPARAMETERFVPROC;
@foreign public const glGetTexParameteriv: PFNGLGETTEXPARAMETERIVPROC;
@foreign public const glGetTexLevelParameterfv: PFNGLGETTEXLEVELPARAMETERFVPROC;
@foreign public const glGetTexLevelParameteriv: PFNGLGETTEXLEVELPARAMETERIVPROC;
@foreign public const glIsEnabled: PFNGLISENABLEDPROC;
@foreign public const glDepthRange: PFNGLDEPTHRANGEPROC;
@foreign public const glViewport: PFNGLVIEWPORTPROC;
@foreign public const GL_VERSION_1_1: i32;
@foreign public const glDrawArrays: PFNGLDRAWARRAYSPROC;
@foreign public const glDrawElements: PFNGLDRAWELEMENTSPROC;
@foreign public const glPolygonOffset: PFNGLPOLYGONOFFSETPROC;
@foreign public const glCopyTexImage1D: PFNGLCOPYTEXIMAGE1DPROC;
@foreign public const glCopyTexImage2D: PFNGLCOPYTEXIMAGE2DPROC;
@foreign public const glCopyTexSubImage1D: PFNGLCOPYTEXSUBIMAGE1DPROC;
@foreign public const glCopyTexSubImage2D: PFNGLCOPYTEXSUBIMAGE2DPROC;
@foreign public const glTexSubImage1D: PFNGLTEXSUBIMAGE1DPROC;
@foreign public const glTexSubImage2D: PFNGLTEXSUBIMAGE2DPROC;
@foreign public const glBindTexture: PFNGLBINDTEXTUREPROC;
@foreign public const glDeleteTextures: PFNGLDELETETEXTURESPROC;
@foreign public const glGenTextures: PFNGLGENTEXTURESPROC;
@foreign public const glIsTexture: PFNGLISTEXTUREPROC;
@foreign public const GL_VERSION_1_2: i32;
@foreign public const glDrawRangeElements: PFNGLDRAWRANGEELEMENTSPROC;
@foreign public const glTexImage3D: PFNGLTEXIMAGE3DPROC;
@foreign public const glTexSubImage3D: PFNGLTEXSUBIMAGE3DPROC;
@foreign public const glCopyTexSubImage3D: PFNGLCOPYTEXSUBIMAGE3DPROC;
@foreign public const GL_VERSION_1_3: i32;
@foreign public const glActiveTexture: PFNGLACTIVETEXTUREPROC;
@foreign public const glSampleCoverage: PFNGLSAMPLECOVERAGEPROC;
@foreign public const glCompressedTexImage3D: PFNGLCOMPRESSEDTEXIMAGE3DPROC;
@foreign public const glCompressedTexImage2D: PFNGLCOMPRESSEDTEXIMAGE2DPROC;
@foreign public const glCompressedTexImage1D: PFNGLCOMPRESSEDTEXIMAGE1DPROC;
@foreign public const glCompressedTexSubImage3D: PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC;
@foreign public const glCompressedTexSubImage2D: PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC;
@foreign public const glCompressedTexSubImage1D: PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC;
@foreign public const glGetCompressedTexImage: PFNGLGETCOMPRESSEDTEXIMAGEPROC;
@foreign public const GL_VERSION_1_4: i32;
@foreign public const glBlendFuncSeparate: PFNGLBLENDFUNCSEPARATEPROC;
@foreign public const glMultiDrawArrays: PFNGLMULTIDRAWARRAYSPROC;
@foreign public const glMultiDrawElements: PFNGLMULTIDRAWELEMENTSPROC;
@foreign public const glPointParameterf: PFNGLPOINTPARAMETERFPROC;
@foreign public const glPointParameterfv: PFNGLPOINTPARAMETERFVPROC;
@foreign public const glPointParameteri: PFNGLPOINTPARAMETERIPROC;
@foreign public const glPointParameteriv: PFNGLPOINTPARAMETERIVPROC;
@foreign public const glBlendColor: PFNGLBLENDCOLORPROC;
@foreign public const glBlendEquation: PFNGLBLENDEQUATIONPROC;
@foreign public const GL_VERSION_1_5: i32;
@foreign public const glGenQueries: PFNGLGENQUERIESPROC;
@foreign public const glDeleteQueries: PFNGLDELETEQUERIESPROC;
@foreign public const glIsQuery: PFNGLISQUERYPROC;
@foreign public const glBeginQuery: PFNGLBEGINQUERYPROC;
@foreign public const glEndQuery: PFNGLENDQUERYPROC;
@foreign public const glGetQueryiv: PFNGLGETQUERYIVPROC;
@foreign public const glGetQueryObjectiv: PFNGLGETQUERYOBJECTIVPROC;
@foreign public const glGetQueryObjectuiv: PFNGLGETQUERYOBJECTUIVPROC;
@foreign public const glBindBuffer: PFNGLBINDBUFFERPROC;
@foreign public const glDeleteBuffers: PFNGLDELETEBUFFERSPROC;
@foreign public const glGenBuffers: PFNGLGENBUFFERSPROC;
@foreign public const glIsBuffer: PFNGLISBUFFERPROC;
@foreign public const glBufferData: PFNGLBUFFERDATAPROC;
@foreign public const glBufferSubData: PFNGLBUFFERSUBDATAPROC;
@foreign public const glGetBufferSubData: PFNGLGETBUFFERSUBDATAPROC;
@foreign public const glMapBuffer: PFNGLMAPBUFFERPROC;
@foreign public const glUnmapBuffer: PFNGLUNMAPBUFFERPROC;
@foreign public const glGetBufferParameteriv: PFNGLGETBUFFERPARAMETERIVPROC;
@foreign public const glGetBufferPointerv: PFNGLGETBUFFERPOINTERVPROC;
@foreign public const GL_VERSION_2_0: i32;
@foreign public const glBlendEquationSeparate: PFNGLBLENDEQUATIONSEPARATEPROC;
@foreign public const glDrawBuffers: PFNGLDRAWBUFFERSPROC;
@foreign public const glStencilOpSeparate: PFNGLSTENCILOPSEPARATEPROC;
@foreign public const glStencilFuncSeparate: PFNGLSTENCILFUNCSEPARATEPROC;
@foreign public const glStencilMaskSeparate: PFNGLSTENCILMASKSEPARATEPROC;
@foreign public const glAttachShader: PFNGLATTACHSHADERPROC;
@foreign public const glBindAttribLocation: PFNGLBINDATTRIBLOCATIONPROC;
@foreign public const glCompileShader: PFNGLCOMPILESHADERPROC;
@foreign public const glCreateProgram: PFNGLCREATEPROGRAMPROC;
@foreign public const glCreateShader: PFNGLCREATESHADERPROC;
@foreign public const glDeleteProgram: PFNGLDELETEPROGRAMPROC;
@foreign public const glDeleteShader: PFNGLDELETESHADERPROC;
@foreign public const glDetachShader: PFNGLDETACHSHADERPROC;
@foreign public const glDisableVertexAttribArray: PFNGLDISABLEVERTEXATTRIBARRAYPROC;
@foreign public const glEnableVertexAttribArray: PFNGLENABLEVERTEXATTRIBARRAYPROC;
@foreign public const glGetActiveAttrib: PFNGLGETACTIVEATTRIBPROC;
@foreign public const glGetActiveUniform: PFNGLGETACTIVEUNIFORMPROC;
@foreign public const glGetAttachedShaders: PFNGLGETATTACHEDSHADERSPROC;
@foreign public const glGetAttribLocation: PFNGLGETATTRIBLOCATIONPROC;
@foreign public const glGetProgramiv: PFNGLGETPROGRAMIVPROC;
@foreign public const glGetProgramInfoLog: PFNGLGETPROGRAMINFOLOGPROC;
@foreign public const glGetShaderiv: PFNGLGETSHADERIVPROC;
@foreign public const glGetShaderInfoLog: PFNGLGETSHADERINFOLOGPROC;
@foreign public const glGetShaderSource: PFNGLGETSHADERSOURCEPROC;
@foreign public const glGetUniformLocation: PFNGLGETUNIFORMLOCATIONPROC;
@foreign public const glGetUniformfv: PFNGLGETUNIFORMFVPROC;
@foreign public const glGetUniformiv: PFNGLGETUNIFORMIVPROC;
@foreign public const glGetVertexAttribdv: PFNGLGETVERTEXATTRIBDVPROC;
@foreign public const glGetVertexAttribfv: PFNGLGETVERTEXATTRIBFVPROC;
@foreign public const glGetVertexAttribiv: PFNGLGETVERTEXATTRIBIVPROC;
@foreign public const glGetVertexAttribPointerv: PFNGLGETVERTEXATTRIBPOINTERVPROC;
@foreign public const glIsProgram: PFNGLISPROGRAMPROC;
@foreign public const glIsShader: PFNGLISSHADERPROC;
@foreign public const glLinkProgram: PFNGLLINKPROGRAMPROC;
@foreign public const glShaderSource: PFNGLSHADERSOURCEPROC;
@foreign public const glUseProgram: PFNGLUSEPROGRAMPROC;
@foreign public const glUniform1f: PFNGLUNIFORM1FPROC;
@foreign public const glUniform2f: PFNGLUNIFORM2FPROC;
@foreign public const glUniform3f: PFNGLUNIFORM3FPROC;
@foreign public const glUniform4f: PFNGLUNIFORM4FPROC;
@foreign public const glUniform1i: PFNGLUNIFORM1IPROC;
@foreign public const glUniform2i: PFNGLUNIFORM2IPROC;
@foreign public const glUniform3i: PFNGLUNIFORM3IPROC;
@foreign public const glUniform4i: PFNGLUNIFORM4IPROC;
@foreign public const glUniform1fv: PFNGLUNIFORM1FVPROC;
@foreign public const glUniform2fv: PFNGLUNIFORM2FVPROC;
@foreign public const glUniform3fv: PFNGLUNIFORM3FVPROC;
@foreign public const glUniform4fv: PFNGLUNIFORM4FVPROC;
@foreign public const glUniform1iv: PFNGLUNIFORM1IVPROC;
@foreign public const glUniform2iv: PFNGLUNIFORM2IVPROC;
@foreign public const glUniform3iv: PFNGLUNIFORM3IVPROC;
@foreign public const glUniform4iv: PFNGLUNIFORM4IVPROC;
@foreign public const glUniformMatrix2fv: PFNGLUNIFORMMATRIX2FVPROC;
@foreign public const glUniformMatrix3fv: PFNGLUNIFORMMATRIX3FVPROC;
@foreign public const glUniformMatrix4fv: PFNGLUNIFORMMATRIX4FVPROC;
@foreign public const glValidateProgram: PFNGLVALIDATEPROGRAMPROC;
@foreign public const glVertexAttrib1d: PFNGLVERTEXATTRIB1DPROC;
@foreign public const glVertexAttrib1dv: PFNGLVERTEXATTRIB1DVPROC;
@foreign public const glVertexAttrib1f: PFNGLVERTEXATTRIB1FPROC;
@foreign public const glVertexAttrib1fv: PFNGLVERTEXATTRIB1FVPROC;
@foreign public const glVertexAttrib1s: PFNGLVERTEXATTRIB1SPROC;
@foreign public const glVertexAttrib1sv: PFNGLVERTEXATTRIB1SVPROC;
@foreign public const glVertexAttrib2d: PFNGLVERTEXATTRIB2DPROC;
@foreign public const glVertexAttrib2dv: PFNGLVERTEXATTRIB2DVPROC;
@foreign public const glVertexAttrib2f: PFNGLVERTEXATTRIB2FPROC;
@foreign public const glVertexAttrib2fv: PFNGLVERTEXATTRIB2FVPROC;
@foreign public const glVertexAttrib2s: PFNGLVERTEXATTRIB2SPROC;
@foreign public const glVertexAttrib2sv: PFNGLVERTEXATTRIB2SVPROC;
@foreign public const glVertexAttrib3d: PFNGLVERTEXATTRIB3DPROC;
@foreign public const glVertexAttrib3dv: PFNGLVERTEXATTRIB3DVPROC;
@foreign public const glVertexAttrib3f: PFNGLVERTEXATTRIB3FPROC;
@foreign public const glVertexAttrib3fv: PFNGLVERTEXATTRIB3FVPROC;
@foreign public const glVertexAttrib3s: PFNGLVERTEXATTRIB3SPROC;
@foreign public const glVertexAttrib3sv: PFNGLVERTEXATTRIB3SVPROC;
@foreign public const glVertexAttrib4Nbv: PFNGLVERTEXATTRIB4NBVPROC;
@foreign public const glVertexAttrib4Niv: PFNGLVERTEXATTRIB4NIVPROC;
@foreign public const glVertexAttrib4Nsv: PFNGLVERTEXATTRIB4NSVPROC;
@foreign public const glVertexAttrib4Nub: PFNGLVERTEXATTRIB4NUBPROC;
@foreign public const glVertexAttrib4Nubv: PFNGLVERTEXATTRIB4NUBVPROC;
@foreign public const glVertexAttrib4Nuiv: PFNGLVERTEXATTRIB4NUIVPROC;
@foreign public const glVertexAttrib4Nusv: PFNGLVERTEXATTRIB4NUSVPROC;
@foreign public const glVertexAttrib4bv: PFNGLVERTEXATTRIB4BVPROC;
@foreign public const glVertexAttrib4d: PFNGLVERTEXATTRIB4DPROC;
@foreign public const glVertexAttrib4dv: PFNGLVERTEXATTRIB4DVPROC;
@foreign public const glVertexAttrib4f: PFNGLVERTEXATTRIB4FPROC;
@foreign public const glVertexAttrib4fv: PFNGLVERTEXATTRIB4FVPROC;
@foreign public const glVertexAttrib4iv: PFNGLVERTEXATTRIB4IVPROC;
@foreign public const glVertexAttrib4s: PFNGLVERTEXATTRIB4SPROC;
@foreign public const glVertexAttrib4sv: PFNGLVERTEXATTRIB4SVPROC;
@foreign public const glVertexAttrib4ubv: PFNGLVERTEXATTRIB4UBVPROC;
@foreign public const glVertexAttrib4uiv: PFNGLVERTEXATTRIB4UIVPROC;
@foreign public const glVertexAttrib4usv: PFNGLVERTEXATTRIB4USVPROC;
@foreign public const glVertexAttribPointer: PFNGLVERTEXATTRIBPOINTERPROC;
@foreign public const GL_VERSION_2_1: i32;
@foreign public const glUniformMatrix2x3fv: PFNGLUNIFORMMATRIX2X3FVPROC;
@foreign public const glUniformMatrix3x2fv: PFNGLUNIFORMMATRIX3X2FVPROC;
@foreign public const glUniformMatrix2x4fv: PFNGLUNIFORMMATRIX2X4FVPROC;
@foreign public const glUniformMatrix4x2fv: PFNGLUNIFORMMATRIX4X2FVPROC;
@foreign public const glUniformMatrix3x4fv: PFNGLUNIFORMMATRIX3X4FVPROC;
@foreign public const glUniformMatrix4x3fv: PFNGLUNIFORMMATRIX4X3FVPROC;
@foreign public const GL_VERSION_3_0: i32;
@foreign public const glColorMaski: PFNGLCOLORMASKIPROC;
@foreign public const glGetBooleani_v: PFNGLGETBOOLEANI_VPROC;
@foreign public const glGetIntegeri_v: PFNGLGETINTEGERI_VPROC;
@foreign public const glEnablei: PFNGLENABLEIPROC;
@foreign public const glDisablei: PFNGLDISABLEIPROC;
@foreign public const glIsEnabledi: PFNGLISENABLEDIPROC;
@foreign public const glBeginTransformFeedback: PFNGLBEGINTRANSFORMFEEDBACKPROC;
@foreign public const glEndTransformFeedback: PFNGLENDTRANSFORMFEEDBACKPROC;
@foreign public const glBindBufferRange: PFNGLBINDBUFFERRANGEPROC;
@foreign public const glBindBufferBase: PFNGLBINDBUFFERBASEPROC;
@foreign public const glTransformFeedbackVaryings: PFNGLTRANSFORMFEEDBACKVARYINGSPROC;
@foreign public const glGetTransformFeedbackVarying: PFNGLGETTRANSFORMFEEDBACKVARYINGPROC;
@foreign public const glClampColor: PFNGLCLAMPCOLORPROC;
@foreign public const glBeginConditionalRender: PFNGLBEGINCONDITIONALRENDERPROC;
@foreign public const glEndConditionalRender: PFNGLENDCONDITIONALRENDERPROC;
@foreign public const glVertexAttribIPointer: PFNGLVERTEXATTRIBIPOINTERPROC;
@foreign public const glGetVertexAttribIiv: PFNGLGETVERTEXATTRIBIIVPROC;
@foreign public const glGetVertexAttribIuiv: PFNGLGETVERTEXATTRIBIUIVPROC;
@foreign public const glVertexAttribI1i: PFNGLVERTEXATTRIBI1IPROC;
@foreign public const glVertexAttribI2i: PFNGLVERTEXATTRIBI2IPROC;
@foreign public const glVertexAttribI3i: PFNGLVERTEXATTRIBI3IPROC;
@foreign public const glVertexAttribI4i: PFNGLVERTEXATTRIBI4IPROC;
@foreign public const glVertexAttribI1ui: PFNGLVERTEXATTRIBI1UIPROC;
@foreign public const glVertexAttribI2ui: PFNGLVERTEXATTRIBI2UIPROC;
@foreign public const glVertexAttribI3ui: PFNGLVERTEXATTRIBI3UIPROC;
@foreign public const glVertexAttribI4ui: PFNGLVERTEXATTRIBI4UIPROC;
@foreign public const glVertexAttribI1iv: PFNGLVERTEXATTRIBI1IVPROC;
@foreign public const glVertexAttribI2iv: PFNGLVERTEXATTRIBI2IVPROC;
@foreign public const glVertexAttribI3iv: PFNGLVERTEXATTRIBI3IVPROC;
@foreign public const glVertexAttribI4iv: PFNGLVERTEXATTRIBI4IVPROC;
@foreign public const glVertexAttribI1uiv: PFNGLVERTEXATTRIBI1UIVPROC;
@foreign public const glVertexAttribI2uiv: PFNGLVERTEXATTRIBI2UIVPROC;
@foreign public const glVertexAttribI3uiv: PFNGLVERTEXATTRIBI3UIVPROC;
@foreign public const glVertexAttribI4uiv: PFNGLVERTEXATTRIBI4UIVPROC;
@foreign public const glVertexAttribI4bv: PFNGLVERTEXATTRIBI4BVPROC;
@foreign public const glVertexAttribI4sv: PFNGLVERTEXATTRIBI4SVPROC;
@foreign public const glVertexAttribI4ubv: PFNGLVERTEXATTRIBI4UBVPROC;
@foreign public const glVertexAttribI4usv: PFNGLVERTEXATTRIBI4USVPROC;
@foreign public const glGetUniformuiv: PFNGLGETUNIFORMUIVPROC;
@foreign public const glBindFragDataLocation: PFNGLBINDFRAGDATALOCATIONPROC;
@foreign public const glGetFragDataLocation: PFNGLGETFRAGDATALOCATIONPROC;
@foreign public const glUniform1ui: PFNGLUNIFORM1UIPROC;
@foreign public const glUniform2ui: PFNGLUNIFORM2UIPROC;
@foreign public const glUniform3ui: PFNGLUNIFORM3UIPROC;
@foreign public const glUniform4ui: PFNGLUNIFORM4UIPROC;
@foreign public const glUniform1uiv: PFNGLUNIFORM1UIVPROC;
@foreign public const glUniform2uiv: PFNGLUNIFORM2UIVPROC;
@foreign public const glUniform3uiv: PFNGLUNIFORM3UIVPROC;
@foreign public const glUniform4uiv: PFNGLUNIFORM4UIVPROC;
@foreign public const glTexParameterIiv: PFNGLTEXPARAMETERIIVPROC;
@foreign public const glTexParameterIuiv: PFNGLTEXPARAMETERIUIVPROC;
@foreign public const glGetTexParameterIiv: PFNGLGETTEXPARAMETERIIVPROC;
@foreign public const glGetTexParameterIuiv: PFNGLGETTEXPARAMETERIUIVPROC;
@foreign public const glClearBufferiv: PFNGLCLEARBUFFERIVPROC;
@foreign public const glClearBufferuiv: PFNGLCLEARBUFFERUIVPROC;
@foreign public const glClearBufferfv: PFNGLCLEARBUFFERFVPROC;
@foreign public const glClearBufferfi: PFNGLCLEARBUFFERFIPROC;
@foreign public const glGetStringi: PFNGLGETSTRINGIPROC;
@foreign public const glIsRenderbuffer: PFNGLISRENDERBUFFERPROC;
@foreign public const glBindRenderbuffer: PFNGLBINDRENDERBUFFERPROC;
@foreign public const glDeleteRenderbuffers: PFNGLDELETERENDERBUFFERSPROC;
@foreign public const glGenRenderbuffers: PFNGLGENRENDERBUFFERSPROC;
@foreign public const glRenderbufferStorage: PFNGLRENDERBUFFERSTORAGEPROC;
@foreign public const glGetRenderbufferParameteriv: PFNGLGETRENDERBUFFERPARAMETERIVPROC;
@foreign public const glIsFramebuffer: PFNGLISFRAMEBUFFERPROC;
@foreign public const glBindFramebuffer: PFNGLBINDFRAMEBUFFERPROC;
@foreign public const glDeleteFramebuffers: PFNGLDELETEFRAMEBUFFERSPROC;
@foreign public const glGenFramebuffers: PFNGLGENFRAMEBUFFERSPROC;
@foreign public const glCheckFramebufferStatus: PFNGLCHECKFRAMEBUFFERSTATUSPROC;
@foreign public const glFramebufferTexture1D: PFNGLFRAMEBUFFERTEXTURE1DPROC;
@foreign public const glFramebufferTexture2D: PFNGLFRAMEBUFFERTEXTURE2DPROC;
@foreign public const glFramebufferTexture3D: PFNGLFRAMEBUFFERTEXTURE3DPROC;
@foreign public const glFramebufferRenderbuffer: PFNGLFRAMEBUFFERRENDERBUFFERPROC;
@foreign public const glGetFramebufferAttachmentParameteriv: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC;
@foreign public const glGenerateMipmap: PFNGLGENERATEMIPMAPPROC;
@foreign public const glBlitFramebuffer: PFNGLBLITFRAMEBUFFERPROC;
@foreign public const glRenderbufferStorageMultisample: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC;
@foreign public const glFramebufferTextureLayer: PFNGLFRAMEBUFFERTEXTURELAYERPROC;
@foreign public const glMapBufferRange: PFNGLMAPBUFFERRANGEPROC;
@foreign public const glFlushMappedBufferRange: PFNGLFLUSHMAPPEDBUFFERRANGEPROC;
@foreign public const glBindVertexArray: PFNGLBINDVERTEXARRAYPROC;
@foreign public const glDeleteVertexArrays: PFNGLDELETEVERTEXARRAYSPROC;
@foreign public const glGenVertexArrays: PFNGLGENVERTEXARRAYSPROC;
@foreign public const glIsVertexArray: PFNGLISVERTEXARRAYPROC;
@foreign public const GL_VERSION_3_1: i32;
@foreign public const glDrawArraysInstanced: PFNGLDRAWARRAYSINSTANCEDPROC;
@foreign public const glDrawElementsInstanced: PFNGLDRAWELEMENTSINSTANCEDPROC;
@foreign public const glTexBuffer: PFNGLTEXBUFFERPROC;
@foreign public const glPrimitiveRestartIndex: PFNGLPRIMITIVERESTARTINDEXPROC;
@foreign public const glCopyBufferSubData: PFNGLCOPYBUFFERSUBDATAPROC;
@foreign public const glGetUniformIndices: PFNGLGETUNIFORMINDICESPROC;
@foreign public const glGetActiveUniformsiv: PFNGLGETACTIVEUNIFORMSIVPROC;
@foreign public const glGetActiveUniformName: PFNGLGETACTIVEUNIFORMNAMEPROC;
@foreign public const glGetUniformBlockIndex: PFNGLGETUNIFORMBLOCKINDEXPROC;
@foreign public const glGetActiveUniformBlockiv: PFNGLGETACTIVEUNIFORMBLOCKIVPROC;
@foreign public const glGetActiveUniformBlockName: PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC;
@foreign public const glUniformBlockBinding: PFNGLUNIFORMBLOCKBINDINGPROC;
@foreign public const GL_VERSION_3_2: i32;
@foreign public const glDrawElementsBaseVertex: PFNGLDRAWELEMENTSBASEVERTEXPROC;
@foreign public const glDrawRangeElementsBaseVertex: PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC;
@foreign public const glDrawElementsInstancedBaseVertex: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC;
@foreign public const glMultiDrawElementsBaseVertex: PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC;
@foreign public const glProvokingVertex: PFNGLPROVOKINGVERTEXPROC;
@foreign public const glFenceSync: PFNGLFENCESYNCPROC;
@foreign public const glIsSync: PFNGLISSYNCPROC;
@foreign public const glDeleteSync: PFNGLDELETESYNCPROC;
@foreign public const glClientWaitSync: PFNGLCLIENTWAITSYNCPROC;
@foreign public const glWaitSync: PFNGLWAITSYNCPROC;
@foreign public const glGetInteger64v: PFNGLGETINTEGER64VPROC;
@foreign public const glGetSynciv: PFNGLGETSYNCIVPROC;
@foreign public const glGetInteger64i_v: PFNGLGETINTEGER64I_VPROC;
@foreign public const glGetBufferParameteri64v: PFNGLGETBUFFERPARAMETERI64VPROC;
@foreign public const glFramebufferTexture: PFNGLFRAMEBUFFERTEXTUREPROC;
@foreign public const glTexImage2DMultisample: PFNGLTEXIMAGE2DMULTISAMPLEPROC;
@foreign public const glTexImage3DMultisample: PFNGLTEXIMAGE3DMULTISAMPLEPROC;
@foreign public const glGetMultisamplefv: PFNGLGETMULTISAMPLEFVPROC;
@foreign public const glSampleMaski: PFNGLSAMPLEMASKIPROC;
@foreign public const GL_VERSION_3_3: i32;
@foreign public const glBindFragDataLocationIndexed: PFNGLBINDFRAGDATALOCATIONINDEXEDPROC;
@foreign public const glGetFragDataIndex: PFNGLGETFRAGDATAINDEXPROC;
@foreign public const glGenSamplers: PFNGLGENSAMPLERSPROC;
@foreign public const glDeleteSamplers: PFNGLDELETESAMPLERSPROC;
@foreign public const glIsSampler: PFNGLISSAMPLERPROC;
@foreign public const glBindSampler: PFNGLBINDSAMPLERPROC;
@foreign public const glSamplerParameteri: PFNGLSAMPLERPARAMETERIPROC;
@foreign public const glSamplerParameteriv: PFNGLSAMPLERPARAMETERIVPROC;
@foreign public const glSamplerParameterf: PFNGLSAMPLERPARAMETERFPROC;
@foreign public const glSamplerParameterfv: PFNGLSAMPLERPARAMETERFVPROC;
@foreign public const glSamplerParameterIiv: PFNGLSAMPLERPARAMETERIIVPROC;
@foreign public const glSamplerParameterIuiv: PFNGLSAMPLERPARAMETERIUIVPROC;
@foreign public const glGetSamplerParameteriv: PFNGLGETSAMPLERPARAMETERIVPROC;
@foreign public const glGetSamplerParameterIiv: PFNGLGETSAMPLERPARAMETERIIVPROC;
@foreign public const glGetSamplerParameterfv: PFNGLGETSAMPLERPARAMETERFVPROC;
@foreign public const glGetSamplerParameterIuiv: PFNGLGETSAMPLERPARAMETERIUIVPROC;
@foreign public const glQueryCounter: PFNGLQUERYCOUNTERPROC;
@foreign public const glGetQueryObjecti64v: PFNGLGETQUERYOBJECTI64VPROC;
@foreign public const glGetQueryObjectui64v: PFNGLGETQUERYOBJECTUI64VPROC;
@foreign public const glVertexAttribDivisor: PFNGLVERTEXATTRIBDIVISORPROC;
@foreign public const glVertexAttribP1ui: PFNGLVERTEXATTRIBP1UIPROC;
@foreign public const glVertexAttribP1uiv: PFNGLVERTEXATTRIBP1UIVPROC;
@foreign public const glVertexAttribP2ui: PFNGLVERTEXATTRIBP2UIPROC;
@foreign public const glVertexAttribP2uiv: PFNGLVERTEXATTRIBP2UIVPROC;
@foreign public const glVertexAttribP3ui: PFNGLVERTEXATTRIBP3UIPROC;
@foreign public const glVertexAttribP3uiv: PFNGLVERTEXATTRIBP3UIVPROC;
@foreign public const glVertexAttribP4ui: PFNGLVERTEXATTRIBP4UIPROC;
@foreign public const glVertexAttribP4uiv: PFNGLVERTEXATTRIBP4UIVPROC;
@foreign public const glVertexP2ui: PFNGLVERTEXP2UIPROC;
@foreign public const glVertexP2uiv: PFNGLVERTEXP2UIVPROC;
@foreign public const glVertexP3ui: PFNGLVERTEXP3UIPROC;
@foreign public const glVertexP3uiv: PFNGLVERTEXP3UIVPROC;
@foreign public const glVertexP4ui: PFNGLVERTEXP4UIPROC;
@foreign public const glVertexP4uiv: PFNGLVERTEXP4UIVPROC;
@foreign public const glTexCoordP1ui: PFNGLTEXCOORDP1UIPROC;
@foreign public const glTexCoordP1uiv: PFNGLTEXCOORDP1UIVPROC;
@foreign public const glTexCoordP2ui: PFNGLTEXCOORDP2UIPROC;
@foreign public const glTexCoordP2uiv: PFNGLTEXCOORDP2UIVPROC;
@foreign public const glTexCoordP3ui: PFNGLTEXCOORDP3UIPROC;
@foreign public const glTexCoordP3uiv: PFNGLTEXCOORDP3UIVPROC;
@foreign public const glTexCoordP4ui: PFNGLTEXCOORDP4UIPROC;
@foreign public const glTexCoordP4uiv: PFNGLTEXCOORDP4UIVPROC;
@foreign public const glMultiTexCoordP1ui: PFNGLMULTITEXCOORDP1UIPROC;
@foreign public const glMultiTexCoordP1uiv: PFNGLMULTITEXCOORDP1UIVPROC;
@foreign public const glMultiTexCoordP2ui: PFNGLMULTITEXCOORDP2UIPROC;
@foreign public const glMultiTexCoordP2uiv: PFNGLMULTITEXCOORDP2UIVPROC;
@foreign public const glMultiTexCoordP3ui: PFNGLMULTITEXCOORDP3UIPROC;
@foreign public const glMultiTexCoordP3uiv: PFNGLMULTITEXCOORDP3UIVPROC;
@foreign public const glMultiTexCoordP4ui: PFNGLMULTITEXCOORDP4UIPROC;
@foreign public const glMultiTexCoordP4uiv: PFNGLMULTITEXCOORDP4UIVPROC;
@foreign public const glNormalP3ui: PFNGLNORMALP3UIPROC;
@foreign public const glNormalP3uiv: PFNGLNORMALP3UIVPROC;
@foreign public const glColorP3ui: PFNGLCOLORP3UIPROC;
@foreign public const glColorP3uiv: PFNGLCOLORP3UIVPROC;
@foreign public const glColorP4ui: PFNGLCOLORP4UIPROC;
@foreign public const glColorP4uiv: PFNGLCOLORP4UIVPROC;
@foreign public const glSecondaryColorP3ui: PFNGLSECONDARYCOLORP3UIPROC;
@foreign public const glSecondaryColorP3uiv: PFNGLSECONDARYCOLORP3UIVPROC;
@foreign public const GL_MAX_DEBUG_MESSAGE_LENGTH_AMD: i32;
@foreign public const GL_MAX_DEBUG_LOGGED_MESSAGES_AMD: i32;
@foreign public const GL_DEBUG_LOGGED_MESSAGES_AMD: i32;
@foreign public const GL_DEBUG_SEVERITY_HIGH_AMD: i32;
@foreign public const GL_DEBUG_SEVERITY_MEDIUM_AMD: i32;
@foreign public const GL_DEBUG_SEVERITY_LOW_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_API_ERROR_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_DEPRECATION_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_PERFORMANCE_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_APPLICATION_AMD: i32;
@foreign public const GL_DEBUG_CATEGORY_OTHER_AMD: i32;
@foreign public const GL_QUERY_BUFFER_AMD: i32;
@foreign public const GL_QUERY_BUFFER_BINDING_AMD: i32;
@foreign public const GL_QUERY_RESULT_NO_WAIT_AMD: i32;
@foreign public const GL_FIXED: i32;
@foreign public const GL_IMPLEMENTATION_COLOR_READ_TYPE: i32;
@foreign public const GL_IMPLEMENTATION_COLOR_READ_FORMAT: i32;
@foreign public const GL_LOW_FLOAT: i32;
@foreign public const GL_MEDIUM_FLOAT: i32;
@foreign public const GL_HIGH_FLOAT: i32;
@foreign public const GL_LOW_INT: i32;
@foreign public const GL_MEDIUM_INT: i32;
@foreign public const GL_HIGH_INT: i32;
@foreign public const GL_SHADER_COMPILER: i32;
@foreign public const GL_SHADER_BINARY_FORMATS: i32;
@foreign public const GL_NUM_SHADER_BINARY_FORMATS: i32;
@foreign public const GL_MAX_VERTEX_UNIFORM_VECTORS: i32;
@foreign public const GL_MAX_VARYING_VECTORS: i32;
@foreign public const GL_MAX_FRAGMENT_UNIFORM_VECTORS: i32;
@foreign public const GL_RGB565: i32;
@foreign public const GL_COMPRESSED_RGB8_ETC2: i32;
@foreign public const GL_COMPRESSED_SRGB8_ETC2: i32;
@foreign public const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: i32;
@foreign public const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: i32;
@foreign public const GL_COMPRESSED_RGBA8_ETC2_EAC: i32;
@foreign public const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: i32;
@foreign public const GL_COMPRESSED_R11_EAC: i32;
@foreign public const GL_COMPRESSED_SIGNED_R11_EAC: i32;
@foreign public const GL_COMPRESSED_RG11_EAC: i32;
@foreign public const GL_COMPRESSED_SIGNED_RG11_EAC: i32;
@foreign public const GL_PRIMITIVE_RESTART_FIXED_INDEX: i32;
@foreign public const GL_ANY_SAMPLES_PASSED_CONSERVATIVE: i32;
@foreign public const GL_MAX_ELEMENT_INDEX: i32;
@foreign public const GL_MAP_PERSISTENT_BIT: i32;
@foreign public const GL_MAP_COHERENT_BIT: i32;
@foreign public const GL_DYNAMIC_STORAGE_BIT: i32;
@foreign public const GL_CLIENT_STORAGE_BIT: i32;
@foreign public const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT: i32;
@foreign public const GL_BUFFER_IMMUTABLE_STORAGE: i32;
@foreign public const GL_BUFFER_STORAGE_FLAGS: i32;
@foreign public const GL_UNPACK_COMPRESSED_BLOCK_WIDTH: i32;
@foreign public const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT: i32;
@foreign public const GL_UNPACK_COMPRESSED_BLOCK_DEPTH: i32;
@foreign public const GL_UNPACK_COMPRESSED_BLOCK_SIZE: i32;
@foreign public const GL_PACK_COMPRESSED_BLOCK_WIDTH: i32;
@foreign public const GL_PACK_COMPRESSED_BLOCK_HEIGHT: i32;
@foreign public const GL_PACK_COMPRESSED_BLOCK_DEPTH: i32;
@foreign public const GL_PACK_COMPRESSED_BLOCK_SIZE: i32;
@foreign public const GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB: i32;
@foreign public const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB: i32;
@foreign public const GL_DEBUG_CALLBACK_FUNCTION_ARB: i32;
@foreign public const GL_DEBUG_CALLBACK_USER_PARAM_ARB: i32;
@foreign public const GL_DEBUG_SOURCE_API_ARB: i32;
@foreign public const GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB: i32;
@foreign public const GL_DEBUG_SOURCE_SHADER_COMPILER_ARB: i32;
@foreign public const GL_DEBUG_SOURCE_THIRD_PARTY_ARB: i32;
@foreign public const GL_DEBUG_SOURCE_APPLICATION_ARB: i32;
@foreign public const GL_DEBUG_SOURCE_OTHER_ARB: i32;
@foreign public const GL_DEBUG_TYPE_ERROR_ARB: i32;
@foreign public const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB: i32;
@foreign public const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB: i32;
@foreign public const GL_DEBUG_TYPE_PORTABILITY_ARB: i32;
@foreign public const GL_DEBUG_TYPE_PERFORMANCE_ARB: i32;
@foreign public const GL_DEBUG_TYPE_OTHER_ARB: i32;
@foreign public const GL_MAX_DEBUG_MESSAGE_LENGTH_ARB: i32;
@foreign public const GL_MAX_DEBUG_LOGGED_MESSAGES_ARB: i32;
@foreign public const GL_DEBUG_LOGGED_MESSAGES_ARB: i32;
@foreign public const GL_DEBUG_SEVERITY_HIGH_ARB: i32;
@foreign public const GL_DEBUG_SEVERITY_MEDIUM_ARB: i32;
@foreign public const GL_DEBUG_SEVERITY_LOW_ARB: i32;
@foreign public const GL_DEPTH_COMPONENT16_ARB: i32;
@foreign public const GL_DEPTH_COMPONENT24_ARB: i32;
@foreign public const GL_DEPTH_COMPONENT32_ARB: i32;
@foreign public const GL_TEXTURE_DEPTH_SIZE_ARB: i32;
@foreign public const GL_DEPTH_TEXTURE_MODE_ARB: i32;
@foreign public const GL_MAX_DRAW_BUFFERS_ARB: i32;
@foreign public const GL_DRAW_BUFFER0_ARB: i32;
@foreign public const GL_DRAW_BUFFER1_ARB: i32;
@foreign public const GL_DRAW_BUFFER2_ARB: i32;
@foreign public const GL_DRAW_BUFFER3_ARB: i32;
@foreign public const GL_DRAW_BUFFER4_ARB: i32;
@foreign public const GL_DRAW_BUFFER5_ARB: i32;
@foreign public const GL_DRAW_BUFFER6_ARB: i32;
@foreign public const GL_DRAW_BUFFER7_ARB: i32;
@foreign public const GL_DRAW_BUFFER8_ARB: i32;
@foreign public const GL_DRAW_BUFFER9_ARB: i32;
@foreign public const GL_DRAW_BUFFER10_ARB: i32;
@foreign public const GL_DRAW_BUFFER11_ARB: i32;
@foreign public const GL_DRAW_BUFFER12_ARB: i32;
@foreign public const GL_DRAW_BUFFER13_ARB: i32;
@foreign public const GL_DRAW_BUFFER14_ARB: i32;
@foreign public const GL_DRAW_BUFFER15_ARB: i32;
@foreign public const GL_MAX_UNIFORM_LOCATIONS: i32;
@foreign public const GL_FRAGMENT_PROGRAM_ARB: i32;
@foreign public const GL_PROGRAM_FORMAT_ASCII_ARB: i32;
@foreign public const GL_PROGRAM_LENGTH_ARB: i32;
@foreign public const GL_PROGRAM_FORMAT_ARB: i32;
@foreign public const GL_PROGRAM_BINDING_ARB: i32;
@foreign public const GL_PROGRAM_INSTRUCTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_INSTRUCTIONS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB: i32;
@foreign public const GL_PROGRAM_TEMPORARIES_ARB: i32;
@foreign public const GL_MAX_PROGRAM_TEMPORARIES_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_TEMPORARIES_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB: i32;
@foreign public const GL_PROGRAM_PARAMETERS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_PARAMETERS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_PARAMETERS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB: i32;
@foreign public const GL_PROGRAM_ATTRIBS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_ATTRIBS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_ATTRIBS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_ENV_PARAMETERS_ARB: i32;
@foreign public const GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB: i32;
@foreign public const GL_PROGRAM_ALU_INSTRUCTIONS_ARB: i32;
@foreign public const GL_PROGRAM_TEX_INSTRUCTIONS_ARB: i32;
@foreign public const GL_PROGRAM_TEX_INDIRECTIONS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: i32;
@foreign public const GL_PROGRAM_STRING_ARB: i32;
@foreign public const GL_PROGRAM_ERROR_POSITION_ARB: i32;
@foreign public const GL_CURRENT_MATRIX_ARB: i32;
@foreign public const GL_TRANSPOSE_CURRENT_MATRIX_ARB: i32;
@foreign public const GL_CURRENT_MATRIX_STACK_DEPTH_ARB: i32;
@foreign public const GL_MAX_PROGRAM_MATRICES_ARB: i32;
@foreign public const GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB: i32;
@foreign public const GL_MAX_TEXTURE_COORDS_ARB: i32;
@foreign public const GL_MAX_TEXTURE_IMAGE_UNITS_ARB: i32;
@foreign public const GL_PROGRAM_ERROR_STRING_ARB: i32;
@foreign public const GL_MATRIX0_ARB: i32;
@foreign public const GL_MATRIX1_ARB: i32;
@foreign public const GL_MATRIX2_ARB: i32;
@foreign public const GL_MATRIX3_ARB: i32;
@foreign public const GL_MATRIX4_ARB: i32;
@foreign public const GL_MATRIX5_ARB: i32;
@foreign public const GL_MATRIX6_ARB: i32;
@foreign public const GL_MATRIX7_ARB: i32;
@foreign public const GL_MATRIX8_ARB: i32;
@foreign public const GL_MATRIX9_ARB: i32;
@foreign public const GL_MATRIX10_ARB: i32;
@foreign public const GL_MATRIX11_ARB: i32;
@foreign public const GL_MATRIX12_ARB: i32;
@foreign public const GL_MATRIX13_ARB: i32;
@foreign public const GL_MATRIX14_ARB: i32;
@foreign public const GL_MATRIX15_ARB: i32;
@foreign public const GL_MATRIX16_ARB: i32;
@foreign public const GL_MATRIX17_ARB: i32;
@foreign public const GL_MATRIX18_ARB: i32;
@foreign public const GL_MATRIX19_ARB: i32;
@foreign public const GL_MATRIX20_ARB: i32;
@foreign public const GL_MATRIX21_ARB: i32;
@foreign public const GL_MATRIX22_ARB: i32;
@foreign public const GL_MATRIX23_ARB: i32;
@foreign public const GL_MATRIX24_ARB: i32;
@foreign public const GL_MATRIX25_ARB: i32;
@foreign public const GL_MATRIX26_ARB: i32;
@foreign public const GL_MATRIX27_ARB: i32;
@foreign public const GL_MATRIX28_ARB: i32;
@foreign public const GL_MATRIX29_ARB: i32;
@foreign public const GL_MATRIX30_ARB: i32;
@foreign public const GL_MATRIX31_ARB: i32;
@foreign public const GL_FRAGMENT_SHADER_ARB: i32;
@foreign public const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB: i32;
@foreign public const GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB: i32;
@foreign public const GL_MULTISAMPLE_ARB: i32;
@foreign public const GL_SAMPLE_ALPHA_TO_COVERAGE_ARB: i32;
@foreign public const GL_SAMPLE_ALPHA_TO_ONE_ARB: i32;
@foreign public const GL_SAMPLE_COVERAGE_ARB: i32;
@foreign public const GL_SAMPLE_BUFFERS_ARB: i32;
@foreign public const GL_SAMPLES_ARB: i32;
@foreign public const GL_SAMPLE_COVERAGE_VALUE_ARB: i32;
@foreign public const GL_SAMPLE_COVERAGE_INVERT_ARB: i32;
@foreign public const GL_MULTISAMPLE_BIT_ARB: i32;
@foreign public const GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB: i32;
@foreign public const GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB: i32;
@foreign public const GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB: i32;
@foreign public const GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB: i32;
@foreign public const GL_SAMPLE_LOCATION_ARB: i32;
@foreign public const GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB: i32;
@foreign public const GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB: i32;
@foreign public const GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB: i32;
@foreign public const GL_COMPRESSED_ALPHA_ARB: i32;
@foreign public const GL_COMPRESSED_LUMINANCE_ARB: i32;
@foreign public const GL_COMPRESSED_LUMINANCE_ALPHA_ARB: i32;
@foreign public const GL_COMPRESSED_INTENSITY_ARB: i32;
@foreign public const GL_COMPRESSED_RGB_ARB: i32;
@foreign public const GL_COMPRESSED_RGBA_ARB: i32;
@foreign public const GL_TEXTURE_COMPRESSION_HINT_ARB: i32;
@foreign public const GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB: i32;
@foreign public const GL_TEXTURE_COMPRESSED_ARB: i32;
@foreign public const GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB: i32;
@foreign public const GL_COMPRESSED_TEXTURE_FORMATS_ARB: i32;
@foreign public const GL_TEXTURE_RED_TYPE_ARB: i32;
@foreign public const GL_TEXTURE_GREEN_TYPE_ARB: i32;
@foreign public const GL_TEXTURE_BLUE_TYPE_ARB: i32;
@foreign public const GL_TEXTURE_ALPHA_TYPE_ARB: i32;
@foreign public const GL_TEXTURE_LUMINANCE_TYPE_ARB: i32;
@foreign public const GL_TEXTURE_INTENSITY_TYPE_ARB: i32;
@foreign public const GL_TEXTURE_DEPTH_TYPE_ARB: i32;
@foreign public const GL_UNSIGNED_NORMALIZED_ARB: i32;
@foreign public const GL_RGBA32F_ARB: i32;
@foreign public const GL_RGB32F_ARB: i32;
@foreign public const GL_ALPHA32F_ARB: i32;
@foreign public const GL_INTENSITY32F_ARB: i32;
@foreign public const GL_LUMINANCE32F_ARB: i32;
@foreign public const GL_LUMINANCE_ALPHA32F_ARB: i32;
@foreign public const GL_RGBA16F_ARB: i32;
@foreign public const GL_RGB16F_ARB: i32;
@foreign public const GL_ALPHA16F_ARB: i32;
@foreign public const GL_INTENSITY16F_ARB: i32;
@foreign public const GL_LUMINANCE16F_ARB: i32;
@foreign public const GL_LUMINANCE_ALPHA16F_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_BINDING: i32;
@foreign public const GL_VERTEX_ATTRIB_RELATIVE_OFFSET: i32;
@foreign public const GL_VERTEX_BINDING_DIVISOR: i32;
@foreign public const GL_VERTEX_BINDING_OFFSET: i32;
@foreign public const GL_VERTEX_BINDING_STRIDE: i32;
@foreign public const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: i32;
@foreign public const GL_MAX_VERTEX_ATTRIB_BINDINGS: i32;
@foreign public const GL_BUFFER_SIZE_ARB: i32;
@foreign public const GL_BUFFER_USAGE_ARB: i32;
@foreign public const GL_ARRAY_BUFFER_ARB: i32;
@foreign public const GL_ELEMENT_ARRAY_BUFFER_ARB: i32;
@foreign public const GL_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_VERTEX_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_NORMAL_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_COLOR_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_INDEX_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB: i32;
@foreign public const GL_READ_ONLY_ARB: i32;
@foreign public const GL_WRITE_ONLY_ARB: i32;
@foreign public const GL_READ_WRITE_ARB: i32;
@foreign public const GL_BUFFER_ACCESS_ARB: i32;
@foreign public const GL_BUFFER_MAPPED_ARB: i32;
@foreign public const GL_BUFFER_MAP_POINTER_ARB: i32;
@foreign public const GL_STREAM_DRAW_ARB: i32;
@foreign public const GL_STREAM_READ_ARB: i32;
@foreign public const GL_STREAM_COPY_ARB: i32;
@foreign public const GL_STATIC_DRAW_ARB: i32;
@foreign public const GL_STATIC_READ_ARB: i32;
@foreign public const GL_STATIC_COPY_ARB: i32;
@foreign public const GL_DYNAMIC_DRAW_ARB: i32;
@foreign public const GL_DYNAMIC_READ_ARB: i32;
@foreign public const GL_DYNAMIC_COPY_ARB: i32;
@foreign public const GL_COLOR_SUM_ARB: i32;
@foreign public const GL_VERTEX_PROGRAM_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB: i32;
@foreign public const GL_CURRENT_VERTEX_ATTRIB_ARB: i32;
@foreign public const GL_VERTEX_PROGRAM_POINT_SIZE_ARB: i32;
@foreign public const GL_VERTEX_PROGRAM_TWO_SIDE_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB: i32;
@foreign public const GL_MAX_VERTEX_ATTRIBS_ARB: i32;
@foreign public const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB: i32;
@foreign public const GL_PROGRAM_ADDRESS_REGISTERS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB: i32;
@foreign public const GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: i32;
@foreign public const GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: i32;
@foreign public const GL_VERTEX_SHADER_ARB: i32;
@foreign public const GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB: i32;
@foreign public const GL_MAX_VARYING_FLOATS_ARB: i32;
@foreign public const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB: i32;
@foreign public const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB: i32;
@foreign public const GL_OBJECT_ACTIVE_ATTRIBUTES_ARB: i32;
@foreign public const GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB: i32;
@foreign public const GL_FLOAT_VEC2_ARB: i32;
@foreign public const GL_FLOAT_VEC3_ARB: i32;
@foreign public const GL_FLOAT_VEC4_ARB: i32;
@foreign public const GL_FLOAT_MAT2_ARB: i32;
@foreign public const GL_FLOAT_MAT3_ARB: i32;
@foreign public const GL_FLOAT_MAT4_ARB: i32;
@foreign public const GL_ELEMENT_ARRAY_ATI: i32;
@foreign public const GL_ELEMENT_ARRAY_TYPE_ATI: i32;
@foreign public const GL_ELEMENT_ARRAY_POINTER_ATI: i32;
@foreign public const GL_FRAGMENT_SHADER_ATI: i32;
@foreign public const GL_REG_0_ATI: i32;
@foreign public const GL_REG_1_ATI: i32;
@foreign public const GL_REG_2_ATI: i32;
@foreign public const GL_REG_3_ATI: i32;
@foreign public const GL_REG_4_ATI: i32;
@foreign public const GL_REG_5_ATI: i32;
@foreign public const GL_REG_6_ATI: i32;
@foreign public const GL_REG_7_ATI: i32;
@foreign public const GL_REG_8_ATI: i32;
@foreign public const GL_REG_9_ATI: i32;
@foreign public const GL_REG_10_ATI: i32;
@foreign public const GL_REG_11_ATI: i32;
@foreign public const GL_REG_12_ATI: i32;
@foreign public const GL_REG_13_ATI: i32;
@foreign public const GL_REG_14_ATI: i32;
@foreign public const GL_REG_15_ATI: i32;
@foreign public const GL_REG_16_ATI: i32;
@foreign public const GL_REG_17_ATI: i32;
@foreign public const GL_REG_18_ATI: i32;
@foreign public const GL_REG_19_ATI: i32;
@foreign public const GL_REG_20_ATI: i32;
@foreign public const GL_REG_21_ATI: i32;
@foreign public const GL_REG_22_ATI: i32;
@foreign public const GL_REG_23_ATI: i32;
@foreign public const GL_REG_24_ATI: i32;
@foreign public const GL_REG_25_ATI: i32;
@foreign public const GL_REG_26_ATI: i32;
@foreign public const GL_REG_27_ATI: i32;
@foreign public const GL_REG_28_ATI: i32;
@foreign public const GL_REG_29_ATI: i32;
@foreign public const GL_REG_30_ATI: i32;
@foreign public const GL_REG_31_ATI: i32;
@foreign public const GL_CON_0_ATI: i32;
@foreign public const GL_CON_1_ATI: i32;
@foreign public const GL_CON_2_ATI: i32;
@foreign public const GL_CON_3_ATI: i32;
@foreign public const GL_CON_4_ATI: i32;
@foreign public const GL_CON_5_ATI: i32;
@foreign public const GL_CON_6_ATI: i32;
@foreign public const GL_CON_7_ATI: i32;
@foreign public const GL_CON_8_ATI: i32;
@foreign public const GL_CON_9_ATI: i32;
@foreign public const GL_CON_10_ATI: i32;
@foreign public const GL_CON_11_ATI: i32;
@foreign public const GL_CON_12_ATI: i32;
@foreign public const GL_CON_13_ATI: i32;
@foreign public const GL_CON_14_ATI: i32;
@foreign public const GL_CON_15_ATI: i32;
@foreign public const GL_CON_16_ATI: i32;
@foreign public const GL_CON_17_ATI: i32;
@foreign public const GL_CON_18_ATI: i32;
@foreign public const GL_CON_19_ATI: i32;
@foreign public const GL_CON_20_ATI: i32;
@foreign public const GL_CON_21_ATI: i32;
@foreign public const GL_CON_22_ATI: i32;
@foreign public const GL_CON_23_ATI: i32;
@foreign public const GL_CON_24_ATI: i32;
@foreign public const GL_CON_25_ATI: i32;
@foreign public const GL_CON_26_ATI: i32;
@foreign public const GL_CON_27_ATI: i32;
@foreign public const GL_CON_28_ATI: i32;
@foreign public const GL_CON_29_ATI: i32;
@foreign public const GL_CON_30_ATI: i32;
@foreign public const GL_CON_31_ATI: i32;
@foreign public const GL_MOV_ATI: i32;
@foreign public const GL_ADD_ATI: i32;
@foreign public const GL_MUL_ATI: i32;
@foreign public const GL_SUB_ATI: i32;
@foreign public const GL_DOT3_ATI: i32;
@foreign public const GL_DOT4_ATI: i32;
@foreign public const GL_MAD_ATI: i32;
@foreign public const GL_LERP_ATI: i32;
@foreign public const GL_CND_ATI: i32;
@foreign public const GL_CND0_ATI: i32;
@foreign public const GL_DOT2_ADD_ATI: i32;
@foreign public const GL_SECONDARY_INTERPOLATOR_ATI: i32;
@foreign public const GL_NUM_FRAGMENT_REGISTERS_ATI: i32;
@foreign public const GL_NUM_FRAGMENT_CONSTANTS_ATI: i32;
@foreign public const GL_NUM_PASSES_ATI: i32;
@foreign public const GL_NUM_INSTRUCTIONS_PER_PASS_ATI: i32;
@foreign public const GL_NUM_INSTRUCTIONS_TOTAL_ATI: i32;
@foreign public const GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI: i32;
@foreign public const GL_NUM_LOOPBACK_COMPONENTS_ATI: i32;
@foreign public const GL_COLOR_ALPHA_PAIRING_ATI: i32;
@foreign public const GL_SWIZZLE_STR_ATI: i32;
@foreign public const GL_SWIZZLE_STQ_ATI: i32;
@foreign public const GL_SWIZZLE_STR_DR_ATI: i32;
@foreign public const GL_SWIZZLE_STQ_DQ_ATI: i32;
@foreign public const GL_SWIZZLE_STRQ_ATI: i32;
@foreign public const GL_SWIZZLE_STRQ_DQ_ATI: i32;
@foreign public const GL_RED_BIT_ATI: i32;
@foreign public const GL_GREEN_BIT_ATI: i32;
@foreign public const GL_BLUE_BIT_ATI: i32;
@foreign public const GL_2X_BIT_ATI: i32;
@foreign public const GL_4X_BIT_ATI: i32;
@foreign public const GL_8X_BIT_ATI: i32;
@foreign public const GL_HALF_BIT_ATI: i32;
@foreign public const GL_QUARTER_BIT_ATI: i32;
@foreign public const GL_EIGHTH_BIT_ATI: i32;
@foreign public const GL_SATURATE_BIT_ATI: i32;
@foreign public const GL_COMP_BIT_ATI: i32;
@foreign public const GL_NEGATE_BIT_ATI: i32;
@foreign public const GL_BIAS_BIT_ATI: i32;
@foreign public const GL_STATIC_ATI: i32;
@foreign public const GL_DYNAMIC_ATI: i32;
@foreign public const GL_PRESERVE_ATI: i32;
@foreign public const GL_DISCARD_ATI: i32;
@foreign public const GL_OBJECT_BUFFER_SIZE_ATI: i32;
@foreign public const GL_OBJECT_BUFFER_USAGE_ATI: i32;
@foreign public const GL_ARRAY_OBJECT_BUFFER_ATI: i32;
@foreign public const GL_ARRAY_OBJECT_OFFSET_ATI: i32;
@foreign public const GL_CONSTANT_COLOR_EXT: i32;
@foreign public const GL_ONE_MINUS_CONSTANT_COLOR_EXT: i32;
@foreign public const GL_CONSTANT_ALPHA_EXT: i32;
@foreign public const GL_ONE_MINUS_CONSTANT_ALPHA_EXT: i32;
@foreign public const GL_BLEND_COLOR_EXT: i32;
@foreign public const GL_BLEND_EQUATION_RGB_EXT: i32;
@foreign public const GL_BLEND_EQUATION_ALPHA_EXT: i32;
@foreign public const GL_BLEND_DST_RGB_EXT: i32;
@foreign public const GL_BLEND_SRC_RGB_EXT: i32;
@foreign public const GL_BLEND_DST_ALPHA_EXT: i32;
@foreign public const GL_BLEND_SRC_ALPHA_EXT: i32;
@foreign public const GL_READ_FRAMEBUFFER_EXT: i32;
@foreign public const GL_DRAW_FRAMEBUFFER_EXT: i32;
@foreign public const GL_DRAW_FRAMEBUFFER_BINDING_EXT: i32;
@foreign public const GL_READ_FRAMEBUFFER_BINDING_EXT: i32;
@foreign public const GL_RENDERBUFFER_SAMPLES_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT: i32;
@foreign public const GL_MAX_SAMPLES_EXT: i32;
@foreign public const GL_SCALED_RESOLVE_FASTEST_EXT: i32;
@foreign public const GL_SCALED_RESOLVE_NICEST_EXT: i32;
@foreign public const GL_INVALID_FRAMEBUFFER_OPERATION_EXT: i32;
@foreign public const GL_MAX_RENDERBUFFER_SIZE_EXT: i32;
@foreign public const GL_FRAMEBUFFER_BINDING_EXT: i32;
@foreign public const GL_RENDERBUFFER_BINDING_EXT: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT: i32;
@foreign public const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT: i32;
@foreign public const GL_FRAMEBUFFER_COMPLETE_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT: i32;
@foreign public const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT: i32;
@foreign public const GL_FRAMEBUFFER_UNSUPPORTED_EXT: i32;
@foreign public const GL_MAX_COLOR_ATTACHMENTS_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT0_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT1_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT2_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT3_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT4_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT5_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT6_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT7_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT8_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT9_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT10_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT11_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT12_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT13_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT14_EXT: i32;
@foreign public const GL_COLOR_ATTACHMENT15_EXT: i32;
@foreign public const GL_DEPTH_ATTACHMENT_EXT: i32;
@foreign public const GL_STENCIL_ATTACHMENT_EXT: i32;
@foreign public const GL_FRAMEBUFFER_EXT: i32;
@foreign public const GL_RENDERBUFFER_EXT: i32;
@foreign public const GL_RENDERBUFFER_WIDTH_EXT: i32;
@foreign public const GL_RENDERBUFFER_HEIGHT_EXT: i32;
@foreign public const GL_RENDERBUFFER_INTERNAL_FORMAT_EXT: i32;
@foreign public const GL_STENCIL_INDEX1_EXT: i32;
@foreign public const GL_STENCIL_INDEX4_EXT: i32;
@foreign public const GL_STENCIL_INDEX8_EXT: i32;
@foreign public const GL_STENCIL_INDEX16_EXT: i32;
@foreign public const GL_RENDERBUFFER_RED_SIZE_EXT: i32;
@foreign public const GL_RENDERBUFFER_GREEN_SIZE_EXT: i32;
@foreign public const GL_RENDERBUFFER_BLUE_SIZE_EXT: i32;
@foreign public const GL_RENDERBUFFER_ALPHA_SIZE_EXT: i32;
@foreign public const GL_RENDERBUFFER_DEPTH_SIZE_EXT: i32;
@foreign public const GL_RENDERBUFFER_STENCIL_SIZE_EXT: i32;
@foreign public const GL_FRAMEBUFFER_SRGB_EXT: i32;
@foreign public const GL_FRAMEBUFFER_SRGB_CAPABLE_EXT: i32;
@foreign public const GL_IUI_V2F_EXT: i32;
@foreign public const GL_IUI_V3F_EXT: i32;
@foreign public const GL_IUI_N3F_V2F_EXT: i32;
@foreign public const GL_IUI_N3F_V3F_EXT: i32;
@foreign public const GL_T2F_IUI_V2F_EXT: i32;
@foreign public const GL_T2F_IUI_V3F_EXT: i32;
@foreign public const GL_T2F_IUI_N3F_V2F_EXT: i32;
@foreign public const GL_T2F_IUI_N3F_V3F_EXT: i32;
@foreign public const GL_ALPHA4_EXT: i32;
@foreign public const GL_ALPHA8_EXT: i32;
@foreign public const GL_ALPHA12_EXT: i32;
@foreign public const GL_ALPHA16_EXT: i32;
@foreign public const GL_LUMINANCE4_EXT: i32;
@foreign public const GL_LUMINANCE8_EXT: i32;
@foreign public const GL_LUMINANCE12_EXT: i32;
@foreign public const GL_LUMINANCE16_EXT: i32;
@foreign public const GL_LUMINANCE4_ALPHA4_EXT: i32;
@foreign public const GL_LUMINANCE6_ALPHA2_EXT: i32;
@foreign public const GL_LUMINANCE8_ALPHA8_EXT: i32;
@foreign public const GL_LUMINANCE12_ALPHA4_EXT: i32;
@foreign public const GL_LUMINANCE12_ALPHA12_EXT: i32;
@foreign public const GL_LUMINANCE16_ALPHA16_EXT: i32;
@foreign public const GL_INTENSITY_EXT: i32;
@foreign public const GL_INTENSITY4_EXT: i32;
@foreign public const GL_INTENSITY8_EXT: i32;
@foreign public const GL_INTENSITY12_EXT: i32;
@foreign public const GL_INTENSITY16_EXT: i32;
@foreign public const GL_RGB2_EXT: i32;
@foreign public const GL_RGB4_EXT: i32;
@foreign public const GL_RGB5_EXT: i32;
@foreign public const GL_RGB8_EXT: i32;
@foreign public const GL_RGB10_EXT: i32;
@foreign public const GL_RGB12_EXT: i32;
@foreign public const GL_RGB16_EXT: i32;
@foreign public const GL_RGBA2_EXT: i32;
@foreign public const GL_RGBA4_EXT: i32;
@foreign public const GL_RGB5_A1_EXT: i32;
@foreign public const GL_RGBA8_EXT: i32;
@foreign public const GL_RGB10_A2_EXT: i32;
@foreign public const GL_RGBA12_EXT: i32;
@foreign public const GL_RGBA16_EXT: i32;
@foreign public const GL_TEXTURE_RED_SIZE_EXT: i32;
@foreign public const GL_TEXTURE_GREEN_SIZE_EXT: i32;
@foreign public const GL_TEXTURE_BLUE_SIZE_EXT: i32;
@foreign public const GL_TEXTURE_ALPHA_SIZE_EXT: i32;
@foreign public const GL_TEXTURE_LUMINANCE_SIZE_EXT: i32;
@foreign public const GL_TEXTURE_INTENSITY_SIZE_EXT: i32;
@foreign public const GL_REPLACE_EXT: i32;
@foreign public const GL_PROXY_TEXTURE_1D_EXT: i32;
@foreign public const GL_PROXY_TEXTURE_2D_EXT: i32;
@foreign public const GL_TEXTURE_TOO_LARGE_EXT: i32;
@foreign public const GL_COMPRESSED_RGB_S3TC_DXT1_EXT: i32;
@foreign public const GL_COMPRESSED_RGBA_S3TC_DXT1_EXT: i32;
@foreign public const GL_COMPRESSED_RGBA_S3TC_DXT3_EXT: i32;
@foreign public const GL_COMPRESSED_RGBA_S3TC_DXT5_EXT: i32;
@foreign public const GL_SRGB_EXT: i32;
@foreign public const GL_SRGB8_EXT: i32;
@foreign public const GL_SRGB_ALPHA_EXT: i32;
@foreign public const GL_SRGB8_ALPHA8_EXT: i32;
@foreign public const GL_SLUMINANCE_ALPHA_EXT: i32;
@foreign public const GL_SLUMINANCE8_ALPHA8_EXT: i32;
@foreign public const GL_SLUMINANCE_EXT: i32;
@foreign public const GL_SLUMINANCE8_EXT: i32;
@foreign public const GL_COMPRESSED_SRGB_EXT: i32;
@foreign public const GL_COMPRESSED_SRGB_ALPHA_EXT: i32;
@foreign public const GL_COMPRESSED_SLUMINANCE_EXT: i32;
@foreign public const GL_COMPRESSED_SLUMINANCE_ALPHA_EXT: i32;
@foreign public const GL_COMPRESSED_SRGB_S3TC_DXT1_EXT: i32;
@foreign public const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: i32;
@foreign public const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: i32;
@foreign public const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: i32;
@foreign public const GL_TEXTURE_SWIZZLE_R_EXT: i32;
@foreign public const GL_TEXTURE_SWIZZLE_G_EXT: i32;
@foreign public const GL_TEXTURE_SWIZZLE_B_EXT: i32;
@foreign public const GL_TEXTURE_SWIZZLE_A_EXT: i32;
@foreign public const GL_TEXTURE_SWIZZLE_RGBA_EXT: i32;
@foreign public const GL_VERTEX_ARRAY_EXT: i32;
@foreign public const GL_NORMAL_ARRAY_EXT: i32;
@foreign public const GL_COLOR_ARRAY_EXT: i32;
@foreign public const GL_INDEX_ARRAY_EXT: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_EXT: i32;
@foreign public const GL_EDGE_FLAG_ARRAY_EXT: i32;
@foreign public const GL_VERTEX_ARRAY_SIZE_EXT: i32;
@foreign public const GL_VERTEX_ARRAY_TYPE_EXT: i32;
@foreign public const GL_VERTEX_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_VERTEX_ARRAY_COUNT_EXT: i32;
@foreign public const GL_NORMAL_ARRAY_TYPE_EXT: i32;
@foreign public const GL_NORMAL_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_NORMAL_ARRAY_COUNT_EXT: i32;
@foreign public const GL_COLOR_ARRAY_SIZE_EXT: i32;
@foreign public const GL_COLOR_ARRAY_TYPE_EXT: i32;
@foreign public const GL_COLOR_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_COLOR_ARRAY_COUNT_EXT: i32;
@foreign public const GL_INDEX_ARRAY_TYPE_EXT: i32;
@foreign public const GL_INDEX_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_INDEX_ARRAY_COUNT_EXT: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_SIZE_EXT: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_TYPE_EXT: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_COUNT_EXT: i32;
@foreign public const GL_EDGE_FLAG_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_EDGE_FLAG_ARRAY_COUNT_EXT: i32;
@foreign public const GL_VERTEX_ARRAY_POINTER_EXT: i32;
@foreign public const GL_NORMAL_ARRAY_POINTER_EXT: i32;
@foreign public const GL_COLOR_ARRAY_POINTER_EXT: i32;
@foreign public const GL_INDEX_ARRAY_POINTER_EXT: i32;
@foreign public const GL_TEXTURE_COORD_ARRAY_POINTER_EXT: i32;
@foreign public const GL_EDGE_FLAG_ARRAY_POINTER_EXT: i32;
@foreign public const GL_VERTEX_SHADER_EXT: i32;
@foreign public const GL_VERTEX_SHADER_BINDING_EXT: i32;
@foreign public const GL_OP_INDEX_EXT: i32;
@foreign public const GL_OP_NEGATE_EXT: i32;
@foreign public const GL_OP_DOT3_EXT: i32;
@foreign public const GL_OP_DOT4_EXT: i32;
@foreign public const GL_OP_MUL_EXT: i32;
@foreign public const GL_OP_ADD_EXT: i32;
@foreign public const GL_OP_MADD_EXT: i32;
@foreign public const GL_OP_FRAC_EXT: i32;
@foreign public const GL_OP_MAX_EXT: i32;
@foreign public const GL_OP_MIN_EXT: i32;
@foreign public const GL_OP_SET_GE_EXT: i32;
@foreign public const GL_OP_SET_LT_EXT: i32;
@foreign public const GL_OP_CLAMP_EXT: i32;
@foreign public const GL_OP_FLOOR_EXT: i32;
@foreign public const GL_OP_ROUND_EXT: i32;
@foreign public const GL_OP_EXP_BASE_2_EXT: i32;
@foreign public const GL_OP_LOG_BASE_2_EXT: i32;
@foreign public const GL_OP_POWER_EXT: i32;
@foreign public const GL_OP_RECIP_EXT: i32;
@foreign public const GL_OP_RECIP_SQRT_EXT: i32;
@foreign public const GL_OP_SUB_EXT: i32;
@foreign public const GL_OP_CROSS_PRODUCT_EXT: i32;
@foreign public const GL_OP_MULTIPLY_MATRIX_EXT: i32;
@foreign public const GL_OP_MOV_EXT: i32;
@foreign public const GL_OUTPUT_VERTEX_EXT: i32;
@foreign public const GL_OUTPUT_COLOR0_EXT: i32;
@foreign public const GL_OUTPUT_COLOR1_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD0_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD1_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD2_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD3_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD4_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD5_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD6_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD7_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD8_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD9_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD10_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD11_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD12_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD13_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD14_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD15_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD16_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD17_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD18_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD19_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD20_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD21_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD22_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD23_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD24_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD25_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD26_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD27_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD28_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD29_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD30_EXT: i32;
@foreign public const GL_OUTPUT_TEXTURE_COORD31_EXT: i32;
@foreign public const GL_OUTPUT_FOG_EXT: i32;
@foreign public const GL_SCALAR_EXT: i32;
@foreign public const GL_VECTOR_EXT: i32;
@foreign public const GL_MATRIX_EXT: i32;
@foreign public const GL_VARIANT_EXT: i32;
@foreign public const GL_INVARIANT_EXT: i32;
@foreign public const GL_LOCAL_CONSTANT_EXT: i32;
@foreign public const GL_LOCAL_EXT: i32;
@foreign public const GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT: i32;
@foreign public const GL_MAX_VERTEX_SHADER_VARIANTS_EXT: i32;
@foreign public const GL_MAX_VERTEX_SHADER_INVARIANTS_EXT: i32;
@foreign public const GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: i32;
@foreign public const GL_MAX_VERTEX_SHADER_LOCALS_EXT: i32;
@foreign public const GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT: i32;
@foreign public const GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT: i32;
@foreign public const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: i32;
@foreign public const GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT: i32;
@foreign public const GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT: i32;
@foreign public const GL_VERTEX_SHADER_INSTRUCTIONS_EXT: i32;
@foreign public const GL_VERTEX_SHADER_VARIANTS_EXT: i32;
@foreign public const GL_VERTEX_SHADER_INVARIANTS_EXT: i32;
@foreign public const GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT: i32;
@foreign public const GL_VERTEX_SHADER_LOCALS_EXT: i32;
@foreign public const GL_VERTEX_SHADER_OPTIMIZED_EXT: i32;
@foreign public const GL_X_EXT: i32;
@foreign public const GL_Y_EXT: i32;
@foreign public const GL_Z_EXT: i32;
@foreign public const GL_W_EXT: i32;
@foreign public const GL_NEGATIVE_X_EXT: i32;
@foreign public const GL_NEGATIVE_Y_EXT: i32;
@foreign public const GL_NEGATIVE_Z_EXT: i32;
@foreign public const GL_NEGATIVE_W_EXT: i32;
@foreign public const GL_ZERO_EXT: i32;
@foreign public const GL_ONE_EXT: i32;
@foreign public const GL_NEGATIVE_ONE_EXT: i32;
@foreign public const GL_NORMALIZED_RANGE_EXT: i32;
@foreign public const GL_FULL_RANGE_EXT: i32;
@foreign public const GL_CURRENT_VERTEX_EXT: i32;
@foreign public const GL_MVP_MATRIX_EXT: i32;
@foreign public const GL_VARIANT_VALUE_EXT: i32;
@foreign public const GL_VARIANT_DATATYPE_EXT: i32;
@foreign public const GL_VARIANT_ARRAY_STRIDE_EXT: i32;
@foreign public const GL_VARIANT_ARRAY_TYPE_EXT: i32;
@foreign public const GL_VARIANT_ARRAY_EXT: i32;
@foreign public const GL_VARIANT_ARRAY_POINTER_EXT: i32;
@foreign public const GL_INVARIANT_VALUE_EXT: i32;
@foreign public const GL_INVARIANT_DATATYPE_EXT: i32;
@foreign public const GL_LOCAL_CONSTANT_VALUE_EXT: i32;
@foreign public const GL_LOCAL_CONSTANT_DATATYPE_EXT: i32;
@foreign public const GL_AMD_debug_output: i32;
@foreign public const glDebugMessageEnableAMD: PFNGLDEBUGMESSAGEENABLEAMDPROC;
@foreign public const glDebugMessageInsertAMD: PFNGLDEBUGMESSAGEINSERTAMDPROC;
@foreign public const glDebugMessageCallbackAMD: PFNGLDEBUGMESSAGECALLBACKAMDPROC;
@foreign public const glGetDebugMessageLogAMD: PFNGLGETDEBUGMESSAGELOGAMDPROC;
@foreign public const GL_AMD_query_buffer_object: i32;
@foreign public const GL_ARB_ES2_compatibility: i32;
@foreign public const glReleaseShaderCompiler: PFNGLRELEASESHADERCOMPILERPROC;
@foreign public const glShaderBinary: PFNGLSHADERBINARYPROC;
@foreign public const glGetShaderPrecisionFormat: PFNGLGETSHADERPRECISIONFORMATPROC;
@foreign public const glDepthRangef: PFNGLDEPTHRANGEFPROC;
@foreign public const glClearDepthf: PFNGLCLEARDEPTHFPROC;
@foreign public const GL_ARB_ES3_compatibility: i32;
@foreign public const GL_ARB_buffer_storage: i32;
@foreign public const glBufferStorage: PFNGLBUFFERSTORAGEPROC;
@foreign public const GL_ARB_compatibility: i32;
@foreign public const GL_ARB_compressed_texture_pixel_storage: i32;
@foreign public const GL_ARB_debug_output: i32;
@foreign public const glDebugMessageControlARB: PFNGLDEBUGMESSAGECONTROLARBPROC;
@foreign public const glDebugMessageInsertARB: PFNGLDEBUGMESSAGEINSERTARBPROC;
@foreign public const glDebugMessageCallbackARB: PFNGLDEBUGMESSAGECALLBACKARBPROC;
@foreign public const glGetDebugMessageLogARB: PFNGLGETDEBUGMESSAGELOGARBPROC;
@foreign public const GL_ARB_depth_buffer_float: i32;
@foreign public const GL_ARB_depth_clamp: i32;
@foreign public const GL_ARB_depth_texture: i32;
@foreign public const GL_ARB_draw_buffers: i32;
@foreign public const glDrawBuffersARB: PFNGLDRAWBUFFERSARBPROC;
@foreign public const GL_ARB_draw_buffers_blend: i32;
@foreign public const glBlendEquationiARB: PFNGLBLENDEQUATIONIARBPROC;
@foreign public const glBlendEquationSeparateiARB: PFNGLBLENDEQUATIONSEPARATEIARBPROC;
@foreign public const glBlendFunciARB: PFNGLBLENDFUNCIARBPROC;
@foreign public const glBlendFuncSeparateiARB: PFNGLBLENDFUNCSEPARATEIARBPROC;
@foreign public const GL_ARB_explicit_attrib_location: i32;
@foreign public const GL_ARB_explicit_uniform_location: i32;
@foreign public const GL_ARB_fragment_program: i32;
@foreign public const glProgramStringARB: PFNGLPROGRAMSTRINGARBPROC;
@foreign public const glBindProgramARB: PFNGLBINDPROGRAMARBPROC;
@foreign public const glDeleteProgramsARB: PFNGLDELETEPROGRAMSARBPROC;
@foreign public const glGenProgramsARB: PFNGLGENPROGRAMSARBPROC;
@foreign public const glProgramEnvParameter4dARB: PFNGLPROGRAMENVPARAMETER4DARBPROC;
@foreign public const glProgramEnvParameter4dvARB: PFNGLPROGRAMENVPARAMETER4DVARBPROC;
@foreign public const glProgramEnvParameter4fARB: PFNGLPROGRAMENVPARAMETER4FARBPROC;
@foreign public const glProgramEnvParameter4fvARB: PFNGLPROGRAMENVPARAMETER4FVARBPROC;
@foreign public const glProgramLocalParameter4dARB: PFNGLPROGRAMLOCALPARAMETER4DARBPROC;
@foreign public const glProgramLocalParameter4dvARB: PFNGLPROGRAMLOCALPARAMETER4DVARBPROC;
@foreign public const glProgramLocalParameter4fARB: PFNGLPROGRAMLOCALPARAMETER4FARBPROC;
@foreign public const glProgramLocalParameter4fvARB: PFNGLPROGRAMLOCALPARAMETER4FVARBPROC;
@foreign public const glGetProgramEnvParameterdvARB: PFNGLGETPROGRAMENVPARAMETERDVARBPROC;
@foreign public const glGetProgramEnvParameterfvARB: PFNGLGETPROGRAMENVPARAMETERFVARBPROC;
@foreign public const glGetProgramLocalParameterdvARB: PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC;
@foreign public const glGetProgramLocalParameterfvARB: PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC;
@foreign public const glGetProgramivARB: PFNGLGETPROGRAMIVARBPROC;
@foreign public const glGetProgramStringARB: PFNGLGETPROGRAMSTRINGARBPROC;
@foreign public const glIsProgramARB: PFNGLISPROGRAMARBPROC;
@foreign public const GL_ARB_fragment_shader: i32;
@foreign public const GL_ARB_framebuffer_object: i32;
@foreign public const GL_ARB_framebuffer_sRGB: i32;
@foreign public const GL_ARB_multisample: i32;
@foreign public const glSampleCoverageARB: PFNGLSAMPLECOVERAGEARBPROC;
@foreign public const GL_ARB_sample_locations: i32;
@foreign public const glFramebufferSampleLocationsfvARB: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
@foreign public const glNamedFramebufferSampleLocationsfvARB: PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
@foreign public const glEvaluateDepthValuesARB: PFNGLEVALUATEDEPTHVALUESARBPROC;
@foreign public const GL_ARB_texture_compression: i32;
@foreign public const glCompressedTexImage3DARB: PFNGLCOMPRESSEDTEXIMAGE3DARBPROC;
@foreign public const glCompressedTexImage2DARB: PFNGLCOMPRESSEDTEXIMAGE2DARBPROC;
@foreign public const glCompressedTexImage1DARB: PFNGLCOMPRESSEDTEXIMAGE1DARBPROC;
@foreign public const glCompressedTexSubImage3DARB: PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC;
@foreign public const glCompressedTexSubImage2DARB: PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC;
@foreign public const glCompressedTexSubImage1DARB: PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC;
@foreign public const glGetCompressedTexImageARB: PFNGLGETCOMPRESSEDTEXIMAGEARBPROC;
@foreign public const GL_ARB_texture_float: i32;
@foreign public const GL_ARB_texture_multisample: i32;
@foreign public const GL_ARB_texture_non_power_of_two: i32;
@foreign public const GL_ARB_texture_rg: i32;
@foreign public const GL_ARB_texture_swizzle: i32;
@foreign public const GL_ARB_uniform_buffer_object: i32;
@foreign public const GL_ARB_vertex_array_object: i32;
@foreign public const GL_ARB_vertex_attrib_binding: i32;
@foreign public const glBindVertexBuffer: PFNGLBINDVERTEXBUFFERPROC;
@foreign public const glVertexAttribFormat: PFNGLVERTEXATTRIBFORMATPROC;
@foreign public const glVertexAttribIFormat: PFNGLVERTEXATTRIBIFORMATPROC;
@foreign public const glVertexAttribLFormat: PFNGLVERTEXATTRIBLFORMATPROC;
@foreign public const glVertexAttribBinding: PFNGLVERTEXATTRIBBINDINGPROC;
@foreign public const glVertexBindingDivisor: PFNGLVERTEXBINDINGDIVISORPROC;
@foreign public const GL_ARB_vertex_buffer_object: i32;
@foreign public const glBindBufferARB: PFNGLBINDBUFFERARBPROC;
@foreign public const glDeleteBuffersARB: PFNGLDELETEBUFFERSARBPROC;
@foreign public const glGenBuffersARB: PFNGLGENBUFFERSARBPROC;
@foreign public const glIsBufferARB: PFNGLISBUFFERARBPROC;
@foreign public const glBufferDataARB: PFNGLBUFFERDATAARBPROC;
@foreign public const glBufferSubDataARB: PFNGLBUFFERSUBDATAARBPROC;
@foreign public const glGetBufferSubDataARB: PFNGLGETBUFFERSUBDATAARBPROC;
@foreign public const glMapBufferARB: PFNGLMAPBUFFERARBPROC;
@foreign public const glUnmapBufferARB: PFNGLUNMAPBUFFERARBPROC;
@foreign public const glGetBufferParameterivARB: PFNGLGETBUFFERPARAMETERIVARBPROC;
@foreign public const glGetBufferPointervARB: PFNGLGETBUFFERPOINTERVARBPROC;
@foreign public const GL_ARB_vertex_program: i32;
@foreign public const glVertexAttrib1dARB: PFNGLVERTEXATTRIB1DARBPROC;
@foreign public const glVertexAttrib1dvARB: PFNGLVERTEXATTRIB1DVARBPROC;
@foreign public const glVertexAttrib1fARB: PFNGLVERTEXATTRIB1FARBPROC;
@foreign public const glVertexAttrib1fvARB: PFNGLVERTEXATTRIB1FVARBPROC;
@foreign public const glVertexAttrib1sARB: PFNGLVERTEXATTRIB1SARBPROC;
@foreign public const glVertexAttrib1svARB: PFNGLVERTEXATTRIB1SVARBPROC;
@foreign public const glVertexAttrib2dARB: PFNGLVERTEXATTRIB2DARBPROC;
@foreign public const glVertexAttrib2dvARB: PFNGLVERTEXATTRIB2DVARBPROC;
@foreign public const glVertexAttrib2fARB: PFNGLVERTEXATTRIB2FARBPROC;
@foreign public const glVertexAttrib2fvARB: PFNGLVERTEXATTRIB2FVARBPROC;
@foreign public const glVertexAttrib2sARB: PFNGLVERTEXATTRIB2SARBPROC;
@foreign public const glVertexAttrib2svARB: PFNGLVERTEXATTRIB2SVARBPROC;
@foreign public const glVertexAttrib3dARB: PFNGLVERTEXATTRIB3DARBPROC;
@foreign public const glVertexAttrib3dvARB: PFNGLVERTEXATTRIB3DVARBPROC;
@foreign public const glVertexAttrib3fARB: PFNGLVERTEXATTRIB3FARBPROC;
@foreign public const glVertexAttrib3fvARB: PFNGLVERTEXATTRIB3FVARBPROC;
@foreign public const glVertexAttrib3sARB: PFNGLVERTEXATTRIB3SARBPROC;
@foreign public const glVertexAttrib3svARB: PFNGLVERTEXATTRIB3SVARBPROC;
@foreign public const glVertexAttrib4NbvARB: PFNGLVERTEXATTRIB4NBVARBPROC;
@foreign public const glVertexAttrib4NivARB: PFNGLVERTEXATTRIB4NIVARBPROC;
@foreign public const glVertexAttrib4NsvARB: PFNGLVERTEXATTRIB4NSVARBPROC;
@foreign public const glVertexAttrib4NubARB: PFNGLVERTEXATTRIB4NUBARBPROC;
@foreign public const glVertexAttrib4NubvARB: PFNGLVERTEXATTRIB4NUBVARBPROC;
@foreign public const glVertexAttrib4NuivARB: PFNGLVERTEXATTRIB4NUIVARBPROC;
@foreign public const glVertexAttrib4NusvARB: PFNGLVERTEXATTRIB4NUSVARBPROC;
@foreign public const glVertexAttrib4bvARB: PFNGLVERTEXATTRIB4BVARBPROC;
@foreign public const glVertexAttrib4dARB: PFNGLVERTEXATTRIB4DARBPROC;
@foreign public const glVertexAttrib4dvARB: PFNGLVERTEXATTRIB4DVARBPROC;
@foreign public const glVertexAttrib4fARB: PFNGLVERTEXATTRIB4FARBPROC;
@foreign public const glVertexAttrib4fvARB: PFNGLVERTEXATTRIB4FVARBPROC;
@foreign public const glVertexAttrib4ivARB: PFNGLVERTEXATTRIB4IVARBPROC;
@foreign public const glVertexAttrib4sARB: PFNGLVERTEXATTRIB4SARBPROC;
@foreign public const glVertexAttrib4svARB: PFNGLVERTEXATTRIB4SVARBPROC;
@foreign public const glVertexAttrib4ubvARB: PFNGLVERTEXATTRIB4UBVARBPROC;
@foreign public const glVertexAttrib4uivARB: PFNGLVERTEXATTRIB4UIVARBPROC;
@foreign public const glVertexAttrib4usvARB: PFNGLVERTEXATTRIB4USVARBPROC;
@foreign public const glVertexAttribPointerARB: PFNGLVERTEXATTRIBPOINTERARBPROC;
@foreign public const glEnableVertexAttribArrayARB: PFNGLENABLEVERTEXATTRIBARRAYARBPROC;
@foreign public const glDisableVertexAttribArrayARB: PFNGLDISABLEVERTEXATTRIBARRAYARBPROC;
@foreign public const glGetVertexAttribdvARB: PFNGLGETVERTEXATTRIBDVARBPROC;
@foreign public const glGetVertexAttribfvARB: PFNGLGETVERTEXATTRIBFVARBPROC;
@foreign public const glGetVertexAttribivARB: PFNGLGETVERTEXATTRIBIVARBPROC;
@foreign public const glGetVertexAttribPointervARB: PFNGLGETVERTEXATTRIBPOINTERVARBPROC;
@foreign public const GL_ARB_vertex_shader: i32;
@foreign public const glBindAttribLocationARB: PFNGLBINDATTRIBLOCATIONARBPROC;
@foreign public const glGetActiveAttribARB: PFNGLGETACTIVEATTRIBARBPROC;
@foreign public const glGetAttribLocationARB: PFNGLGETATTRIBLOCATIONARBPROC;
@foreign public const GL_ATI_element_array: i32;
@foreign public const glElementPointerATI: PFNGLELEMENTPOINTERATIPROC;
@foreign public const glDrawElementArrayATI: PFNGLDRAWELEMENTARRAYATIPROC;
@foreign public const glDrawRangeElementArrayATI: PFNGLDRAWRANGEELEMENTARRAYATIPROC;
@foreign public const GL_ATI_fragment_shader: i32;
@foreign public const glGenFragmentShadersATI: PFNGLGENFRAGMENTSHADERSATIPROC;
@foreign public const glBindFragmentShaderATI: PFNGLBINDFRAGMENTSHADERATIPROC;
@foreign public const glDeleteFragmentShaderATI: PFNGLDELETEFRAGMENTSHADERATIPROC;
@foreign public const glBeginFragmentShaderATI: PFNGLBEGINFRAGMENTSHADERATIPROC;
@foreign public const glEndFragmentShaderATI: PFNGLENDFRAGMENTSHADERATIPROC;
@foreign public const glPassTexCoordATI: PFNGLPASSTEXCOORDATIPROC;
@foreign public const glSampleMapATI: PFNGLSAMPLEMAPATIPROC;
@foreign public const glColorFragmentOp1ATI: PFNGLCOLORFRAGMENTOP1ATIPROC;
@foreign public const glColorFragmentOp2ATI: PFNGLCOLORFRAGMENTOP2ATIPROC;
@foreign public const glColorFragmentOp3ATI: PFNGLCOLORFRAGMENTOP3ATIPROC;
@foreign public const glAlphaFragmentOp1ATI: PFNGLALPHAFRAGMENTOP1ATIPROC;
@foreign public const glAlphaFragmentOp2ATI: PFNGLALPHAFRAGMENTOP2ATIPROC;
@foreign public const glAlphaFragmentOp3ATI: PFNGLALPHAFRAGMENTOP3ATIPROC;
@foreign public const glSetFragmentShaderConstantATI: PFNGLSETFRAGMENTSHADERCONSTANTATIPROC;
@foreign public const GL_ATI_vertex_array_object: i32;
@foreign public const glNewObjectBufferATI: PFNGLNEWOBJECTBUFFERATIPROC;
@foreign public const glIsObjectBufferATI: PFNGLISOBJECTBUFFERATIPROC;
@foreign public const glUpdateObjectBufferATI: PFNGLUPDATEOBJECTBUFFERATIPROC;
@foreign public const glGetObjectBufferfvATI: PFNGLGETOBJECTBUFFERFVATIPROC;
@foreign public const glGetObjectBufferivATI: PFNGLGETOBJECTBUFFERIVATIPROC;
@foreign public const glFreeObjectBufferATI: PFNGLFREEOBJECTBUFFERATIPROC;
@foreign public const glArrayObjectATI: PFNGLARRAYOBJECTATIPROC;
@foreign public const glGetArrayObjectfvATI: PFNGLGETARRAYOBJECTFVATIPROC;
@foreign public const glGetArrayObjectivATI: PFNGLGETARRAYOBJECTIVATIPROC;
@foreign public const glVariantArrayObjectATI: PFNGLVARIANTARRAYOBJECTATIPROC;
@foreign public const glGetVariantArrayObjectfvATI: PFNGLGETVARIANTARRAYOBJECTFVATIPROC;
@foreign public const glGetVariantArrayObjectivATI: PFNGLGETVARIANTARRAYOBJECTIVATIPROC;
@foreign public const GL_EXT_blend_color: i32;
@foreign public const glBlendColorEXT: PFNGLBLENDCOLOREXTPROC;
@foreign public const GL_EXT_blend_equation_separate: i32;
@foreign public const glBlendEquationSeparateEXT: PFNGLBLENDEQUATIONSEPARATEEXTPROC;
@foreign public const GL_EXT_blend_func_separate: i32;
@foreign public const glBlendFuncSeparateEXT: PFNGLBLENDFUNCSEPARATEEXTPROC;
@foreign public const GL_EXT_debug_marker: i32;
@foreign public const glInsertEventMarkerEXT: PFNGLINSERTEVENTMARKEREXTPROC;
@foreign public const glPushGroupMarkerEXT: PFNGLPUSHGROUPMARKEREXTPROC;
@foreign public const glPopGroupMarkerEXT: PFNGLPOPGROUPMARKEREXTPROC;
@foreign public const GL_EXT_framebuffer_blit: i32;
@foreign public const glBlitFramebufferEXT: PFNGLBLITFRAMEBUFFEREXTPROC;
@foreign public const GL_EXT_framebuffer_multisample: i32;
@foreign public const glRenderbufferStorageMultisampleEXT: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC;
@foreign public const GL_EXT_framebuffer_multisample_blit_scaled: i32;
@foreign public const GL_EXT_framebuffer_object: i32;
@foreign public const glIsRenderbufferEXT: PFNGLISRENDERBUFFEREXTPROC;
@foreign public const glBindRenderbufferEXT: PFNGLBINDRENDERBUFFEREXTPROC;
@foreign public const glDeleteRenderbuffersEXT: PFNGLDELETERENDERBUFFERSEXTPROC;
@foreign public const glGenRenderbuffersEXT: PFNGLGENRENDERBUFFERSEXTPROC;
@foreign public const glRenderbufferStorageEXT: PFNGLRENDERBUFFERSTORAGEEXTPROC;
@foreign public const glGetRenderbufferParameterivEXT: PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC;
@foreign public const glIsFramebufferEXT: PFNGLISFRAMEBUFFEREXTPROC;
@foreign public const glBindFramebufferEXT: PFNGLBINDFRAMEBUFFEREXTPROC;
@foreign public const glDeleteFramebuffersEXT: PFNGLDELETEFRAMEBUFFERSEXTPROC;
@foreign public const glGenFramebuffersEXT: PFNGLGENFRAMEBUFFERSEXTPROC;
@foreign public const glCheckFramebufferStatusEXT: PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC;
@foreign public const glFramebufferTexture1DEXT: PFNGLFRAMEBUFFERTEXTURE1DEXTPROC;
@foreign public const glFramebufferTexture2DEXT: PFNGLFRAMEBUFFERTEXTURE2DEXTPROC;
@foreign public const glFramebufferTexture3DEXT: PFNGLFRAMEBUFFERTEXTURE3DEXTPROC;
@foreign public const glFramebufferRenderbufferEXT: PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC;
@foreign public const glGetFramebufferAttachmentParameterivEXT: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC;
@foreign public const glGenerateMipmapEXT: PFNGLGENERATEMIPMAPEXTPROC;
@foreign public const GL_EXT_framebuffer_sRGB: i32;
@foreign public const GL_EXT_index_array_formats: i32;
@foreign public const GL_EXT_texture: i32;
@foreign public const GL_EXT_texture_compression_s3tc: i32;
@foreign public const GL_EXT_texture_sRGB: i32;
@foreign public const GL_EXT_texture_swizzle: i32;
@foreign public const GL_EXT_vertex_array: i32;
@foreign public const glArrayElementEXT: PFNGLARRAYELEMENTEXTPROC;
@foreign public const glColorPointerEXT: PFNGLCOLORPOINTEREXTPROC;
@foreign public const glDrawArraysEXT: PFNGLDRAWARRAYSEXTPROC;
@foreign public const glEdgeFlagPointerEXT: PFNGLEDGEFLAGPOINTEREXTPROC;
@foreign public const glGetPointervEXT: PFNGLGETPOINTERVEXTPROC;
@foreign public const glIndexPointerEXT: PFNGLINDEXPOINTEREXTPROC;
@foreign public const glNormalPointerEXT: PFNGLNORMALPOINTEREXTPROC;
@foreign public const glTexCoordPointerEXT: PFNGLTEXCOORDPOINTEREXTPROC;
@foreign public const glVertexPointerEXT: PFNGLVERTEXPOINTEREXTPROC;
@foreign public const GL_EXT_vertex_shader: i32;
@foreign public const glBeginVertexShaderEXT: PFNGLBEGINVERTEXSHADEREXTPROC;
@foreign public const glEndVertexShaderEXT: PFNGLENDVERTEXSHADEREXTPROC;
@foreign public const glBindVertexShaderEXT: PFNGLBINDVERTEXSHADEREXTPROC;
@foreign public const glGenVertexShadersEXT: PFNGLGENVERTEXSHADERSEXTPROC;
@foreign public const glDeleteVertexShaderEXT: PFNGLDELETEVERTEXSHADEREXTPROC;
@foreign public const glShaderOp1EXT: PFNGLSHADEROP1EXTPROC;
@foreign public const glShaderOp2EXT: PFNGLSHADEROP2EXTPROC;
@foreign public const glShaderOp3EXT: PFNGLSHADEROP3EXTPROC;
@foreign public const glSwizzleEXT: PFNGLSWIZZLEEXTPROC;
@foreign public const glWriteMaskEXT: PFNGLWRITEMASKEXTPROC;
@foreign public const glInsertComponentEXT: PFNGLINSERTCOMPONENTEXTPROC;
@foreign public const glExtractComponentEXT: PFNGLEXTRACTCOMPONENTEXTPROC;
@foreign public const glGenSymbolsEXT: PFNGLGENSYMBOLSEXTPROC;
@foreign public const glSetInvariantEXT: PFNGLSETINVARIANTEXTPROC;
@foreign public const glSetLocalConstantEXT: PFNGLSETLOCALCONSTANTEXTPROC;
@foreign public const glVariantbvEXT: PFNGLVARIANTBVEXTPROC;
@foreign public const glVariantsvEXT: PFNGLVARIANTSVEXTPROC;
@foreign public const glVariantivEXT: PFNGLVARIANTIVEXTPROC;
@foreign public const glVariantfvEXT: PFNGLVARIANTFVEXTPROC;
@foreign public const glVariantdvEXT: PFNGLVARIANTDVEXTPROC;
@foreign public const glVariantubvEXT: PFNGLVARIANTUBVEXTPROC;
@foreign public const glVariantusvEXT: PFNGLVARIANTUSVEXTPROC;
@foreign public const glVariantuivEXT: PFNGLVARIANTUIVEXTPROC;
@foreign public const glVariantPointerEXT: PFNGLVARIANTPOINTEREXTPROC;
@foreign public const glEnableVariantClientStateEXT: PFNGLENABLEVARIANTCLIENTSTATEEXTPROC;
@foreign public const glDisableVariantClientStateEXT: PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC;
@foreign public const glBindLightParameterEXT: PFNGLBINDLIGHTPARAMETEREXTPROC;
@foreign public const glBindMaterialParameterEXT: PFNGLBINDMATERIALPARAMETEREXTPROC;
@foreign public const glBindTexGenParameterEXT: PFNGLBINDTEXGENPARAMETEREXTPROC;
@foreign public const glBindTextureUnitParameterEXT: PFNGLBINDTEXTUREUNITPARAMETEREXTPROC;
@foreign public const glBindParameterEXT: PFNGLBINDPARAMETEREXTPROC;
@foreign public const glIsVariantEnabledEXT: PFNGLISVARIANTENABLEDEXTPROC;
@foreign public const glGetVariantBooleanvEXT: PFNGLGETVARIANTBOOLEANVEXTPROC;
@foreign public const glGetVariantIntegervEXT: PFNGLGETVARIANTINTEGERVEXTPROC;
@foreign public const glGetVariantFloatvEXT: PFNGLGETVARIANTFLOATVEXTPROC;
@foreign public const glGetVariantPointervEXT: PFNGLGETVARIANTPOINTERVEXTPROC;
@foreign public const glGetInvariantBooleanvEXT: PFNGLGETINVARIANTBOOLEANVEXTPROC;
@foreign public const glGetInvariantIntegervEXT: PFNGLGETINVARIANTINTEGERVEXTPROC;
@foreign public const glGetInvariantFloatvEXT: PFNGLGETINVARIANTFLOATVEXTPROC;
@foreign public const glGetLocalConstantBooleanvEXT: PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC;
@foreign public const glGetLocalConstantIntegervEXT: PFNGLGETLOCALCONSTANTINTEGERVEXTPROC;
@foreign public const glGetLocalConstantFloatvEXT: PFNGLGETLOCALCONSTANTFLOATVEXTPROC;
