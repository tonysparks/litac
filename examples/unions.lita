import "io"

union T {
	i:i32
	f:f32
	
	struct {
		c : char*
	}
}

struct V {
	u: T
	
	union _as {
		ii:i32
		ff:f32	
	}
}

union <V,T> U {
	u: V
	t: T
}

func main(len:i32, args:char**):i32 {
	/*var t = T { .i: 32 }
		
	io::printf("%d\n", t.i)
	io::printf("%f\n", t.f)
	io::printf("%f\n", t.c)*/
	
	var u = V { .u: T{ .i:3 }, ._as: _as { .ii: 4} }
	io::printf("%d\n", u.u.i)
	
	
	var z = <i32,i64>U { .u: 4 }
	io::printf("%d\n", z.u)
}