{
    description: "Enums",
    disabled: false,
    program: '''                
        @include("assert.h");
        @foreign func assert(e:bool):void;
        
        %definitions%
        
        func main(len:i32, args:char**):i32 {
            %test%
        }
    '''
    tests: [                           
        {
            name: "Enum asStr", 
            definitions: '''
                @include("<string.h>");
                @foreign func strcmp(a:char const*, b:char const*) : i32;
                
                @asStr
                enum Test {
                    A,
                    B
                }
            ''',                       
            code: '''
                
                assert(Test.A == 0)
                assert(strcmp(TestAsStr(Test.A), "A") == 0)
            ''',
        },
        {
            name: "Enum asStr with name", 
            definitions: '''
                @include("<string.h>");
                @foreign func strcmp(a:char const*, b:char const*) : i32;
                
                @asStr("ToStr")
                enum Test {
                    A,
                    B
                }
            ''',                       
            code: '''
                
                assert(Test.A == 0)
                assert(strcmp(ToStr(Test.A), "A") == 0)
            ''',
        },
        {
            name: "Enum inside struct", 
            definitions: '''
                @include("<string.h>");
                @foreign func strcmp(a:char const*, b:char const*) : i32;
                
                struct X {
                    @asStr("ToStr")
                    enum Test {
                        A,
                        B
                    }
                }
            ''',                       
            code: '''
                
                assert(Test.A == 0)
                assert(strcmp(ToStr(Test.A), "A") == 0)
            ''',
        },
    ]
}