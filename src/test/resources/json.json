{
    description: "Json",
    disabled: false,
    program: '''                
        @include("assert.h");
        @foreign func assert(e:bool):void;
        
        %definitions%
        
        func main(len:i32, args:char**):i32 {
            %test%
        }
    '''
    tests: [                           
        {
            name: "Json Parse",
           // disabled: true, 
            definitions: '''
                @include("<string.h>");
                @foreign func strcmp(a:char const*, b:char const*) : i32;
                
                import "json";
                import "string_buffer";
                import "io";
                
            ''',                       
            code: '''               
                var buf : StringBuffer;
                buf.init(16)
                
                var parser = Parser{}
                parser.init(null)
                defer parser.free()
                
                /*
                var data: char*;                                
                var status = readFile("C:/Users/antho/git/mini/assets/mini_city.json", &data)                
                if(status) {
                    printf("Failed to open\n")
                    return 1;
                }                                
                var n = ParseJson(data)
               
                PrintJson(n, &buf)
                printf("%s\n", buf.cStr())
                */
                
                var node = parser.parseJson("""
                    [
                         true, 4, false, "hi", 34343, null, [5],
                         {
                            "k" : "v"
                         }
                        
                    ]
                """)
                
                
                buf.clear()
                buf.append("\n")               
                PrintJson(node, &buf)
                
                printf("%s\n", buf.cStr())
                node.free()
            ''',
        },
    ]
}